/*
NOKIA
R&D Oulu
ISA Operations










            AUDIO Server ECI Message Macro definitions
            ------------------------------------------

            SW include - ANSI C




Continuus Ref:
--------------
database:           ou1gif

project path:       global_interface/ISI/Core

%name:              aud_eci_isi_m.h %

%version:           002.000 %

%cvtype:            incl %

%instance:          ou1core_1 %


Copyright(c)Nokia


Change history:

VERSION     : 002.000 NONDRAFT  15-Jan-2009 Seppo Jauho
REASON      : Change request
REFERENCE   : RM-RIM ID: 417-33851 SWAM CR: AN08120855382
DESCRIPTION : Xear compensation added to AUD_SB_ECI_DAC_ADC_LEVELS sb

VERSION     : 001.001 NONDRAFT  28-Nov-2006 Raija Kylmanen
REASON      : Change request
REFERENCE   : RM-RIM ID: 010-31520 SWAM CR: RK06112949175
DESCRIPTION : New sub-blocks: AUD_SB_ECI_DL_APE_PLAY_EQU_1_FIR,
            : AUD_SB_ECI_DL_APE_PLAY_EQU_2_FIR and AUD_SB_ECI_FIR_EQU_PARAMS

VERSION     : 001.000 NONDRAFT  19-Jan-2006 Mika P. Kangas
REASON      : Change request
REFERENCE   : RM-RIM ID 009-19849 SWAM CR: MK06012039990
DESCRIPTION : Modifed existing subblocks and created a new messages AUD_ECI_GAIN_COMPENSATION_REQ/RESP

VERSION     : 000.002 NONDRAFT  13-Dec-2005 Mika P. Kangas
REASON      : Change request
REFERENCE   : RM-RIM ID 009-19849 SWAM CR: MK05121336568
DESCRIPTION : Added subblock AUD_SB_ECI_DSDRC_PARAMS/PROPS

VERSION     : 000.001 NONDRAFT  07-Oct-2005 Mika P. Kangas
REASON      : Change request
REFERENCE   : RM-RIM ID 009-19849 / SWAM CR: MK05092652108 
DESCRIPTION : Created the file and implemented ECI Audio Block IF
              
*/


/* ------------------------------------------------------------------------- */


/*  1    ABSTRACT

    1.1    Module type

    Header file for the ISI Autogeneration Application


    1.2    Functional description

    This file is the message definition file for the ECI Audio Block


    1.3    Notes


    2    CONTENTS


    1    ABSTRACT
    1.1    Module type
    1.2    Functional description
    1.3    Notes

    2    CONTENTS

    3    CONSTANTS

    4    MACROS

    5    DATA TYPES

    6    CLASSES

    7    OBJECTS

    8    DATA STRUCTURES

    9    FUNCTION PROTOTYPES
*/

/*  3    CONSTANTS */

/* Message ID's */
#define AUD_ECI_AUDIO_BLOCK_REQ             0x70
#define AUD_ECI_AUDIO_BLOCK_RESP            0x71
#define AUD_ECI_AUDIO_BLOCK_FAIL_RESP       0x72
#define AUD_ECI_AUDIO_BLOCK_NTF             0x73
#define AUD_ECI_PARAM_CONF_REQ              0x74
#define AUD_ECI_PARAM_CONF_RESP             0x75
#define AUD_ECI_PARAM_CONF_FAIL_RESP        0x76
#define AUD_ECI_GAIN_COMPENSATION_REQ       0x77
#define AUD_ECI_GAIN_COMPENSATION_OK_RESP   0x78
#define AUD_ECI_GAIN_COMPENSATION_FAIL_RESP 0x79

/*ECI Subblocks*/
#define AUD_SB_ECI_GENERAL_PARAMS           0x01
#define AUD_SB_ECI_UPLINK_SENSITIVITY       0x02
#define AUD_SB_ECI_DOWNLINK_SENSITIVITY     0x03
#define AUD_SB_ECI_SIDETONE                 0x04
#define AUD_SB_ECI_ACOUSTIC_ECHO_CTRL       0x05
#define AUD_SB_ECI_USABLE_BANDS             0x06
#define AUD_SB_ECI_DISPL_THERM_LIMITS       0x07
#define AUD_SB_ECI_DAC_ADC_LEVELS           0x08
#define AUD_SB_ECI_DL_PEAK_VOL_LIMITS       0x09
#define AUD_SB_ECI_DL_TONE_SPEECH_EQU_IIR   0x0A
#define AUD_SB_ECI_DL_TONE_SPEECH_EQU_FIR   0x0B
#define AUD_SB_ECI_DL_APE_PLAY_EQU_1_IIR    0x0C
#define AUD_SB_ECI_DL_APE_PLAY_EQU_1_FIR    0x0D
#define AUD_SB_ECI_DL_APE_PLAY_EQU_2_IIR    0x0E
#define AUD_SB_ECI_DL_APE_PLAY_EQU_2_FIR    0x0F
#define AUD_SB_ECI_UL_APE_REC_EQU_1_IIR     0x10
#define AUD_SB_ECI_UL_APE_REC_EQU_1_FIR     0x11
#define AUD_SB_ECI_UL_APE_REC_EQU_2_IIR     0x12
#define AUD_SB_ECI_UL_APE_REC_EQU_2_FIR     0x13
#define AUD_SB_ECI_UL_SPEECH_EQU_IIR        0x14
#define AUD_SB_ECI_UL_SPEECH_EQU_FIR        0x15
#define AUD_SB_ECI_UL_SIDETONE_EQU_IIR      0x16
#define AUD_SB_ECI_UL_SIDETONE_EQU_FIR      0x17
#define AUD_SB_ECI_APE_PLAY_MUMDRC_PROPS    0x18
#define AUD_SB_ECI_APE_PLAY_MUMDRC_PARAMS   0x19
#define AUD_SB_ECI_GAIN_COMPENSATION        0x1A
#define AUD_SB_ECI_XPROT_PARAMS             0x1B
#define AUD_SB_ECI_DSDRC_PROPS              0x1C
#define AUD_SB_ECI_DSDRC_PARAMS             0x1D
#define AUD_SB_ECI_FIR_EQU_PARAMS           0x1E

/* CONSTANT for PMD PROPERTIES*/
#define NDEF 15

/* FIR equalizer */
#define AUD_ECI_IFIREQ_INTEGRATOR_SIZE     3

/*  4    MACROS */

/* these macros are redefined versions of the COMMON macros defined
   in isi_macros.h. These local versions are needed in order to
   generate a back-ward compatible header file
*/

/* This is used for new messages where struct name is generated by autogen */
#define AUD_ECI_COMMON_SB \
    REFERENCE(8, BE, SubBlockId, "Sub Block ID", SB_ID) \
    REFERENCE(8, BE, SubBlockLength, "Sub Block Length", SB_LENGTH) \
    
#define AUD_MSG_HDR_TO_8_BIT_ONLY \
        PROPERTY(PROPERTY_ISIHDR_DONT_GENERATE_16) \
        VALUE(8, BE, TransactionId, "Transaction ID", DEC) \
        PROPERTY(PROPERTY_ISIHDR_DONT_GENERATE_16) \
        REFERENCE(8, BE, MessageId, "Message ID", MSG_ID)

#ifndef AUD_ECI_ISI_VERSION
#define AUD_ECI_ISI_VERSION
#define AUD_ECI_ISI_VERSION_Z   2
#define AUD_ECI_ISI_VERSION_Y   0
#endif

/* version history and cover page information */
/* Project / Document properties */
PROPERTY_STRING(PROPERTY_PROJECT_SITE_NAME,                 "OULU")
PROPERTY_STRING(PROPERTY_PROJECT_NAME,                      "Harlekin")
PROPERTY_STRING(PROPERTY_PROJECT_OWNER_NAME,                "Mika P. Kangas")
PROPERTY_STRING(PROPERTY_PROJECT_CONFIDENTIALITY,           "CONFIDENTIAL")

/* HTML properties */
PROPERTY_STRING(PROPERTY_HTML_TITLE,                        "ISI AUDIO Server ECI Audio Block Message Description")
PROPERTY_STRING(PROPERTY_HTML_FILENAME,                     "i_aud_eci_isi_m.html")
PROPERTY_STRING(PROPERTY_HTML_DOCUMENT_NUMBER,              "-")
PROPERTY_STRING(PROPERTY_HTML_CONTINUUS_PROJECT_DB,         "ou1gif")
PROPERTY_STRING(PROPERTY_HTML_CONTINUUS_PROJECT_NAME,       "GIF_SPECS-ou1gif#browse")
PROPERTY_STRING(PROPERTY_HTML_DIRECTORY_PATH,               "GIF_SPECS/CoreSW")
PROPERTY(PROPERTY_HTML_INCLUDE_INTRODUCTION)

/* ISIHDR properties */
PROPERTY_STRING(PROPERTY_ISIHDR_CONTINUUS_INSTANCE_NAME,    "ou_pcms#1")
PROPERTY_STRING(PROPERTY_ISIHDR_CONTINUUS_INSTANCE_NAME_16, "ou_pcms#1")
PROPERTY_STRING(PROPERTY_ISIHDR_CONTINUUS_PROJECT_DB,       "ou1gif")
PROPERTY_STRING(PROPERTY_ISIHDR_CONTINUUS_PROJECT_PATH,     "global_interface/ISI/Core")
PROPERTY_STRING(PROPERTY_ISIHDR_CONTINUUS_PROJECT_PATH_16,  "global_interface/ISI/Core")
PROPERTY_STRING(PROPERTY_ISIHDR_FILENAME,                   "audio_eci_isi.h")
PROPERTY_STRING(PROPERTY_ISIHDR_FILENAME_16,                "audio_eci_isi_16.h")


RES_BEGIN(RESOURCE_ISI_EXTENSION, PN_AUDIO, AUD_ECI, "ECI audio Block",
    RES_VERSION_STRING(AUD_ECI_ISI_VERSION_Z, AUD_ECI_ISI_VERSION_Y), FALSE)

    /* --------------------------------------------------------------------- */
    /* ISI version history */
    /* --------------------------------------------------------------------- */

    /* TODO: Add version history block every time the interface is changed */

    /* Latest version */
    PROPERTY_STRING(PROPERTY_CHANGE_REASON,    "Change request")
    PROPERTY_STRING(PROPERTY_CHANGE_REFERENCE, "ADB SWAM CR AN08120855382")
    PROPERTY_STRING(PROPERTY_CHANGE_STATUS,    "NON-DRAFT")
    PROPERTY_STRING(PROPERTY_CHANGE_DATE,      "15-Jan-2009")
    PROPERTY_STRING(PROPERTY_CHANGE_PERSON,    "Seppo Jauho")
    COMMENT(COMMENT_TEXT, "File Updated ")
    ISI_VERSION_HISTORY("002.000")
    
    PROPERTY_STRING(PROPERTY_CHANGE_REASON,    "Change request")
    PROPERTY_STRING(PROPERTY_CHANGE_REFERENCE, "ADB SWAM CR RK06112949175")
    PROPERTY_STRING(PROPERTY_CHANGE_STATUS,    "NON-DRAFT")
    PROPERTY_STRING(PROPERTY_CHANGE_DATE,      "28-Nov-2006")
    PROPERTY_STRING(PROPERTY_CHANGE_PERSON,    "Raija Kylmanen")
    COMMENT(COMMENT_TEXT, "File Updated ")
    ISI_VERSION_HISTORY("001.001")

    PROPERTY_STRING(PROPERTY_CHANGE_REASON,    "Change request")
    PROPERTY_STRING(PROPERTY_CHANGE_REFERENCE, "ADB SWAM CR MK06012039990")
    PROPERTY_STRING(PROPERTY_CHANGE_STATUS,    "NON-DRAFT")
    PROPERTY_STRING(PROPERTY_CHANGE_DATE,      "19-Jan-2006")
    PROPERTY_STRING(PROPERTY_CHANGE_PERSON,    "Mika P. Kangas")
    COMMENT(COMMENT_TEXT, "File Updated ")
    ISI_VERSION_HISTORY("001.000")

    PROPERTY_STRING(PROPERTY_CHANGE_REASON,    "Change request")
    PROPERTY_STRING(PROPERTY_CHANGE_REFERENCE, "ADB SWAM CR MK05121336568")
    PROPERTY_STRING(PROPERTY_CHANGE_STATUS,    "NON-DRAFT")
    PROPERTY_STRING(PROPERTY_CHANGE_DATE,      "13-Dec-2005")
    PROPERTY_STRING(PROPERTY_CHANGE_PERSON,    "Mika P. Kangas")
    COMMENT(COMMENT_TEXT, "File Updated ")
    ISI_VERSION_HISTORY("000.002")

    PROPERTY_STRING(PROPERTY_CHANGE_REASON,    "Change request")
    PROPERTY_STRING(PROPERTY_CHANGE_REFERENCE, "ADB SWAM CR MK05092652108")
    PROPERTY_STRING(PROPERTY_CHANGE_STATUS,    "NON-DRAFT")
    PROPERTY_STRING(PROPERTY_CHANGE_DATE,      "07-Oct-2005")
    PROPERTY_STRING(PROPERTY_CHANGE_PERSON,    "Mika P. Kangas")
    COMMENT(COMMENT_TEXT, "File created and ECI Audio Block implemented ")
    ISI_VERSION_HISTORY("000.001")
    /* end of version history */

/* CONSTANT TABLES */

    /***************************************/
    /* ECI audio block parameters */
    /***************************************/
  
    CONST_TBL_BEGIN(AUD_ECI_ACCESSORY, 8, BE, "000.001", "")
      CONST_TBL_ENTRY(AUD_ECI_ACCESSORY_HD,              0x00, "Headset")
      CONST_TBL_ENTRY(AUD_ECI_ACCESSORY_LPS,             0x01, "Loopset")
      CONST_TBL_ENTRY(AUD_ECI_ACCESSORY_HF_CAR,          0x02, "Car handsfree")
      CONST_TBL_ENTRY(AUD_ECI_ACCESSORY_HF_OFFICE,       0x03, "Home/office handsfree")
      CONST_TBL_ENTRY(AUD_ECI_ACCESSORY_HF_MUSIC,        0x04, "Music Listening decive ")
      CONST_TBL_ENTRY(AUD_ECI_ACCESSORY_WIRE,            0x05, "Wire or adapter ")
      CONST_TBL_ENTRY(AUD_ECI_ACCESSORY_TTY,             0x06, "TTY")
    CONST_TBL_END
  
    CONST_TBL_BEGIN(AUD_ECI_USER_VOLUME, 8, BE, "000.001", "")
      CONST_TBL_ENTRY(AUD_ECI_USER_VOLUME_OFF,           0x00, "User is not able to adjust the phone volume")
      CONST_TBL_ENTRY(AUD_ECI_USER_VOLUME_ON,            0x01, "User is able to adjust the phone volume")
    CONST_TBL_END
  
    CONST_TBL_BEGIN(AUD_ECI_WIND_NOISE_REDUCTION, 8, BE, "000.001", "")
      CONST_TBL_ENTRY(AUD_ECI_WIND_NOISE_RED_ACC_OFF,        0x00, "Wind Noise Reduction OFF (WNR not used in Accessory) ")
      CONST_TBL_ENTRY(AUD_ECI_WIND_NOISE_RED_ACC_ON,         0x01, "Wind Noise Reduction ON (WNR is in use in attached Accessory) ")
    CONST_TBL_END

    CONST_TBL_BEGIN(AUD_ECI_DL_DRC, 8, BE, "000.001", "")
      CONST_TBL_ENTRY(AUD_ECI_DL_DRC_ACC_OFF,                0x00, "Accessory does not have Dynamic Range Control. (OFF)")
      CONST_TBL_ENTRY(AUD_ECI_DL_DRC_ACC_ON,                 0x01, "Accessory has Dynamic Range Control (ON)")
    CONST_TBL_END
  
    CONST_TBL_BEGIN(AUD_ECI_DL_NG, 8, BE, "000.001", "")
      CONST_TBL_ENTRY(AUD_ECI_DL_NG_ACC_OFF,                 0x00, "Accessory does not have DL noise dependant gaining (OFF), DSP should disable the feature")
      CONST_TBL_ENTRY(AUD_ECI_DL_NG_ACC_ON,                  0x01, "Accessory has DL noise dependant gaining (ON), DSP should enable the feature")
    CONST_TBL_END
  
    CONST_TBL_BEGIN(AUD_ECI_HIGH_FREQ_COMP, 8, BE, "000.001", "")
      CONST_TBL_ENTRY(AUD_ECI_HIGH_FREQ_COMP_ACC_OFF,        0x00, "Accessory does not have High frequency compensation (OFF)")
      CONST_TBL_ENTRY(AUD_ECI_HIGH_FREQ_COMP_ACC_ON,         0x01, "Accessory does has High frequency compensation (ON)")
    CONST_TBL_END
  
    CONST_TBL_BEGIN(AUD_ECI_DL_NORM, 8, BE, "000.001", "")
      CONST_TBL_ENTRY(AUD_ECI_DL_NORM_ACC_OFF,               0x00, "Accessory does not have Downlink normalisation (OFF)")
      CONST_TBL_ENTRY(AUD_ECI_DL_NORM_ACC_ON,                0x01, "Accessory does has Downlink normalisation (ON)")
    CONST_TBL_END
    
    CONST_TBL_BEGIN(AUD_ECI_DL_NS, 8, BE, "000.001", "")
      CONST_TBL_ENTRY(AUD_ECI_DL_NS_ACC_OFF,                 0x00, "Accessory does not have Downlink noise suppressor (OFF)")
      CONST_TBL_ENTRY(AUD_ECI_DL_NS_ACC_ON,                  0x01, "Accessory does has Downlink noise suppressor (ON)")
    CONST_TBL_END
  
    COMMENT(COMMENT_PARAGRAPH,
          " Data defines variation in DL frequency responses between accessories"
	  " in mono case or between left and right channels in stereo case. ")
    CONST_TBL_BEGIN(AUD_ECI_DOWNLINK_QUALITY, 8, BE, "000.001", "")
      CONST_TBL_ENTRY(AUD_ECI_DOWNLINK_QUALITY_LOW,       0x00, "Max variance in relative response > 5 dB ")
      CONST_TBL_ENTRY(AUD_ECI_DOWNLINK_QUALITY_MEDIUM,    0x01, "Max variance in relative response < 5 dB ")
      CONST_TBL_ENTRY(AUD_ECI_DOWNLINK_QUALITY_GOOD,      0x02, "Max variance in relative response < 3 dB ")
      CONST_TBL_ENTRY(AUD_ECI_DOWNLINK_QUALITY_EXCELLENT, 0x03, "Max variance in relative response < 2 dB ")
    CONST_TBL_END
  
    CONST_TBL_BEGIN(AUD_ECI_AEC_ATTENUATORS, 8, BE, "000.001", "")
      CONST_TBL_ENTRY(AUD_ECI_AEC_ATTENUATORS_OFF,      0x00, "Attenuators are NOT needed")
      CONST_TBL_ENTRY(AUD_ECI_AEC_ATTENUATORS_ON,       0x01, "Attenuators are needed")
    CONST_TBL_END

    COMMENT(COMMENT_PARAGRAPH, "Existence of Acoustic Echo from DL to UL in Accessory")
    CONST_TBL_BEGIN(AUD_ECI_EX_ACOUSTIC_ECHO, 8, BE, "000.001", "")
      CONST_TBL_ENTRY(AUD_ECI_EX_ACOUSTIC_NO,           0x00, "Acoustic echo cancellation disabled in Accessory, Set Echo cancellation ON in phone")
      CONST_TBL_ENTRY(AUD_ECI_EX_ACOUSTIC_YES,          0x01, "Acoustic echo cancellation enabled in Accessory, Set Echo Cancellation OFF in phone")
    CONST_TBL_END
  
    COMMENT(COMMENT_PARAGRAPH,
          " Slow choice should be used in case when echo path does not changes fast,"
          " for example when mic and loudspeaker have constant distance. ")
    CONST_TBL_BEGIN(AUD_ECI_ECHO_RATE_CHANGE, 8, BE, "000.001", "")
      CONST_TBL_ENTRY(AUD_ECI_ECHO_RATE_CHANGE_SLOW,    0x00, "Change of the rate is slow")
      CONST_TBL_ENTRY(AUD_ECI_ECHO_RATE_CHANGE_FAST,    0x01, "Change of rate is fast")
    CONST_TBL_END
  
    COMMENT(COMMENT_PARAGRAPH,
          " Defines the lowest practically usable frequency of uplink. In practice -3 dB point. ")
    CONST_TBL_BEGIN(AUD_ECI_USABLE_UL_LF, 16, BE, "000.001", "")
      CONST_TBL_ENTRY(AUD_ECI_USABLE_UL_LF_20HZ,        0x01, "20 Hz")
      CONST_TBL_ENTRY(AUD_ECI_USABLE_UL_LF_50HZ,        0x04, "50 Hz")
      CONST_TBL_ENTRY(AUD_ECI_USABLE_UL_LF_150HZ,       0x08, "150 Hz")
      CONST_TBL_ENTRY(AUD_ECI_USABLE_UL_LF_300HZ,       0x10, "300 Hz")
    CONST_TBL_END
  
    COMMENT(COMMENT_PARAGRAPH,
          " Defines the lowest practically usable frequency of uplink. In practice -3 dB point. ")
    CONST_TBL_BEGIN(AUD_ECI_USABLE_UL_HF, 16, BE, "000.001", "")
      CONST_TBL_ENTRY(AUD_ECI_USABLE_UL_HF_4KHZ,        0x01, "4 kHz")
      CONST_TBL_ENTRY(AUD_ECI_USABLE_UL_HF_6KHZ,        0x04, "6 kHz")
      CONST_TBL_ENTRY(AUD_ECI_USABLE_UL_HF_9KHZ,        0x08, "9 kHz")
      CONST_TBL_ENTRY(AUD_ECI_USABLE_UL_HF_20KHZ,       0x10, "20 kHz")
    CONST_TBL_END

    COMMENT(COMMENT_PARAGRAPH,
          " Defines the lowest practically usable frequency of downlink. In practice -3 dB point. ")
    CONST_TBL_BEGIN(AUD_ECI_USABLE_DL_HF, 16, BE, "000.001", "")
      CONST_TBL_ENTRY(AUD_ECI_USABLE_DL_HF_4KHZ,        0x01, "4 kHz")
      CONST_TBL_ENTRY(AUD_ECI_USABLE_DL_HF_6KHZ,        0x04, "6 kHz")
      CONST_TBL_ENTRY(AUD_ECI_USABLE_DL_HF_9KHZ,        0x08, "9 kHz")
      CONST_TBL_ENTRY(AUD_ECI_USABLE_DL_HF_20KHZ,       0x10, "20 kHz")
    CONST_TBL_END  
  
    COMMENT(COMMENT_PARAGRAPH,
           " There are three different choices for frequency at the moment 8, 16 and 48 kHz.")
    CONST_TBL_BEGIN(AUD_ECI_EQ_FREQ_RATE, 8, BE, "000.001", "")
      CONST_TBL_ENTRY(AUD_ECI_EQ_FREQ_8KHZ,            0x01, "8 kHz")
      CONST_TBL_ENTRY(AUD_ECI_EQ_FREQ_16KHZ,           0x04, "16 kHz")
      CONST_TBL_ENTRY(AUD_ECI_EQ_FREQ_48KHZ,           0x09, "48 kHz")
    CONST_TBL_END
    
    CONST_TBL_BEGIN(AUD_ECI_GAIN_COMP_REASON, 16, BE, "000.001", "")
      CONST_TBL_ENTRY(AUD_ECI_MIXER,                   0x00, "Mixer")
      CONST_TBL_ENTRY(AUD_ECI_PEAK_VALUE,              0x01, "Peak Value")
      CONST_TBL_ENTRY(AUD_ECI_RMS_VALUE,               0x02, "RMS Value")
    CONST_TBL_END
    
    CONST_TBL_BEGIN(AUD_ECI_GAIN_COMP_PHYS_STRM, 16, BE, "000.001", "001.000")
      CONST_TBL_ENTRY(AUD_ECI_AUDIO_PLAY,              0x00, "Audio Playback")
      CONST_TBL_ENTRY(AUD_ECI_SPEECH_PLAY,             0x01, "Speech Playback")
      CONST_TBL_ENTRY(AUD_ECI_RM_RADIO,                0x02, "FM Radio")
    CONST_TBL_END

    CONST_TBL_BEGIN(AUD_ECI_GAIN_COMP_SIGNAL_PATH, 16, BE, "001.000", "")
      CONST_TBL_ENTRY(AUD_ECI_CMT_TONE,                0x00, "CMT Tone")
      CONST_TBL_ENTRY(AUD_ECI_CS_DL_SPEECH,            0x01, "CS Downlink Speech")
      CONST_TBL_ENTRY(AUD_ECI_SYMBIAN_SPEECH_PLAY,     0x02, "Symbian Speech Playback")
      CONST_TBL_ENTRY(AUD_ECI_SYMBIAN_AUDIO_PLAY,      0x03, "Symbian Audio Playback")
      CONST_TBL_ENTRY(AUD_ECI_FM_RADIO,                0x04, "FM Radio")
      CONST_TBL_ENTRY(AUD_ECI_SYMBIAN_AUDIO_REC,       0x05, "Symbian Audio Recording")
      CONST_TBL_ENTRY(AUD_ECI_SYMBIAN_SPEECH_REC,      0x06, "Symbian Speech Recording")
      CONST_TBL_ENTRY(AUD_ECI_CS_UL_SPEECH,            0x07, "CS Uplink Speech")
    CONST_TBL_END  
    
    CONST_TBL_BEGIN(AUD_ECI_COMMON_BITS_PER_SAMPLE, 16, BE, "001.001", "")
      CONST_TBL_ENTRY(AUD_ECI_16_BITS_PER_SAMPLE, 0x0000, "16 bit MSB align")
      CONST_TBL_ENTRY(AUD_ECI_20_BITS_PER_SAMPLE, 0x0001, "20 bit MSB align (reserved)")
      CONST_TBL_ENTRY(AUD_ECI_24_BITS_PER_SAMPLE, 0x0002, "24 bit MSB align (reserved)")
      CONST_TBL_ENTRY(AUD_ECI_32_BITS_PER_SAMPLE, 0x0003, "32 bit MSB align")
    CONST_TBL_END
    
/* BIT TABLES */

        COMMENT(COMMENT_PARAGRAPH, " Will include Downlink specific config information ")
    BIT_TBL_BEGIN(AUD_ECI_DL_UL_CONFIGURATIONS, 16, BE, "000.001", "")
          BIT_TBL_ENTRY("XXXXXXXX00000000", AUD_ECI_DL_OFF,     "All Downlink paths are disabled")
          BIT_TBL_ENTRY("00000000XXXXXXXX", AUD_ECI_UL_OFF,     "All Uplink paths are disabled")
          BIT_TBL_ENTRY("XXXXXXX1XXXXXXXX", AUD_ECI_HP_MIC_ON,  "Phones own mic is enabled")
          BIT_TBL_ENTRY("XXXXXX1XXXXXXXXX", AUD_ECI_ACC_MIC_ON, "Accessory's Uplink (mic) is available for speech call")
    BIT_TBL_END

/* SEQUENCE DEFINITIONS */

/* General types for data sequences */

    SEQ_BEGIN(AUD_DATA_UINT16, DONT_CREATE_STRUCT, "001.000", "")
      VALUE(16, BE, data, "Data", HEX)
    SEQ_END

    SEQ_BEGIN(AUD_DATA_INT16, DONT_CREATE_STRUCT, "001.001", "")
      VALUE(-16, BE, data, "Data", HEX)
    SEQ_END

/* IIR equalizers */
    
    COMMENT(COMMENT_PARAGRAPH,
            "Uplink / downlink equalizer filter block data.")
    SEQ_BEGIN(AUD_ECI_EQU_IIR_BLOCK_DATA, CREATE_STRUCT, "000.001", "001.000")
      COMMENT(COMMENT_PARAGRAPH, "Number of Blocks - 1")
      VALUE(16, BE, word0, "Number of IIR blocks - 1", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Offset to B coefficients")
      VALUE(16, BE, word1, "4 * (number of IIR blocks) + 1", HEX)
      COMMENT(COMMENT_PARAGRAPH,
              "(1) Lines 1-4 are repeated as many times as many second "
              "order IIR blocks are used.")
      VALUE(16, BE, word2, "Shift1 / 3", HEX)
      COMMENT(COMMENT_PARAGRAPH, "(2)")
      VALUE(16, BE, word3, "Shift2", HEX)
      COMMENT(COMMENT_PARAGRAPH, "(3)")
      VALUE(16, BE, word4, "-A2", HEX)
      COMMENT(COMMENT_PARAGRAPH, "(4)")
      VALUE(16, BE, word5, "-A1", HEX)
      COMMENT(COMMENT_PARAGRAPH, "Filter output")
      VALUE(16, BE, word6, "Shift3", HEX)
      COMMENT(COMMENT_PARAGRAPH,
              "(5) Lines 5-7 are repeated as many times as many second "
              "order IIR blocks are used")
      VALUE(16, BE, word7, "B2", HEX)
      COMMENT(COMMENT_PARAGRAPH, "(6)")
      VALUE(16, BE, word8, "B1", HEX)
      COMMENT(COMMENT_PARAGRAPH, "(7)")
      VALUE(16, BE, word9, "B0", HEX)
    SEQ_END

    PROPERTY(PROPERTY_ISIHDR_DONT_GENERATE)
    COMMENT(COMMENT_PARAGRAPH,
            "Uplink / downlink equalizer filter block data.")
    SEQ_BEGIN(AUD_ECI_EQU_IIR_BLOCK_DATA, CREATE_STRUCT, "001.000", "")
      COMMENT(COMMENT_PARAGRAPH, "Number of IIR Blocks - 1")
      VALUE(16, BE, word0, "word0", DEC)
      COMMENT(COMMENT_PARAGRAPH, "4 * (number of IIR blocks) + 1 ; Offset to B coefficients")
      VALUE(16, BE, word1, "word1", HEX)
      COMMENT(COMMENT_PARAGRAPH,
              "Shift1 / 3"
              "Lines 1-4 are repeated as many times as many second "
              "order IIR blocks are used.")
      VALUE(16, BE, word2, "word2", HEX)
      COMMENT(COMMENT_PARAGRAPH, "Shift2")
      VALUE(16, BE, word3, "word3", HEX)
      COMMENT(COMMENT_PARAGRAPH, "-A2")
      VALUE(16, BE, word4, "word4", HEX)
      COMMENT(COMMENT_PARAGRAPH, "-A1")
      VALUE(16, BE, word5, "word5", HEX)
      COMMENT(COMMENT_PARAGRAPH, "Shift3 ; Filter output")
      VALUE(16, BE, word6, "word6", HEX)
      COMMENT(COMMENT_PARAGRAPH,
              "B2"
              "Lines 5-7 are repeated as many times as many second "
              "order IIR blocks are used")
      VALUE(16, BE, word7, "word7", HEX)
      COMMENT(COMMENT_PARAGRAPH, "B1")
      VALUE(16, BE, word8, "word8", HEX)
      COMMENT(COMMENT_PARAGRAPH, "B0")
      VALUE(16, BE, word9, "word9", HEX)
    SEQ_END

/* SUBBLOCKS */

    /* ------------------------------------------------------------------ */
    /* AUD_SB_ECI_GENERAL_PARAMS*/
    /* ------------------------------------------------------------------ */
    SB_BEGIN(AUD_SB_ECI_GENERAL_PARAMS, "000.001", "")
      AUD_ECI_COMMON_SB
      PROPERTY(PROPERTY_PMD_PARAMETER)
      COMMENT(COMMENT_PARAGRAPH, "Audio mode value from ECI Audio Block")
      VALUE_CONST(accessory_mode, "Accessory Mode", AUD_ECI_ACCESSORY)
      PROPERTY(PROPERTY_PMD_PARAMETER)
      COMMENT(COMMENT_PARAGRAPH, "To propose phone to disable (=0) or enable (=1; normal situation) user adjustable volume setting in phone. ")
      COMMENT(COMMENT_PARAGRAPH, "In the disable case, the volume setting is fixed to same volume than in nominal volume level (5/10). ")
      COMMENT(COMMENT_PARAGRAPH, "The disable case can be chosen when the accessory has it's own volume controls and potentially DSP. ")
      VALUE_CONST(user_volume, "User Volume", AUD_ECI_USER_VOLUME)     
      COMMENT(COMMENT_PARAGRAPH, "ECI Downlink and Uplink Configurations")
      VALUE_CONST(dlul_conf, "DL and UL Configurations", AUD_ECI_DL_UL_CONFIGURATIONS)
      COMMENT(COMMENT_PARAGRAPH, "Distance between the loudspeakers."
                                 "Compared to default 30 cm usage distance."
                                 "Distance is needed to calculate the stereo widening")
      VALUE(16, BE, ihf_distance, "IHF Distance", HEX)
    SB_END
  
    /* ------------------------------------------------------------------ */
    /* AUD_SB_ECI_UPLINK_SENSITIVITY*/
    /* ------------------------------------------------------------------ */
    SB_BEGIN(AUD_SB_ECI_UPLINK_SENSITIVITY, "000.001", "")
      AUD_ECI_COMMON_SB
      COMMENT(COMMENT_PARAGRAPH, "Sensitivity of uplink speech ")
      PROPERTY(PROPERTY_PMD_PARAMETER)
      PROPERTY_VALUE(PROPERTY_ITEM_EXCEPTIONAL_VALUE,OFF)
      PROPERTY_VALUE(PROPERTY_ITEM_MINIMUM_VALUE, 1)
      PROPERTY_VALUE(PROPERTY_ITEM_MAXIMUM_VALUE, 63)
      VALUE_EX(16, BE, ul_sensitivity, "UL Sensitivity", DEC, -1.0, 3.0, "dB")
      COMMENT(COMMENT_PARAGRAPH, "Existence of Uplink Wind Noise Reduction in the attached Accessory.")
      VALUE_CONST(wn_reduction, "Wind Noise Reduction", AUD_ECI_WIND_NOISE_REDUCTION)
      FILLER_EX(Reserved1, 8 , 1)
      PROPERTY_VALUE(PROPERTY_ITEM_EXCEPTIONAL_VALUE,OFF)
      PROPERTY_VALUE(PROPERTY_ITEM_MINIMUM_VALUE, 1)
      PROPERTY_VALUE(PROPERTY_ITEM_MAXIMUM_VALUE, 15)
      VALUE_EX(16, BE, ul_amb_noise, "Ambient Noise Reduction", DEC, -2.0, 10.0, "dBV" )
    SB_END
  
    /* ------------------------------------------------------------------ */
    /* AUD_SB_ECI_DOWNLINK_SENSITIVITY*/
   /* ------------------------------------------------------------------ */
    SB_BEGIN(AUD_SB_ECI_DOWNLINK_SENSITIVITY, "000.001", "")
      AUD_ECI_COMMON_SB
      PROPERTY(PROPERTY_PMD_PARAMETER)
      COMMENT(COMMENT_PARAGRAPH, "Downlink Dynamic Range Control")
      VALUE_CONST(dl_drc, "Downlink DRC", AUD_ECI_DL_DRC)
      PROPERTY(PROPERTY_PMD_PARAMETER)
      COMMENT(COMMENT_PARAGRAPH, "Downlink Noise Gaining")
      VALUE_CONST(dl_ng, "Downlink Noise Gaining", AUD_ECI_DL_NG)
      PROPERTY(PROPERTY_PMD_PARAMETER)
      COMMENT(COMMENT_PARAGRAPH, "Existence of DL High frequency compensation in accessory," 
                                 "for example to improve intelligibility. ")
      VALUE_CONST(hr_compensation, "High Freq Compensation", AUD_ECI_HIGH_FREQ_COMP)
      PROPERTY(PROPERTY_PMD_PARAMETER)
      COMMENT(COMMENT_PARAGRAPH, "Downlink Normalisation. This is voluntary bit, meaning that accessory would"
                                 " benefit from long term speech level normalization, for example loopset users.")
      VALUE_CONST(hr_normalisation, "DL Normalisation", AUD_ECI_DL_NORM)
      PROPERTY(PROPERTY_PMD_PARAMETER)
      COMMENT(COMMENT_PARAGRAPH, "Existence of Downlink Noise Suppressor in accessory. ")
      VALUE_CONST(dl_ns, "DL Noise Suppressor", AUD_ECI_DL_NS)
      PROPERTY(PROPERTY_PMD_PARAMETER)
      COMMENT(COMMENT_PARAGRAPH, " Data defines variation in DL frequency responses between accessories"
                                 " in mono case or between left and right channels in stereo case. ")
      VALUE_CONST(dl_quality, "Downlink Quality", AUD_ECI_DOWNLINK_QUALITY)
      PROPERTY(PROPERTY_PMD_PARAMETER)
      COMMENT(COMMENT_PARAGRAPH, "Long time Voltage limit.")
      PROPERTY_VALUE(PROPERTY_ITEM_MINIMUM_VALUE, 0)
      PROPERTY_VALUE(PROPERTY_ITEM_MAXIMUM_VALUE, 15)
      VALUE_EX(16, BE, ltime_vol_limit, "Long Time Voltage Limit", DEC, -2.0, 10.0, "dBV" )
      FILLER_EX(Reserved1, 16, 1)
    SB_END
  
    /* ------------------------------------------------------------------ */
    /* AUD_SB_ECI_DL_PEAK_VOL_LIMITS*/
    /* ------------------------------------------------------------------ */
    SB_BEGIN(AUD_SB_ECI_DL_PEAK_VOL_LIMITS, "000.001", "")
      AUD_ECI_COMMON_SB
      PROPERTY(PROPERTY_PMD_PARAMETER)
      PROPERTY_VALUE(PROPERTY_ITEM_MINIMUM_VALUE, 0)
      PROPERTY_VALUE(PROPERTY_ITEM_MAXIMUM_VALUE, 15)
      COMMENT(COMMENT_PARAGRAPH, "Cutoff frequencies/single band use.")
      COMMENT(COMMENT_PARAGRAPH, "0000 = Limitation is used in single band")
      COMMENT(COMMENT_PARAGRAPH, "f1/f2|	1500	1725 	1980	2275	2610")
      COMMENT(COMMENT_PARAGRAPH, "----------------------------------------------")
      COMMENT(COMMENT_PARAGRAPH, "700_| 	0001	0010	0011	------	------")
      COMMENT(COMMENT_PARAGRAPH, "830_|	0100	0101	0110	0111	------")
      COMMENT(COMMENT_PARAGRAPH, "990_|	------  1000	1001	1010	1011")
      COMMENT(COMMENT_PARAGRAPH, "1175|	------  ------  1100	1101	1110")
      COMMENT(COMMENT_PARAGRAPH, "1400|	------  ------	------	1111	------")
      VALUE(16, BE, cutoff_freq, "Cutoff freqs", HEX)
      PROPERTY(PROPERTY_PMD_PARAMETER)
      PROPERTY_VALUE(PROPERTY_ITEM_MINIMUM_VALUE, 0)
      PROPERTY_VALUE(PROPERTY_ITEM_MAXIMUM_VALUE, 15)
      COMMENT(COMMENT_PARAGRAPH, "Low time limitation.")
      VALUE_EX(16, BE, low_band_limit, "Low band Limitation", DEC, -2.0, 15.0, "dBV" )
      PROPERTY(PROPERTY_PMD_PARAMETER)
      PROPERTY_VALUE(PROPERTY_ITEM_MINIMUM_VALUE, 0)
      PROPERTY_VALUE(PROPERTY_ITEM_MAXIMUM_VALUE, 7)
      COMMENT(COMMENT_PARAGRAPH, "Low time limitation.")
      VALUE_EX(16, BE, mid_band_limit, "Middle band Limitation", DEC, -3.0, 15.0, "dBV" )
      PROPERTY(PROPERTY_PMD_PARAMETER)
      PROPERTY_VALUE(PROPERTY_ITEM_MINIMUM_VALUE, 0)
      PROPERTY_VALUE(PROPERTY_ITEM_MAXIMUM_VALUE, 7)
      COMMENT(COMMENT_PARAGRAPH, "Low time limitation.")
      VALUE_EX(16, BE, high_band_limit, "High band Limitation", DEC, -3.0, 15.0, "dBV" )
      FILLER_EX(Reserved1, 16, 1)
    SB_END
      
    /* ------------------------------------------------------------------ */
    /* AUD_SB_ECI_ACOUSTIC_ECHO_CTRL*/
    /* ------------------------------------------------------------------ */  
    SB_BEGIN(AUD_SB_ECI_ACOUSTIC_ECHO_CTRL, "000.001", "")
      AUD_ECI_COMMON_SB
      PROPERTY(PROPERTY_PMD_PARAMETER)
      COMMENT(COMMENT_PARAGRAPH, "Existence of Acoustic Echo from DL to UL in Accessory")
      VALUE_CONST(ex_acoustic_echo, "Ex Acoustic Echo", AUD_ECI_EX_ACOUSTIC_ECHO)
      PROPERTY(PROPERTY_PMD_PARAMETER)
      COMMENT(COMMENT_PARAGRAPH, "Need of terminal AEC Attenuators")
      VALUE_CONST(aec_att, "AEC Att", AUD_ECI_AEC_ATTENUATORS)
      PROPERTY(PROPERTY_PMD_PARAMETER)
      COMMENT(COMMENT_PARAGRAPH, "Defines how quickly the echo path is assumed to change in real usage.")
      VALUE_CONST(echo_rate, "Echo Rate of Change", AUD_ECI_ECHO_RATE_CHANGE)
      FILLER_EX(Reserved1, 8, 1)
      COMMENT(COMMENT_PARAGRAPH, "Maximum Echo Gain, Loudness of echo ")
      VALUE(16, BE, max_echo_gain, "Max echo gain", HEX)
      COMMENT(COMMENT_PARAGRAPH, "Echo delay seen by connectors from UL to DL. ")
      VALUE(16, BE, min_delay, "Min Pure Delay", HEX)
      COMMENT(COMMENT_PARAGRAPH, "Proposed minimum length of audible acoustic echo used in AEC filter.")
      VALUE(16, BE, min_filter_len, "Min Filter Length", HEX)
    SB_END
  
    /* ------------------------------------------------------------------ */
    /* AUD_SB_ECI_SIDETONE*/
    /* ------------------------------------------------------------------ */

    SB_BEGIN(AUD_SB_ECI_SIDETONE, "000.001", "")
      AUD_ECI_COMMON_SB
      PROPERTY(PROPERTY_PMD_PARAMETER)
      PROPERTY_VALUE(PROPERTY_ITEM_EXCEPTIONAL_VALUE,NDEF)
      PROPERTY_VALUE(PROPERTY_ITEM_MINIMUM_VALUE, 0)
      PROPERTY_VALUE(PROPERTY_ITEM_MAXIMUM_VALUE, 14)
      COMMENT(COMMENT_PARAGRAPH, "Sidetone Delta-G is to attenuate a default sidetone level"
                                 " (from uplink to downlink) of an accessory type.")
      VALUE_EX(16, BE, stmr, "Sidetone Delta G", DEC, -1.0, 0.0, "dBV" )
    SB_END
  
    /* ------------------------------------------------------------------ */
    /* AUD_SB_ECI_USABLE_BANDS*/
    /* ------------------------------------------------------------------ */
    SB_BEGIN(AUD_SB_ECI_USABLE_BANDS, "000.001", "")
      AUD_ECI_COMMON_SB
      COMMENT(COMMENT_PARAGRAPH, "Uplink usable low frequency limit")
      VALUE_CONST(ul_lf, "UL LF Limit", AUD_ECI_USABLE_UL_LF)
      COMMENT(COMMENT_PARAGRAPH, "Uplink usable high frequency limit")
      VALUE_CONST(ul_hf, "UL HF Limit", AUD_ECI_USABLE_UL_HF)
      COMMENT(COMMENT_PARAGRAPH, "Downlink usable high frequency limit")
      VALUE_CONST(dl_hf, "DL HF Limit", AUD_ECI_USABLE_DL_HF)
    SB_END
  
    /* ------------------------------------------------------------------ */
    /* AUD_SB_ECI_DISPL_THERM_LIMITS*/
    /* ------------------------------------------------------------------ */
    SB_BEGIN(AUD_SB_ECI_DISPL_THERM_LIMITS, "000.001", "")
      AUD_ECI_COMMON_SB
      COMMENT(COMMENT_PARAGRAPH, "Defines transducer resonance frequency in system ")
      VALUE(16, BE, res_freq_offset, "Resonance frequency ", HEX)
      COMMENT(COMMENT_PARAGRAPH, "Defines to what frequency, frequency response is desired to be extended. ")
      VALUE(16, BE, max_frequency, "Target Frequency ", HEX)
      COMMENT(COMMENT_PARAGRAPH, "Original Q-Value ")
      VALUE(16, BE, orig_q, "Orig Q Value ", HEX)
      COMMENT(COMMENT_PARAGRAPH, "Target Q-Value ")
      VALUE(16, BE, target_q, "Target Q Value ", HEX)
      COMMENT(COMMENT_PARAGRAPH, "Scaled maximum displacement of diaphram")
      VALUE(16, BE, max_displacement, "Maximum displacement ", HEX)
      COMMENT(COMMENT_PARAGRAPH, "Therm Resistance of Voice Coil ")
      VALUE(16, BE, therm_res_coil, "Therm Resistance of Voice Coil ", HEX)
      COMMENT(COMMENT_PARAGRAPH, "Time Constant of Voice Coil ")
      VALUE(16, BE, time_const_coil, "Time Constant of Voice Coil ", HEX)
      COMMENT(COMMENT_PARAGRAPH, "Thermal Resistance of Magnet ")
      VALUE(16, BE, therm_res_mag, "Therm Res of Mag", HEX)
      COMMENT(COMMENT_PARAGRAPH, "Time Constant of Magnet ")
      VALUE(16, BE, time_const_magn, "Time Const of Magnet ", HEX)
      COMMENT(COMMENT_PARAGRAPH, "Maximum input power ")
      VALUE(16, BE, max_input_pwr, "Max input Pwr ", HEX)
      COMMENT(COMMENT_PARAGRAPH, "Thermal Limit ")
      VALUE(16, BE, therm_limit, "Thermal Limit ", HEX)
    SB_END
    
    /* ------------------------------------------------------------------ */
    /* AUD_SB_ECI_DAC_ADC_LEVELS*/
    /* ------------------------------------------------------------------ */ 
    /* DA/AD converter sensitivity levels */
    COMMENT(COMMENT_PARAGRAPH,
            "DAC and ADC "
            "sensitivity levels are measurable values which depend on "
            "system clock frequency (dependent on the used cellular "
            "system like GSM, TDMA, WCDMA) and audio ASICs (like UEM(E), "
            "Retu). These levels are used with accessories that contain "
            "ACI Audio Block, to adjust analog and digital gains "
            "according to accessory and platform. Whenever these "
            "parameters are changed while "
            "an accessory with ECI Audio Block is connected, MCU Audio "
            "Server must recalculate the affected gains and send them to "
            "DSP as applicable.")
    SB_BEGIN(AUD_SB_ECI_DAC_ADC_LEVELS, "000.001", "002.000")
      AUD_ECI_COMMON_SB
      PROPERTY(PROPERTY_PMD_PARAMETER)
      COMMENT(COMMENT_PARAGRAPH, "(V/FSU) Format: Q4.11")
      VALUE(-16, BE, dac_level, "DAC Sensitivity Level", HEX)
      PROPERTY(PROPERTY_PMD_PARAMETER)
      COMMENT(COMMENT_PARAGRAPH, "(FSU/V) Format: Q4.11")
      VALUE(-16, BE, adc_level, "ADC Sensitivity Level", HEX)
      FILLER_EX(Reserved1, 16, 1)
    SB_END
    
    /* DA/AD converter sensitivity levels */
    COMMENT(COMMENT_PARAGRAPH,
            "DAC and ADC "
            "sensitivity levels are measurable values which depend on "
            "system clock frequency (dependent on the used cellular "
            "system like GSM, TDMA, WCDMA) and audio ASICs (like UEM(E), "
            "Retu). These levels are used with accessories that contain "
            "ACI Audio Block, to adjust analog and digital gains "
            "according to accessory and platform. Whenever these "
            "parameters are changed while "
            "an accessory with ECI Audio Block is connected, MCU Audio "
            "Server must recalculate the affected gains and send them to "
            "DSP as applicable.")
    SB_BEGIN(AUD_SB_ECI_DAC_ADC_LEVELS, "002.000", "")
      AUD_ECI_COMMON_SB
      PROPERTY(PROPERTY_PMD_PARAMETER)
      COMMENT(COMMENT_PARAGRAPH, "(V/FSU) Format: Q4.11")
      VALUE(-16, BE, dac_level, "DAC Sensitivity Level", HEX)
      PROPERTY(PROPERTY_PMD_PARAMETER)
      COMMENT(COMMENT_PARAGRAPH, "(FSU/V) Format: Q4.11")
      VALUE(-16, BE, adc_level, "ADC Sensitivity Level", HEX)
      VALUE_EX(-16, BE, xear_bypass_comp_val, "Xear Bypass Comp Val", DEC, 0.5, 0.0, "dB")
    SB_END
    

    /* ------------------------------------------------------------------ */
    /* AUD_SB_ECI_FIR_EQU_PARAMS                                          */
    /* ------------------------------------------------------------------ */
    /* Parameters for FIR equalizer */
    COMMENT(COMMENT_PARAGRAPH,
            "FIR Equalizer parameters calculated by the MCU Audio Server. ")                        
    SB_BEGIN(AUD_SB_ECI_FIR_EQU_PARAMS, "001.001", "") 
      AUD_ECI_COMMON_SB
      FILLER_EX(Reserved1, 16, 1)

      PROPERTY(PROPERTY_PMD_PARAMETER)
      COMMENT(COMMENT_PARAGRAPH, "HP-TPDF Dither. Default = 1.")
      VALUE(-32, BE, lastRnd, "lastRnd", DEC)

      PROPERTY(PROPERTY_PMD_PARAMETER)
      COMMENT(COMMENT_PARAGRAPH, " Threshold for FEQ-D (dynamic response). Format: Q12 => 4096 equals to 0dB .")
      VALUE(-32, BE, FEQ_D_threshold, "FEQ_D_threshold", DEC)

      PROPERTY(PROPERTY_PMD_PARAMETER)
      COMMENT(COMMENT_PARAGRAPH, " Ultra-Fine Gain Control - left. Format: Q12 linear. Default = 4096.")
      VALUE(-16, BE, UFGC_gain_left, "UFGC_gain_left", DEC)

      PROPERTY(PROPERTY_PMD_PARAMETER)
      COMMENT(COMMENT_PARAGRAPH, " Ultra-Fine Gain Control - right. Format: Q12 linear. Default = 4096.")
      VALUE(-16, BE, UFGC_gain_right, "UFGC_gain_right", DEC)

      PROPERTY(PROPERTY_PMD_PARAMETER)      
      COMMENT(COMMENT_PARAGRAPH, "Attack - for FEQ-D (dynamic response). Default = 32751 (samples).")
      VALUE(-16, BE, FEQ_D_attack, "FEQ_D_attack", DEC)

      PROPERTY(PROPERTY_PMD_PARAMETER)
      COMMENT(COMMENT_PARAGRAPH, "Release - for FEQ-D (dynamic response). Default = 3276 (samples).")
      VALUE(-16, BE, FEQ_D_release, "FEQ_D_release", DEC)

      PROPERTY(PROPERTY_PMD_PARAMETER)
      COMMENT(COMMENT_PARAGRAPH, "Hold attack - for FEQ-D (dynamic response). Default = 97 (samples).")
      VALUE(-16, BE, FEQ_D_hold_attack, "FEQ_D_hold_attack", DEC)

      COMMENT(COMMENT_PARAGRAPH, "Enabling/disabling dynamic response. 1=enabled, 0=disabled. Should be disabled for headset. ")
      VALUE(-16, BE, use_dyn_resp, "use_dyn_resp", DEC) 

      PROPERTY(PROPERTY_PMD_PARAMETER)
      COMMENT(COMMENT_PARAGRAPH, "16 or 32-bit sample size")
      VALUE_CONST(sample_size, "Sample size", AUD_ECI_COMMON_BITS_PER_SAMPLE)

      PROPERTY(PROPERTY_PMD_PARAMETER)
      PROPERTY_VALUE(PROPERTY_ITEM_MAXIMUM_VALUE, 103)
      COMMENT(COMMENT_PARAGRAPH, "Number of FIR filter coefficients ")
      REFERENCE(16, BE, nb_coeffs, "nb_coeffs", nb_coeffs)
      
      PROPERTY(PROPERTY_PMD_PARAMETER)
      COMMENT(COMMENT_PARAGRAPH, "Length of delay lines")
      VALUE(16, BE, length_of_delay_lines, "length_of_delay_lines", DEC)

      COMMENT(COMMENT_PARAGRAPH, "1st order IIR integrator coefficients: [a0 b0 b1], for low frequencies.")
      SEQ_OF(integrator_coeffs, "integrator_coeffs", AUD_DATA_INT16, AUD_ECI_IFIREQ_INTEGRATOR_SIZE)

      COMMENT(COMMENT_PARAGRAPH, "Filter coefficients (int16); added internally by the MCU audio server.")
      COMMENT(COMMENT_PARAGRAPH, "NOTE: Actual sub-block size depends on the number of these coefficients.")
      SEQ_OF_REF(fir_coeffs, "FIR coeffs", AUD_DATA_INT16, nb_coeffs, ISIHDR_DONT_GENERATE)      
                
      FILLER(FILLER_VARIABLE, 32)
    SB_END
    
    /* ------------------------------------------------------------------ */
    /* AUD_SB_ECI_DL_TONE_SPEECH_EQU_IIR*/
    /* ------------------------------------------------------------------ */
    /* Parameters for downlink equalizer IIR */
    COMMENT(COMMENT_PARAGRAPH,
            "Equalizer parameters are used together with information read "
            "from ECI Audio Block by MCU Audio Server to calculate equalizer "
            "blocks for DSP. ")
    SB_BEGIN(AUD_SB_ECI_DL_TONE_SPEECH_EQU_IIR, "000.001", "001.000")
      AUD_ECI_COMMON_SB
      PROPERTY(PROPERTY_PMD_PARAMETER)
      COMMENT(COMMENT_PARAGRAPH, "Maximum number of second order IIR blocks used in Tone_Speech equalizer")
      PROPERTY_VALUE(PROPERTY_ITEM_MINIMUM_VALUE, 1)
      VALUE(8, BE, max_blocks, "Max Number Of Blocks", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Sampling Frequency of equalizer")
      VALUE_CONST(eq_freq, "Equalizer signal frequency", AUD_ECI_EQ_FREQ_RATE)
      COMMENT(COMMENT_PARAGRAPH, "IIR specific filter block parameters")
      SEQ_OF(iir_block_data, "IIR Specific Data", AUD_ECI_EQU_IIR_BLOCK_DATA, 1)
    SB_END
    
    COMMENT(COMMENT_PARAGRAPH,
            "Equalizer parameters are used together with information read "
            "from ECI Audio Block by MCU Audio Server to calculate equalizer "
            "blocks for DSP. ")
    SB_BEGIN(AUD_SB_ECI_DL_TONE_SPEECH_EQU_IIR, "001.000", "")
      AUD_ECI_COMMON_SB
      
      PROPERTY(PROPERTY_PMD_PARAMETER)
      COMMENT(COMMENT_PARAGRAPH, "Maximum number of second order IIR blocks used in Tone_Speech equalizer")
      PROPERTY_VALUE(PROPERTY_ITEM_MINIMUM_VALUE, 1)
      VALUE(8, BE, max_blocks, "Max Number Of Blocks", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Sampling Frequency of equalizer")
      VALUE_CONST(eq_freq, "Equalizer signal frequency", AUD_ECI_EQ_FREQ_RATE)
	    COMMENT(COMMENT_TEXT, "See ")
      COMMENT_LINK(LINK_SEQUENCE, "AUD_ECI_EQU_IIR_BLOCK_DATA", "", "001.000")
      COMMENT(COMMENT_PARAGRAPH,
            ". Data size depends on the number of IIR filter blocks.")
      COMMENT(COMMENT_PARAGRAPH,
            "NOTE! This Data block structure will be build internally in Audio Server.")
      PROPERTY(PROPERTY_ISIHDR_DONT_GENERATE)
      SEQ_OF(equ_data, "Downlink equalizer filter data",
             AUD_DATA_UINT16, AS_MANY_AS_POSSIBLE)
      FILLER(FILLER_VARIABLE, 32)
    SB_END
  /*  
    DSP_AUDIO_SB_DEF(DSP_AUDIO_SB_ACI_DL_EQU_1_DATA)
    SB_BEGIN(DSP_AUDIO_SB_ACI_DL_EQU_1_DATA, "002.057", "")
      COMMON_SB_16_LONG
  
      COMMENT(COMMENT_TEXT, "See ")
      COMMENT_LINK(LINK_SEQUENCE, "DSP_AUDIO_EQU_BLOCK_DATA", "001.000", "")
      COMMENT(COMMENT_PARAGRAPH,
            ". Data size depends on the number of IIR filter blocks.")
      SEQ_OF(equ_data, "Downlink equalizer filter data",
           DSP_AUDIO_DATA_UINT16, AS_MANY_AS_POSSIBLE)
    SB_END
    */

    /* ------------------------------------------------------------------ */
    /* AUD_SB_ECI_DL_TONE_SPEECH_EQU_FIR*/
    /* ------------------------------------------------------------------ */
    /* Parameters for downlink equalizer FIR */
    /*COMMENT(COMMENT_PARAGRAPH,
            "Equalizer parameters are used together with information read "
            "from ECI Audio Block by MCU Audio Server to calculate equalizer "
            "blocks for DSP. ")
    SB_BEGIN(AUD_SB_ECI_DL_TONE_SPEECH_EQU_FIR, "000.001", "")
      AUD_ECI_COMMON_SB
      PROPERTY(PROPERTY_PMD_PARAMETER)
      COMMENT(COMMENT_PARAGRAPH,"Maximum FIR order that can be used in Tone_Speech equalizer")
      PROPERTY_VALUE(PROPERTY_ITEM_MINIMUM_VALUE, 1)
      VALUE(16, BE, max_blocks, "Max Filter order (FIR)", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Sampling Frequency of equalizer")
      VALUE_CONST(eq_freq, "Equalizer signal frequency", AUD_ECI_EQ_FREQ_RATE)  
    SB_END
*/   
    /* ------------------------------------------------------------------ */
    /* AUD_SB_ECI_DL_APE_PLAY_EQU_1_IIR*/
    /* ------------------------------------------------------------------ */
    /* Parameters for downlink equalizer IIR */
    COMMENT(COMMENT_PARAGRAPH,
            "Equalizer parameters are used together with information read "
            "from ECI Audio Block by MCU Audio Server to calculate equalizer "
            "blocks for DSP. ")
    SB_BEGIN(AUD_SB_ECI_DL_APE_PLAY_EQU_1_IIR, "000.001", "001.000")
      AUD_ECI_COMMON_SB
      PROPERTY(PROPERTY_PMD_PARAMETER)
      COMMENT(COMMENT_PARAGRAPH, "Maximum number of second order IIR blocks used in APE Playback 1 equalizer")
      PROPERTY_VALUE(PROPERTY_ITEM_MINIMUM_VALUE, 1)
      VALUE(8, BE, max_blocks, "Max Number Of Blocks", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Sampling Frequency of equalizer")
      VALUE_CONST(eq_freq, "Equalizer signal frequency", AUD_ECI_EQ_FREQ_RATE)
      COMMENT(COMMENT_PARAGRAPH, "IIR specific filter block parameters")
      SEQ_OF(iir_block_data, "IIR Specific Data", AUD_ECI_EQU_IIR_BLOCK_DATA, 1)
    SB_END
    
    COMMENT(COMMENT_PARAGRAPH,
            "Equalizer parameters are used together with information read "
            "from ECI Audio Block by MCU Audio Server to calculate equalizer "
            "blocks for DSP. ")
    SB_BEGIN(AUD_SB_ECI_DL_APE_PLAY_EQU_1_IIR, "001.000", "")
      AUD_ECI_COMMON_SB
      PROPERTY(PROPERTY_PMD_PARAMETER)
      COMMENT(COMMENT_PARAGRAPH, "Maximum number of second order IIR blocks used in APE Playback 1 equalizer")
      PROPERTY_VALUE(PROPERTY_ITEM_MINIMUM_VALUE, 1)
      VALUE(8, BE, max_blocks, "Max Number Of Blocks", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Sampling Frequency of equalizer")
      VALUE_CONST(eq_freq, "Equalizer signal frequency", AUD_ECI_EQ_FREQ_RATE)
      COMMENT(COMMENT_TEXT, "See ")
      COMMENT_LINK(LINK_SEQUENCE, "AUD_ECI_EQU_IIR_BLOCK_DATA", "", "001.000")
      COMMENT(COMMENT_PARAGRAPH,
            ". Data size depends on the number of IIR filter blocks.")
      COMMENT(COMMENT_PARAGRAPH,
            "NOTE! This Data block structure will be build internally in Audio Server.")
      SEQ_OF(equ_data, "Downlink equalizer filter data",
             AUD_DATA_UINT16, AS_MANY_AS_POSSIBLE)
      FILLER(FILLER_VARIABLE, 32)
	  SB_END
    
    /* ------------------------------------------------------------------ */
    /* AUD_SB_ECI_DL_APE_PLAY_EQU_1_FIR                                   */
    /* ------------------------------------------------------------------ */
    /* Parameters for downlink equalizer FIR */
    COMMENT(COMMENT_PARAGRAPH,
            "Equalizer properties are used together with information read from "
            "the ECI Audio Block by the MCU Audio Server to calculate equalizer "
            "parameters for the DSP ")
    SB_BEGIN(AUD_SB_ECI_DL_APE_PLAY_EQU_1_FIR, "001.001", "")
      AUD_ECI_COMMON_SB
      PROPERTY(PROPERTY_PMD_PARAMETER)
      COMMENT(COMMENT_PARAGRAPH, "Maximum FIR filter order that can be used in the high quality ear EQU on the DSP")
      PROPERTY_VALUE(PROPERTY_ITEM_MINIMUM_VALUE, 1)
      VALUE(16, BE, max_order, "Max FIR filter order", DEC)
      COMMENT(COMMENT_PARAGRAPH, "16 or 32-bit sample size on the DSP")
      VALUE_CONST(sample_size, "Sample size", AUD_ECI_COMMON_BITS_PER_SAMPLE)
      COMMENT(COMMENT_PARAGRAPH, "Sampling frequency on the DSP")
      VALUE_CONST(eq_freq, "Equalizer signal frequency", AUD_ECI_EQ_FREQ_RATE)
      COMMENT(COMMENT_PARAGRAPH, "num_sb=0 (clients) or num_sb=1 (MCU Audio Server)")
      PROPERTY_VALUE(PROPERTY_ITEM_MINIMUM_VALUE, 0) 
      PROPERTY_VALUE(PROPERTY_ITEM_MAXIMUM_VALUE, 1)
      REFERENCE(8, BE, num_sb, "Number Of Subblocks To Follow", N)
      SB_LST_REF_BEGIN(LIST_OF_SUBBLOCKS, sb_list, "Subblocks", N, ISIHDR_DONT_GENERATE)
        SB_LST_ENTRY(AUD_SB_ECI_FIR_EQU_PARAMS)
      SB_LST_REF_END
    SB_END

    /* ------------------------------------------------------------------ */
    /* AUD_SB_ECI_DL_APE_PLAY_EQU_2_IIR*/
    /* ------------------------------------------------------------------ */
    /* Parameters for downlink equalizer IIR */
    COMMENT(COMMENT_PARAGRAPH,
            "Equalizer parameters are used together with information read "
            "from ECI Audio Block by MCU Audio Server to calculate equalizer "
            "blocks for DSP. ")
    SB_BEGIN(AUD_SB_ECI_DL_APE_PLAY_EQU_2_IIR, "000.001", "001.000")
      AUD_ECI_COMMON_SB
      PROPERTY(PROPERTY_PMD_PARAMETER)
      COMMENT(COMMENT_PARAGRAPH, "Maximum number of second order IIR blocks used in APE Playback 2 equalizer")
      PROPERTY_VALUE(PROPERTY_ITEM_MINIMUM_VALUE, 1)
      VALUE(8, BE, max_blocks, "Max Number Of Blocks", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Sampling Frequency of equalizer")
      VALUE_CONST(eq_freq, "Equalizer signal frequency", AUD_ECI_EQ_FREQ_RATE)
      COMMENT(COMMENT_PARAGRAPH, "IIR specific filter block parameters")
      SEQ_OF(iir_block_data, "IIR Specific Data", AUD_ECI_EQU_IIR_BLOCK_DATA, 1)
    SB_END
    
    COMMENT(COMMENT_PARAGRAPH,
            "Equalizer parameters are used together with information read "
            "from ECI Audio Block by MCU Audio Server to calculate equalizer "
            "blocks for DSP. ")
    SB_BEGIN(AUD_SB_ECI_DL_APE_PLAY_EQU_2_IIR, "001.000", "")
      AUD_ECI_COMMON_SB
      PROPERTY(PROPERTY_PMD_PARAMETER)
      COMMENT(COMMENT_PARAGRAPH, "Maximum number of second order IIR blocks used in APE Playback 2 equalizer")
      PROPERTY_VALUE(PROPERTY_ITEM_MINIMUM_VALUE, 1)
      VALUE(8, BE, max_blocks, "Max Number Of Blocks", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Sampling Frequency of equalizer")
      VALUE_CONST(eq_freq, "Equalizer signal frequency", AUD_ECI_EQ_FREQ_RATE)
      COMMENT(COMMENT_TEXT, "See ")
      COMMENT_LINK(LINK_SEQUENCE, "AUD_ECI_EQU_IIR_BLOCK_DATA", "", "001.000")
      COMMENT(COMMENT_PARAGRAPH,
            ". Data size depends on the number of IIR filter blocks.")
      COMMENT(COMMENT_PARAGRAPH,
            "NOTE! This Data block structure will be build internally in Audio Server.")
      SEQ_OF(equ_data, "Downlink equalizer filter data",
             AUD_DATA_UINT16, AS_MANY_AS_POSSIBLE)
      FILLER(FILLER_VARIABLE, 32)
	  SB_END
    
    /* ------------------------------------------------------------------ */
    /* AUD_SB_ECI_DL_APE_PLAY_EQU_2_FIR                                   */
    /* ------------------------------------------------------------------ */
    /* Parameters for downlink equalizer FIR */
    COMMENT(COMMENT_PARAGRAPH,
            "Equalizer properties are used together with information read from "
            "the ECI Audio Block by the MCU Audio Server to calculate equalizer "
            "parameters for the DSP ")
    SB_BEGIN(AUD_SB_ECI_DL_APE_PLAY_EQU_2_FIR, "001.001", "")
      AUD_ECI_COMMON_SB
      PROPERTY(PROPERTY_PMD_PARAMETER)
      COMMENT(COMMENT_PARAGRAPH, "Maximum FIR filter order that can be used in the high quality ear EQU on the DSP")
      PROPERTY_VALUE(PROPERTY_ITEM_MINIMUM_VALUE, 1)
      VALUE(16, BE, max_order, "Max FIR filter order", DEC)
      COMMENT(COMMENT_PARAGRAPH, "16 or 32-bit sample size on the DSP")
      VALUE_CONST(sample_size, "Sample size", AUD_ECI_COMMON_BITS_PER_SAMPLE)
      COMMENT(COMMENT_PARAGRAPH, "Sampling frequency on the DSP")
      VALUE_CONST(eq_freq, "Equalizer signal frequency", AUD_ECI_EQ_FREQ_RATE)
      COMMENT(COMMENT_PARAGRAPH, "num_sb=0 (clients) or num_sb=1 (MCU Audio Server)")
      PROPERTY_VALUE(PROPERTY_ITEM_MINIMUM_VALUE, 0) 
      PROPERTY_VALUE(PROPERTY_ITEM_MAXIMUM_VALUE, 1)
      REFERENCE(8, BE, num_sb, "Number Of Subblocks To Follow", N)
      SB_LST_REF_BEGIN(LIST_OF_SUBBLOCKS, sb_list, "Subblocks", N, ISIHDR_DONT_GENERATE)
        SB_LST_ENTRY(AUD_SB_ECI_FIR_EQU_PARAMS)
      SB_LST_REF_END
    SB_END
  
    /* ------------------------------------------------------------------ */
    /* AUD_SB_ECI_UL_APE_REC_EQU_1_IIR*/
    /* ------------------------------------------------------------------ */
    /* Parameters for downlink equalizer IIR */
    COMMENT(COMMENT_PARAGRAPH,
            "Equalizer parameters are used together with information read "
            "from ECI Audio Block by MCU Audio Server to calculate equalizer "
            "blocks for DSP. ")
    SB_BEGIN(AUD_SB_ECI_UL_APE_REC_EQU_1_IIR, "000.001", "001.000")
      AUD_ECI_COMMON_SB
      PROPERTY(PROPERTY_PMD_PARAMETER)
      COMMENT(COMMENT_PARAGRAPH, "Maximum number of second order IIR blocks used in APE Audio Rec 1 equalizer")
      PROPERTY_VALUE(PROPERTY_ITEM_MINIMUM_VALUE, 1)
      VALUE(8, BE, max_blocks, "Max Number Of Blocks", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Sampling Frequency of equalizer")
      VALUE_CONST(eq_freq, "Equalizer signal frequency", AUD_ECI_EQ_FREQ_RATE)
      COMMENT(COMMENT_PARAGRAPH, "IIR specific filter block parameters")
      SEQ_OF(iir_block_data, "IIR Specific Data", AUD_ECI_EQU_IIR_BLOCK_DATA, 1)
    SB_END
    
    COMMENT(COMMENT_PARAGRAPH,
            "Equalizer parameters are used together with information read "
            "from ECI Audio Block by MCU Audio Server to calculate equalizer "
            "blocks for DSP. ")
    SB_BEGIN(AUD_SB_ECI_UL_APE_REC_EQU_1_IIR, "001.000", "")
      AUD_ECI_COMMON_SB
      PROPERTY(PROPERTY_PMD_PARAMETER)
      COMMENT(COMMENT_PARAGRAPH, "Maximum number of second order IIR blocks used in APE Audio Rec 1 equalizer")
      PROPERTY_VALUE(PROPERTY_ITEM_MINIMUM_VALUE, 1)
      VALUE(8, BE, max_blocks, "Max Number Of Blocks", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Sampling Frequency of equalizer")
      VALUE_CONST(eq_freq, "Equalizer signal frequency", AUD_ECI_EQ_FREQ_RATE)
      COMMENT(COMMENT_TEXT, "See ")
      COMMENT_LINK(LINK_SEQUENCE, "AUD_ECI_EQU_IIR_BLOCK_DATA", "", "001.000")
      COMMENT(COMMENT_PARAGRAPH,
            ". Data size depends on the number of IIR filter blocks.")
      COMMENT(COMMENT_PARAGRAPH,
            "NOTE! This Data block structure will be build internally in Audio Server.")
      SEQ_OF(equ_data, "Downlink equalizer filter data",
             AUD_DATA_UINT16, AS_MANY_AS_POSSIBLE)
      FILLER(FILLER_VARIABLE, 32)
	  SB_END
    
    /* ------------------------------------------------------------------ */
    /* AUD_SB_ECI_UL_APE_REC_EQU_1_FIR*/
    /* ------------------------------------------------------------------ */
    /* Parameters for downlink equalizer FIR */
    /*COMMENT(COMMENT_PARAGRAPH,
            "Equalizer parameters are used together with information read "
            "from ECI Audio Block by MCU Audio Server to calculate equalizer "
            "blocks for DSP. ")
    SB_BEGIN(AUD_SB_ECI_UL_APE_REC_EQU_1_FIR, "000.001", "")
      AUD_ECI_COMMON_SB
      PROPERTY(PROPERTY_PMD_PARAMETER)
      COMMENT(COMMENT_PARAGRAPH, "Maximum FIR order that can be used in APE Audio Rec 1 equalizer")
      PROPERTY_VALUE(PROPERTY_ITEM_MINIMUM_VALUE, 1)
      VALUE(16, BE, max_blocks, "Max Filter order (FIR)", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Sampling Frequency of equalizer")
      VALUE_CONST(eq_freq, "Equalizer signal frequency", AUD_ECI_EQ_FREQ_RATE)
    SB_END
*/  
    /* ------------------------------------------------------------------ */
    /* AUD_SB_ECI_UL_APE_REC_EQU_2_IIR*/
    /* ------------------------------------------------------------------ */
    /* Parameters for downlink equalizer IIR */
    COMMENT(COMMENT_PARAGRAPH,
            "Equalizer parameters are used together with information read "
            "from ECI Audio Block by MCU Audio Server to calculate equalizer "
            "blocks for DSP. ")
    SB_BEGIN(AUD_SB_ECI_UL_APE_REC_EQU_2_IIR, "000.001", "001.000")
      AUD_ECI_COMMON_SB
      PROPERTY(PROPERTY_PMD_PARAMETER)
      COMMENT(COMMENT_PARAGRAPH, "Maximum number of second order IIR blocks used in APE Audio Rec 2 equalizer")
      PROPERTY_VALUE(PROPERTY_ITEM_MINIMUM_VALUE, 1)
      VALUE(8, BE, max_blocks, "Max Number Of Blocks", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Sampling Frequency of equalizer")
      VALUE_CONST(eq_freq, "Equalizer signal frequency", AUD_ECI_EQ_FREQ_RATE)
      COMMENT(COMMENT_PARAGRAPH, "IIR specific filter block parameters")
      SEQ_OF(iir_block_data, "IIR Specific Data", AUD_ECI_EQU_IIR_BLOCK_DATA, 1)      
    SB_END
    
    COMMENT(COMMENT_PARAGRAPH,
            "Equalizer parameters are used together with information read "
            "from ECI Audio Block by MCU Audio Server to calculate equalizer "
            "blocks for DSP. ")
    SB_BEGIN(AUD_SB_ECI_UL_APE_REC_EQU_2_IIR, "001.000", "")
      AUD_ECI_COMMON_SB
      PROPERTY(PROPERTY_PMD_PARAMETER)
      COMMENT(COMMENT_PARAGRAPH, "Maximum number of second order IIR blocks used in APE Audio Rec 2 equalizer")
      PROPERTY_VALUE(PROPERTY_ITEM_MINIMUM_VALUE, 1)
      VALUE(8, BE, max_blocks, "Max Number Of Blocks", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Sampling Frequency of equalizer")
      VALUE_CONST(eq_freq, "Equalizer signal frequency", AUD_ECI_EQ_FREQ_RATE)
      COMMENT(COMMENT_TEXT, "See ")
      COMMENT_LINK(LINK_SEQUENCE, "AUD_ECI_EQU_IIR_BLOCK_DATA", "", "001.000")
      COMMENT(COMMENT_PARAGRAPH,
            ". Data size depends on the number of IIR filter blocks.")
      COMMENT(COMMENT_PARAGRAPH,
            "NOTE! This Data block structure will be build internally in Audio Server.")
      SEQ_OF(equ_data, "Downlink equalizer filter data",
             AUD_DATA_UINT16, AS_MANY_AS_POSSIBLE)
      FILLER(FILLER_VARIABLE, 32)
	  SB_END
    
    /* ------------------------------------------------------------------ */
    /* AUD_SB_ECI_UL_APE_REC_EQU_2_FIR*/
    /* ------------------------------------------------------------------ */
    /* Parameters for downlink equalizer FIR */
/*    COMMENT(COMMENT_PARAGRAPH,
            "Equalizer parameters are used together with information read "
            "from ECI Audio Block by MCU Audio Server to calculate equalizer "
            "blocks for DSP. ")
    SB_BEGIN(AUD_SB_ECI_UL_APE_REC_EQU_2_FIR, "000.001", "")
      AUD_ECI_COMMON_SB
      PROPERTY(PROPERTY_PMD_PARAMETER)
      COMMENT(COMMENT_PARAGRAPH, "Maximum FIR order that can be used in APE Audio Rec 2 equalizer")
      PROPERTY_VALUE(PROPERTY_ITEM_MINIMUM_VALUE, 1)
      VALUE(16, BE, max_blocks, "Max Filter order (FIR)", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Sampling Frequency of equalizer")
      VALUE_CONST(eq_freq, "Equalizer signal frequency", AUD_ECI_EQ_FREQ_RATE)  
    SB_END
*/
    /* ------------------------------------------------------------------ */
    /* AUD_SB_ECI_UL_SPEECH_EQU_IIR*/
    /* ------------------------------------------------------------------ */
    /* Parameters for downlink equalizer IIR */
    COMMENT(COMMENT_PARAGRAPH,
            "Equalizer parameters are used together with information read "
            "from ECI Audio Block by MCU Audio Server to calculate equalizer "
            "blocks for DSP. ")
    SB_BEGIN(AUD_SB_ECI_UL_SPEECH_EQU_IIR, "000.001", "001.000")
      AUD_ECI_COMMON_SB
      PROPERTY(PROPERTY_PMD_PARAMETER)
      COMMENT(COMMENT_PARAGRAPH, "Maximum number of second order IIR blocks used in Uplink Speech equalizer")
      PROPERTY_VALUE(PROPERTY_ITEM_MINIMUM_VALUE, 1)
      VALUE(8, BE, max_blocks, "Max Number Of Blocks", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Sampling Frequency of equalizer")
      VALUE_CONST(eq_freq, "Equalizer signal frequency", AUD_ECI_EQ_FREQ_RATE)
      COMMENT(COMMENT_PARAGRAPH, "IIR specific filter block parameters")
      SEQ_OF(iir_block_data, "IIR Specific Data", AUD_ECI_EQU_IIR_BLOCK_DATA, 1)
    SB_END
    
    COMMENT(COMMENT_PARAGRAPH,
            "Equalizer parameters are used together with information read "
            "from ECI Audio Block by MCU Audio Server to calculate equalizer "
            "blocks for DSP. ")
    SB_BEGIN(AUD_SB_ECI_UL_SPEECH_EQU_IIR, "001.000", "")
      AUD_ECI_COMMON_SB
      PROPERTY(PROPERTY_PMD_PARAMETER)
      COMMENT(COMMENT_PARAGRAPH, "Maximum number of second order IIR blocks used in Uplink Speech equalizer")
      PROPERTY_VALUE(PROPERTY_ITEM_MINIMUM_VALUE, 1)
      VALUE(8, BE, max_blocks, "Max Number Of Blocks", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Sampling Frequency of equalizer")
      VALUE_CONST(eq_freq, "Equalizer signal frequency", AUD_ECI_EQ_FREQ_RATE)
      COMMENT(COMMENT_TEXT, "See ")
      COMMENT_LINK(LINK_SEQUENCE, "AUD_ECI_EQU_IIR_BLOCK_DATA", "", "001.000")
      COMMENT(COMMENT_PARAGRAPH,
            ". Data size depends on the number of IIR filter blocks.")
      COMMENT(COMMENT_PARAGRAPH,
            "NOTE! This Data block structure will be build internally in Audio Server.")
      SEQ_OF(equ_data, "Downlink equalizer filter data",
             AUD_DATA_UINT16, AS_MANY_AS_POSSIBLE)
      FILLER(FILLER_VARIABLE, 32)
	  SB_END
    
    /* ------------------------------------------------------------------ */
    /* AUD_SB_ECI_UL_SPEECH_EQU_FIR*/
    /* ------------------------------------------------------------------ */
    /* Parameters for downlink equalizer FIR */
/*    COMMENT(COMMENT_PARAGRAPH,
            "Equalizer parameters are used together with information read "
            "from ECI Audio Block by MCU Audio Server to calculate equalizer "
            "blocks for DSP. ")
    SB_BEGIN(AUD_SB_ECI_UL_SPEECH_EQU_FIR, "000.001", "")
      AUD_ECI_COMMON_SB
      PROPERTY(PROPERTY_PMD_PARAMETER)
      COMMENT(COMMENT_PARAGRAPH, "Maximum FIR order that can be used in Uplink Speech equalizer")
      PROPERTY_VALUE(PROPERTY_ITEM_MINIMUM_VALUE, 1)
      VALUE(16, BE, max_blocks, "Max Filter order (FIR)", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Sampling Frequency of equalizer")
      VALUE_CONST(eq_freq, "Equalizer signal frequency", AUD_ECI_EQ_FREQ_RATE)
    SB_END
    */
    /* ------------------------------------------------------------------ */
    /* AUD_SB_ECI_UL_SIDETONE_EQU_IIR*/
    /* ------------------------------------------------------------------ */
    /* Parameters for downlink equalizer IIR */
    COMMENT(COMMENT_PARAGRAPH,
            "Equalizer parameters are used together with information read "
            "from ECI Audio Block by MCU Audio Server to calculate equalizer "
            "blocks for DSP. ")
    SB_BEGIN(AUD_SB_ECI_UL_SIDETONE_EQU_IIR, "000.001", "001.000")
      AUD_ECI_COMMON_SB
      PROPERTY(PROPERTY_PMD_PARAMETER)
      COMMENT(COMMENT_PARAGRAPH, "Maximum number of second order IIR blocks used in UL/DL Sidetone equalizer")
      PROPERTY_VALUE(PROPERTY_ITEM_MINIMUM_VALUE, 1)
      VALUE(8, BE, max_blocks, "Max Number Of Blocks", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Sampling Frequency of equalizer")
      VALUE_CONST(eq_freq, "Equalizer signal frequency", AUD_ECI_EQ_FREQ_RATE)
      COMMENT(COMMENT_PARAGRAPH, "IIR specific filter block parameters")
      SEQ_OF(iir_block_data, "IIR Specific Data", AUD_ECI_EQU_IIR_BLOCK_DATA, 1)
    SB_END
    
    COMMENT(COMMENT_PARAGRAPH,
            "Equalizer parameters are used together with information read "
            "from ECI Audio Block by MCU Audio Server to calculate equalizer "
            "blocks for DSP. ")
    SB_BEGIN(AUD_SB_ECI_UL_SIDETONE_EQU_IIR, "001.000", "")
      AUD_ECI_COMMON_SB
      PROPERTY(PROPERTY_PMD_PARAMETER)
      COMMENT(COMMENT_PARAGRAPH, "Maximum number of second order IIR blocks used in UL/DL Sidetone equalizer")
      PROPERTY_VALUE(PROPERTY_ITEM_MINIMUM_VALUE, 1)
      VALUE(8, BE, max_blocks, "Max Number Of Blocks", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Sampling Frequency of equalizer")
      VALUE_CONST(eq_freq, "Equalizer signal frequency", AUD_ECI_EQ_FREQ_RATE)
      COMMENT(COMMENT_TEXT, "See ")
      COMMENT_LINK(LINK_SEQUENCE, "AUD_ECI_EQU_IIR_BLOCK_DATA", "", "001.000")
      COMMENT(COMMENT_PARAGRAPH,
            ". Data size depends on the number of IIR filter blocks.")
      COMMENT(COMMENT_PARAGRAPH,
            "NOTE! This Data block structure will be build internally in Audio Server.")
      SEQ_OF(equ_data, "Downlink equalizer filter data",
             AUD_DATA_UINT16, AS_MANY_AS_POSSIBLE)
      FILLER(FILLER_VARIABLE, 32)
	  SB_END
     
    /* ------------------------------------------------------------------ */
    /* AUD_SB_ECI_UL_SIDETONE_EQU_FIR*/
    /* ------------------------------------------------------------------ */
    /* Parameters for downlink equalizer FIR */
/*    COMMENT(COMMENT_PARAGRAPH,
            "Equalizer parameters are used together with information read "
            "from ECI Audio Block by MCU Audio Server to calculate equalizer "
            "blocks for DSP. ")
    SB_BEGIN(AUD_SB_ECI_UL_SIDETONE_EQU_FIR, "000.001", "")
      AUD_ECI_COMMON_SB
      PROPERTY(PROPERTY_PMD_PARAMETER)
      COMMENT(COMMENT_PARAGRAPH, "Maximum FIR order that can be used in UL/DL Sidetone equalizer")
      PROPERTY_VALUE(PROPERTY_ITEM_MINIMUM_VALUE, 1)
      VALUE(16, BE, max_blocks, "Max Filter order (FIR)", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Sampling Frequency of equalizer")
      VALUE_CONST(eq_freq, "Equalizer signal frequency", AUD_ECI_EQ_FREQ_RATE)
    SB_END
*/
    /* ------------------------------------------------------------------ */
    /* AUD_SB_ECI_APE_PLAY_MUMDRC_PROPS */
    /* ------------------------------------------------------------------ */
    COMMENT(COMMENT_PARAGRAPH, "MuMDRC porperties are used together with information read from " 
                               "ECI Audio Block by MCU Audio Server to calculate parameters for MuMDRC.")
    SB_BEGIN(AUD_SB_ECI_APE_PLAY_MUMDRC_PROPS, "000.001", "")
      AUD_ECI_COMMON_SB
      PROPERTY(PROPERTY_PMD_PARAMETER)
      COMMENT(COMMENT_PARAGRAPH, "Band count, which is needed for MuMDRC. Maximum band count is 5")
      PROPERTY_VALUE(PROPERTY_ITEM_MINIMUM_VALUE, 1)
      PROPERTY_VALUE(PROPERTY_ITEM_MAXIMUM_VALUE, 5)
      VALUE(16, BE, band_count, "MuMDRC band count", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Higher frequency limit for first band.")
      VALUE(16, BE, limit1, "Frequency limit 1", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Higher frequency limit for second band.")
      VALUE(16, BE, limit2, "Frequency limit 2", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Higher frequency limit for third band.")
      VALUE(16, BE, limit3, "Frequency limit 3", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Higher frequency limit for fourth band.")
      VALUE(16, BE, limit4, "Frequency limit 4", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Higher frequency limit for fifth band.")
      VALUE(16, BE, limit5, "Frequency limit 5", DEC)
      FILLER_EX(Reserved1, 16, 1)
    SB_END
    
    /* ------------------------------------------------------------------ */
    /* AUD_SB_ECI_APE_PLAY_MUMDRC_PARAMS */
    /* ------------------------------------------------------------------ */
    COMMENT(COMMENT_PARAGRAPH, "MuMDRC parameters are sent to MuMDRC. ") 
    SB_BEGIN(AUD_SB_ECI_APE_PLAY_MUMDRC_PARAMS, "000.001", "")
      AUD_ECI_COMMON_SB
      PROPERTY(PROPERTY_PMD_PARAMETER)
      COMMENT(COMMENT_PARAGRAPH, "Band count.")
      PROPERTY_VALUE(PROPERTY_ITEM_MINIMUM_VALUE, 1)
      PROPERTY_VALUE(PROPERTY_ITEM_MAXIMUM_VALUE, 5)
      VALUE(16, BE, band_count, "MuMDRC band count", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Gain value for first band.")
      VALUE(16, BE, gain1, "Gain 1", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Gain value for second band.")
      VALUE(16, BE, gain2, "Gain 2", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Gain value for third band.")
      VALUE(16, BE, gain3, "Gain 3", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Gain value for fourth band.")
      VALUE(16, BE, gain4, "Gain 4", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Gain value for fifth band.")
      VALUE(16, BE, gain5, "Gain 5", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Limitation level for first band.")
      VALUE(16, BE, limit_lev1, "Limitation level 1", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Limitation level for second band.")
      VALUE(16, BE, limit_lev2, "Limitation level 2", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Limitation level for third band.")
      VALUE(16, BE, limit_lev3, "Limitation level 3", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Limitation level for fourth band.")
      VALUE(16, BE, limit_lev4, "Limitation level 4", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Limitation level for fifth band.")
      VALUE(16, BE, limit_lev5, "Limitation level 5", DEC)
    SB_END

    /* ------------------------------------------------------------------ */
    /* AUD_SB_ECI_GAIN_COMPENSATION*/
    /* ------------------------------------------------------------------ */
    COMMENT(COMMENT_PARAGRAPH,
            "  ")
    SB_BEGIN(AUD_SB_ECI_GAIN_COMPENSATION, "000.001", "001.000")
      AUD_ECI_COMMON_SB
      PROPERTY(PROPERTY_PMD_PARAMETER)
      COMMENT(COMMENT_PARAGRAPH, "Gain")
      PROPERTY_VALUE(PROPERTY_ITEM_MINIMUM_VALUE, 1)
      VALUE_EX(16, BE, gain, "Gain", Q14, 1.0, 0.0, "dB")
      COMMENT(COMMENT_PARAGRAPH, "Reason for the gain compensation")
      VALUE_CONST(gc_reason, "Reason", AUD_ECI_GAIN_COMP_REASON)
      COMMENT(COMMENT_PARAGRAPH, "Physical Stream of Audio")
      VALUE_CONST(phys_strm, "Physical Stream", AUD_ECI_GAIN_COMP_PHYS_STRM)
    SB_END
 

    /* ------------------------------------------------------------------ */
    /* AUD_SB_ECI_XPROT_PARAMS*/
    /* ------------------------------------------------------------------ */
    COMMENT(COMMENT_PARAGRAPH,
            "  ")
    SB_BEGIN(AUD_SB_ECI_XPROT_PARAMS, "000.001", "")
      AUD_ECI_COMMON_SB
      PROPERTY(PROPERTY_PMD_PARAMETER)
      COMMENT(COMMENT_PARAGRAPH, "Displacement limit, relative to maximum possible (int16)" )
      VALUE(-16, BE, x_lm, "Displacement Limit", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Thermal limit (int16)")
      VALUE(-16, BE, t_lm, "Thermal limit ", DEC)
      COMMENT(COMMENT_PARAGRAPH, " Scaling factor (int16)")
      VALUE(-16, BE, sigma_T_amb, "Ambient temperature scaling factor", DEC)
      COMMENT(COMMENT_PARAGRAPH, " Temp. limiter 1 (int16)")
      VALUE(-16, BE, t_att      , "Temperature limiter attack time 1", DEC)
      COMMENT(COMMENT_PARAGRAPH, " Temp. limiter 2 (int16)")
      VALUE(-16, BE, t_att1     , "Temperature limiter attack time 2", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Release time1 (int16)")
      VALUE(-16, BE, t_rel1     , "Temperature limiter Release time1 ", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Release time2 (int16)")
      VALUE(-16, BE, t_rel2, "Temperature limiter Release time2 ", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Release time3 (int16)")
      VALUE(-16, BE, t_rel3, "Temperature limiter Release time3 ", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Temperature limit (int16)")
      VALUE(-16, BE, t_limit_fast, "Temperature limit for faster time constants", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Displ. predictor (int16)")
      VALUE(-16, BE, sigma_dp, "Displacement predictor characteristic sensitivity", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Feedback coeff. 1 (int16)")
      VALUE(-16, BE, a_1_t, "Displacement predictor feedback coeff 1 ", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Feedback coeff. 2 (int16)")
      VALUE(-16, BE, a_2_t      , "Displacement predictor feedback coeff 2 ", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Peak detector, Release-time constant (int16)")
      VALUE(-16, BE, t_r , "Release time constant", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Coefficient averaging,, Attack constant (int16)")
      VALUE(-16, BE, t_av1      , "Attack constant", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Coefficient averaging, Release constant (int16)")
      VALUE(-16, BE, t_av2      , "Release constant", DEC)
      COMMENT(COMMENT_PARAGRAPH, "A1 calc polynom. coeff. 0 (int16)")
      VALUE(-16, BE, pa1n_00    , "A1 coeff 0", DEC)
      COMMENT(COMMENT_PARAGRAPH, "A1 calc polynom. coeff. 1 (int16)")
      VALUE(-16, BE, pa1n_01    , "A1 coeff 1 ", DEC)
      COMMENT(COMMENT_PARAGRAPH, "A1 calc polynom. coeff. 2 (int16)")
      VALUE(-16, BE, pa1n_02    , "A1 coeff 2", DEC)
      COMMENT(COMMENT_PARAGRAPH, "A1 calc polynom. coeff. 3 (int16)")
      VALUE(-16, BE, pa1n_03    , "A1 coeff 3", DEC)
      COMMENT(COMMENT_PARAGRAPH, "A1 calc polynom. coeff. 4 (int16)")
      VALUE(-16, BE, pa1n_04    , "A1 coeff 4", DEC)
      COMMENT(COMMENT_PARAGRAPH, "A2 calc polynom. coeff. 0 (int16)")
      VALUE(-16, BE, pa2n_00    , "A2 coeff 0", DEC)
      COMMENT(COMMENT_PARAGRAPH, "A2 calc polynom. coeff. 1 (int16)")
      VALUE(-16,  BE, pa2n_01    , "A2 coeff 1", DEC)
      COMMENT(COMMENT_PARAGRAPH, "A2 calc polynom. coeff. 2 (int16)")
      VALUE(-16, BE, pa2n_02    , "A2 coeff 2", DEC)
      COMMENT(COMMENT_PARAGRAPH, "A2 calc polynom. coeff. 3 (int16)")
      VALUE(-16, BE, pa2n_03    , "A2 coeff 3", DEC)
      COMMENT(COMMENT_PARAGRAPH, "A2 calc polynom. coeff. 4 (int16)")
      VALUE(-16, BE, pa2n_04    , "A2 coeff 4", DEC)
      COMMENT(COMMENT_PARAGRAPH, "A1 calc, scaling factor (int16)")
      VALUE(-16, BE, s_pa1n     , "A1 scaling factor", DEC)
      COMMENT(COMMENT_PARAGRAPH, "A2 calc, scaling factor (int16)")
      VALUE(-16, BE, s_pa2n     , "A2 scaling factor", DEC)
      COMMENT(COMMENT_PARAGRAPH, "LFSN char. sens., denomitor (int16)")
      VALUE(-16, BE, b_d , "LFSN denomitor", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Init. val. for LFSN feedback coeff. 1 (int16)")
      VALUE(-16, BE, a_1_r      , "Feedback coeff 1", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Init. val. for LFSN feedback coeff. 2 (int16)")
      VALUE(-16, BE, a_2_r      , "Feedback coeff 2", DEC)
      COMMENT(COMMENT_PARAGRAPH, "LFSN Feedforward coeff 1 (int16)")
      VALUE(-16, BE, b_1_c      , "Ffeedforward coeff 1", DEC)
      COMMENT(COMMENT_PARAGRAPH, "LFSN Feedforward coeff 2 (int16)")
      VALUE(-16, BE, b_2_c      , "Feedforward coeff 2", DEC)
      COMMENT(COMMENT_PARAGRAPH, "LFSN Sensitivity (int16)")
      VALUE(-16, BE, sigma_c_0  , "Sensitivity ", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Thermal model, voice coil, feedforward coeff (int16)")
      VALUE(-16, BE, b_tv, "Feedforward coeff voice coil", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Thermal model, voice coil, feedback coeff (int16)")
      VALUE(-16, BE, a_tv, "Feedback coeff voice coil", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Thermal model, magnet coil, feedforward coeff (int16)")
      VALUE(-16, BE, b_tm, "Feedforward coeff magnet coil", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Thermal model, magnet coil, feedback coeff (int16)")
      VALUE(-16, BE, a_tm, "Feedback coeff magnet coil", DEC)
    SB_END

    /* ------------------------------------------------------------------ */
    /* AUD_SB_ECI_DSDRC_PROPS */
    /* ------------------------------------------------------------------ */
    COMMENT(COMMENT_PARAGRAPH, "DSDRC properties are used by DSP to inform the Audio Server " 
                               "to calculate parameters for DSP DL Speech DRC.")
    SB_BEGIN(AUD_SB_ECI_DSDRC_PROPS, "000.002", "")
      AUD_ECI_COMMON_SB
      PROPERTY(PROPERTY_PMD_PARAMETER)
      COMMENT(COMMENT_PARAGRAPH, "Band count, which is needed for DSDRC. Maximum band count is 5")
      PROPERTY_VALUE(PROPERTY_ITEM_MINIMUM_VALUE, 1)
      PROPERTY_VALUE(PROPERTY_ITEM_MAXIMUM_VALUE, 5)
      VALUE(16, BE, band_count, "DSDRC band count", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Higher frequency limit for first band.")
      VALUE(16, BE, limit1, "Frequency limit 1", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Higher frequency limit for second band.")
      VALUE(16, BE, limit2, "Frequency limit 2", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Higher frequency limit for third band.")
      VALUE(16, BE, limit3, "Frequency limit 3", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Higher frequency limit for fourth band.")
      VALUE(16, BE, limit4, "Frequency limit 4", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Higher frequency limit for fifth band.")
      VALUE(16, BE, limit5, "Frequency limit 5", DEC)
      FILLER_EX(Reserved1, 16, 1)
    SB_END
    
    /* ------------------------------------------------------------------ */
    /* AUD_SB_ECI_DSDRC_PARAMS*/
    /* ------------------------------------------------------------------ */
    COMMENT(COMMENT_PARAGRAPH, "DSDRC parameters are sent to DSP DL Speech DRC. ") 
    SB_BEGIN(AUD_SB_ECI_DSDRC_PARAMS, "000.002", "")
      AUD_ECI_COMMON_SB
      PROPERTY(PROPERTY_PMD_PARAMETER)
      COMMENT(COMMENT_PARAGRAPH, "Band count.")
      PROPERTY_VALUE(PROPERTY_ITEM_MINIMUM_VALUE, 1)
      PROPERTY_VALUE(PROPERTY_ITEM_MAXIMUM_VALUE, 5)
      VALUE(16, BE, band_count, "DSDRC band count", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Gain value for first band.")
      VALUE(16, BE, gain1, "Gain 1", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Gain value for second band.")
      VALUE(16, BE, gain2, "Gain 2", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Gain value for third band.")
      VALUE(16, BE, gain3, "Gain 3", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Gain value for fourth band.")
      VALUE(16, BE, gain4, "Gain 4", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Gain value for fifth band.")
      VALUE(16, BE, gain5, "Gain 5", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Limitation level for first band.")
      VALUE(16, BE, limit_lev1, "Limitation level 1", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Limitation level for second band.")
      VALUE(16, BE, limit_lev2, "Limitation level 2", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Limitation level for third band.")
      VALUE(16, BE, limit_lev3, "Limitation level 3", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Limitation level for fourth band.")
      VALUE(16, BE, limit_lev4, "Limitation level 4", DEC)
      COMMENT(COMMENT_PARAGRAPH, "Limitation level for fifth band.")
      VALUE(16, BE, limit_lev5, "Limitation level 5", DEC)
    SB_END


/*MESSAGE STRUCTURES*/

    /****************************************/
    /* AUD_ECI_AUDIO_BLOCK_REQ & RESP */
    /****************************************/
    COMMENT(COMMENT_PARAGRAPH,
            "This message is used for requesting ECI audio block data from Audio Server by "
            "DSP. The message is sent first from DSP to Audio server with needed sub blocks id's "
            "and then Audio server responses with _RESP message, which will include the requested "
            "tuning parameters. ")
    MSG_BEGIN(AUD_ECI_AUDIO_BLOCK_REQ, MESSAGE_REQ,       "000.001", "")
      AUD_MSG_HDR_TO_8_BIT_ONLY
      FILLER_EX(Reserved1, 8, 1)
      REFERENCE(8, BE, num_sb_id, "Number Of Subblock IDs To Follow", N)
      SB_LST_REF_BEGIN(LIST_OF_SUBBLOCK_IDS, sb_id_list, "Subblock IDs", N,
                       ISIHDR_DONT_GENERATE)
        SB_LST_ENTRY(AUD_SB_ECI_GENERAL_PARAMS          )
        SB_LST_ENTRY(AUD_SB_ECI_UPLINK_SENSITIVITY      )
        SB_LST_ENTRY(AUD_SB_ECI_DOWNLINK_SENSITIVITY    )
        SB_LST_ENTRY(AUD_SB_ECI_DL_PEAK_VOL_LIMITS      )
        SB_LST_ENTRY(AUD_SB_ECI_DISPL_THERM_LIMITS      )
        SB_LST_ENTRY(AUD_SB_ECI_ACOUSTIC_ECHO_CTRL      )
        SB_LST_ENTRY(AUD_SB_ECI_SIDETONE                )
        SB_LST_ENTRY(AUD_SB_ECI_USABLE_BANDS            )
        SB_LST_ENTRY(AUD_SB_ECI_DL_TONE_SPEECH_EQU_IIR  )
/*        SB_LST_ENTRY(AUD_SB_ECI_DL_TONE_SPEECH_EQU_FIR  ) */
        SB_LST_ENTRY(AUD_SB_ECI_DL_APE_PLAY_EQU_1_IIR   )
        SB_LST_ENTRY_VER(AUD_SB_ECI_DL_APE_PLAY_EQU_1_FIR, "001.001", "") 
        SB_LST_ENTRY(AUD_SB_ECI_DL_APE_PLAY_EQU_2_IIR   )
        SB_LST_ENTRY_VER(AUD_SB_ECI_DL_APE_PLAY_EQU_2_FIR, "001.001", "")
        SB_LST_ENTRY(AUD_SB_ECI_UL_APE_REC_EQU_1_IIR    )
/*        SB_LST_ENTRY(AUD_SB_ECI_UL_APE_REC_EQU_1_FIR    ) */
        SB_LST_ENTRY(AUD_SB_ECI_UL_APE_REC_EQU_2_IIR    )
/*        SB_LST_ENTRY(AUD_SB_ECI_UL_APE_REC_EQU_2_FIR    )*/
        SB_LST_ENTRY(AUD_SB_ECI_UL_SPEECH_EQU_IIR       )
/*        SB_LST_ENTRY(AUD_SB_ECI_UL_SPEECH_EQU_FIR       )*/
        SB_LST_ENTRY(AUD_SB_ECI_UL_SIDETONE_EQU_IIR     )
/*        SB_LST_ENTRY(AUD_SB_ECI_UL_SIDETONE_EQU_FIR     )*/
        SB_LST_ENTRY(AUD_SB_ECI_APE_PLAY_MUMDRC_PROPS   )
        SB_LST_ENTRY(AUD_SB_ECI_APE_PLAY_MUMDRC_PARAMS  )
        SB_LST_ENTRY_VER(AUD_SB_ECI_GAIN_COMPENSATION, "000.001", "001.000")
        SB_LST_ENTRY(AUD_SB_ECI_XPROT_PARAMS            )
        SB_LST_ENTRY_VER(AUD_SB_ECI_DSDRC_PARAMS, "000.002", "")
        SB_LST_ENTRY_VER(AUD_SB_ECI_DSDRC_PROPS, "001.000", "")
        SB_LST_REF_END
      MSG_END
       
    COMMENT(COMMENT_PARAGRAPH,
            "This message is used for responding to AUD_ECI_AUDIO_BLOCK_REQ message. "
            "This message will include the required tuning params, which were requested "
            "by the DSP. ")
    MSG_BEGIN(AUD_ECI_AUDIO_BLOCK_RESP, MESSAGE_RESP,     "000.001", "")
      AUD_MSG_HDR_TO_8_BIT_ONLY
      FILLER_EX(Reserved1, 8, 1)
      REFERENCE(8, BE, num_sb, "Number Of Subblocks To Follow", N)
      SB_LST_REF_BEGIN(LIST_OF_SUBBLOCKS, sb_list, "Subblocks", N,
                       ISIHDR_DONT_GENERATE)
        SB_LST_ENTRY(AUD_SB_ECI_GENERAL_PARAMS          )
        SB_LST_ENTRY(AUD_SB_ECI_UPLINK_SENSITIVITY      )
        SB_LST_ENTRY(AUD_SB_ECI_DOWNLINK_SENSITIVITY    )
        SB_LST_ENTRY(AUD_SB_ECI_DL_PEAK_VOL_LIMITS      )
        SB_LST_ENTRY(AUD_SB_ECI_DISPL_THERM_LIMITS      )
        SB_LST_ENTRY(AUD_SB_ECI_ACOUSTIC_ECHO_CTRL      )
        SB_LST_ENTRY(AUD_SB_ECI_SIDETONE                )
        SB_LST_ENTRY(AUD_SB_ECI_USABLE_BANDS            )
        SB_LST_ENTRY(AUD_SB_ECI_DL_TONE_SPEECH_EQU_IIR  )
/*        SB_LST_ENTRY(AUD_SB_ECI_DL_TONE_SPEECH_EQU_FIR  ) */
        SB_LST_ENTRY(AUD_SB_ECI_DL_APE_PLAY_EQU_1_IIR   )
        SB_LST_ENTRY_VER(AUD_SB_ECI_DL_APE_PLAY_EQU_1_FIR, "001.001", "")
        SB_LST_ENTRY(AUD_SB_ECI_DL_APE_PLAY_EQU_2_IIR   )
        SB_LST_ENTRY_VER(AUD_SB_ECI_DL_APE_PLAY_EQU_2_FIR, "001.001", "")
        SB_LST_ENTRY(AUD_SB_ECI_UL_APE_REC_EQU_1_IIR    )
/*        SB_LST_ENTRY(AUD_SB_ECI_UL_APE_REC_EQU_1_FIR    )*/
        SB_LST_ENTRY(AUD_SB_ECI_UL_APE_REC_EQU_2_IIR    )
/*        SB_LST_ENTRY(AUD_SB_ECI_UL_APE_REC_EQU_2_FIR    )*/
        SB_LST_ENTRY(AUD_SB_ECI_UL_SPEECH_EQU_IIR       )
/*        SB_LST_ENTRY(AUD_SB_ECI_UL_SPEECH_EQU_FIR       )*/
        SB_LST_ENTRY(AUD_SB_ECI_UL_SIDETONE_EQU_IIR     )
/*        SB_LST_ENTRY(AUD_SB_ECI_UL_SIDETONE_EQU_FIR     )*/
        SB_LST_ENTRY(AUD_SB_ECI_APE_PLAY_MUMDRC_PROPS   )
        SB_LST_ENTRY(AUD_SB_ECI_APE_PLAY_MUMDRC_PARAMS  )
        SB_LST_ENTRY_VER(AUD_SB_ECI_GAIN_COMPENSATION, "000.001", "001.000")
        SB_LST_ENTRY(AUD_SB_ECI_XPROT_PARAMS            )
        SB_LST_ENTRY_VER(AUD_SB_ECI_DSDRC_PARAMS, "000.002", "")
        SB_LST_ENTRY_VER(AUD_SB_ECI_DSDRC_PROPS, "001.000", "")
      SB_LST_REF_END
    MSG_END
  
    MSG_PAIR(AUD_ECI_AUDIO_BLOCK_REQ, AUD_ECI_AUDIO_BLOCK_RESP)

    MSG_BEGIN(AUD_ECI_AUDIO_BLOCK_FAIL_RESP, MESSAGE_RESP,     "000.001", "")
    AUD_MSG_HDR_TO_8_BIT_ONLY
    FILLER_EX(Reserved1, 8, 1)
    REFERENCE(8, BE, num_sb_id, "Number Of Failed Subblocks To Follow", N)
      SB_LST_REF_BEGIN(LIST_OF_SUBBLOCK_IDS, sb_id_list, "Subblock IDs", N,
                     ISIHDR_DONT_GENERATE)
        SB_LST_ENTRY(AUD_SB_ECI_GENERAL_PARAMS          )
        SB_LST_ENTRY(AUD_SB_ECI_UPLINK_SENSITIVITY      )
        SB_LST_ENTRY(AUD_SB_ECI_DOWNLINK_SENSITIVITY    )
        SB_LST_ENTRY(AUD_SB_ECI_DL_PEAK_VOL_LIMITS      )
        SB_LST_ENTRY(AUD_SB_ECI_DISPL_THERM_LIMITS      )
        SB_LST_ENTRY(AUD_SB_ECI_ACOUSTIC_ECHO_CTRL      )
        SB_LST_ENTRY(AUD_SB_ECI_SIDETONE                )
        SB_LST_ENTRY(AUD_SB_ECI_USABLE_BANDS            )
        SB_LST_ENTRY(AUD_SB_ECI_DL_TONE_SPEECH_EQU_IIR  )
/*        SB_LST_ENTRY(AUD_SB_ECI_DL_TONE_SPEECH_EQU_FIR  ) */
        SB_LST_ENTRY(AUD_SB_ECI_DL_APE_PLAY_EQU_1_IIR   )
        SB_LST_ENTRY_VER(AUD_SB_ECI_DL_APE_PLAY_EQU_1_FIR, "001.001", "")
        SB_LST_ENTRY(AUD_SB_ECI_DL_APE_PLAY_EQU_2_IIR   )
        SB_LST_ENTRY_VER(AUD_SB_ECI_DL_APE_PLAY_EQU_2_FIR, "001.001", "")
        SB_LST_ENTRY(AUD_SB_ECI_UL_APE_REC_EQU_1_IIR    )
/*        SB_LST_ENTRY(AUD_SB_ECI_UL_APE_REC_EQU_1_FIR    ) */
        SB_LST_ENTRY(AUD_SB_ECI_UL_APE_REC_EQU_2_IIR    )
/*        SB_LST_ENTRY(AUD_SB_ECI_UL_APE_REC_EQU_2_FIR    )*/
        SB_LST_ENTRY(AUD_SB_ECI_UL_SPEECH_EQU_IIR       )
/*        SB_LST_ENTRY(AUD_SB_ECI_UL_SPEECH_EQU_FIR       )*/
        SB_LST_ENTRY(AUD_SB_ECI_UL_SIDETONE_EQU_IIR     )
/*        SB_LST_ENTRY(AUD_SB_ECI_UL_SIDETONE_EQU_FIR     )*/
        SB_LST_ENTRY(AUD_SB_ECI_APE_PLAY_MUMDRC_PROPS   )
        SB_LST_ENTRY(AUD_SB_ECI_APE_PLAY_MUMDRC_PARAMS  )
        SB_LST_ENTRY_VER(AUD_SB_ECI_GAIN_COMPENSATION, "000.001", "001.000")
        SB_LST_ENTRY(AUD_SB_ECI_XPROT_PARAMS            )
        SB_LST_ENTRY_VER(AUD_SB_ECI_DSDRC_PARAMS, "000.002", "")
        SB_LST_ENTRY_VER(AUD_SB_ECI_DSDRC_PROPS, "001.000", "")
      SB_LST_REF_END
    MSG_END

    MSG_PAIR(AUD_ECI_AUDIO_BLOCK_REQ, AUD_ECI_AUDIO_BLOCK_FAIL_RESP)

    /****************************************/
    /* AUD_ECI_AUDIO_BLOCK_NTF */
    /****************************************/

    COMMENT(COMMENT_PARAGRAPH,
            "This notification message is used for sending ECI tuning params from Audio "
            "server to DSP. No response message is required. ")
    MSG_BEGIN(AUD_ECI_AUDIO_BLOCK_NTF, MESSAGE_NTF,       "000.001", "")
    AUD_MSG_HDR_TO_8_BIT_ONLY
    FILLER_EX(Reserved1, 8, 1)
    REFERENCE(8, BE, num_sb, "Number Of Subblocks To Follow", N)
      SB_LST_REF_BEGIN(LIST_OF_SUBBLOCKS, sb_list, "Subblocks", N,
                       ISIHDR_DONT_GENERATE)
        SB_LST_ENTRY(AUD_SB_ECI_GENERAL_PARAMS          )
        SB_LST_ENTRY(AUD_SB_ECI_UPLINK_SENSITIVITY      )
        SB_LST_ENTRY(AUD_SB_ECI_DOWNLINK_SENSITIVITY    )
        SB_LST_ENTRY(AUD_SB_ECI_DL_PEAK_VOL_LIMITS      )
        SB_LST_ENTRY(AUD_SB_ECI_DISPL_THERM_LIMITS      )
        SB_LST_ENTRY(AUD_SB_ECI_ACOUSTIC_ECHO_CTRL      )
        SB_LST_ENTRY(AUD_SB_ECI_SIDETONE                )
        SB_LST_ENTRY(AUD_SB_ECI_USABLE_BANDS            )
        SB_LST_ENTRY(AUD_SB_ECI_DL_TONE_SPEECH_EQU_IIR  )
/*        SB_LST_ENTRY(AUD_SB_ECI_DL_TONE_SPEECH_EQU_FIR  ) */
        SB_LST_ENTRY(AUD_SB_ECI_DL_APE_PLAY_EQU_1_IIR   )
        SB_LST_ENTRY_VER(AUD_SB_ECI_DL_APE_PLAY_EQU_1_FIR, "001.001", "")
        SB_LST_ENTRY(AUD_SB_ECI_DL_APE_PLAY_EQU_2_IIR   )
        SB_LST_ENTRY_VER(AUD_SB_ECI_DL_APE_PLAY_EQU_2_FIR, "001.001", "")
        SB_LST_ENTRY(AUD_SB_ECI_UL_APE_REC_EQU_1_IIR    )
/*        SB_LST_ENTRY(AUD_SB_ECI_UL_APE_REC_EQU_1_FIR    ) */
        SB_LST_ENTRY(AUD_SB_ECI_UL_APE_REC_EQU_2_IIR    )
/*        SB_LST_ENTRY(AUD_SB_ECI_UL_APE_REC_EQU_2_FIR    )*/
        SB_LST_ENTRY(AUD_SB_ECI_UL_SPEECH_EQU_IIR       )
/*        SB_LST_ENTRY(AUD_SB_ECI_UL_SPEECH_EQU_FIR       )*/
        SB_LST_ENTRY(AUD_SB_ECI_UL_SIDETONE_EQU_IIR     )
/*        SB_LST_ENTRY(AUD_SB_ECI_UL_SIDETONE_EQU_FIR     )*/
        SB_LST_ENTRY(AUD_SB_ECI_APE_PLAY_MUMDRC_PROPS   )
        SB_LST_ENTRY(AUD_SB_ECI_APE_PLAY_MUMDRC_PARAMS  )
        SB_LST_ENTRY_VER(AUD_SB_ECI_GAIN_COMPENSATION, "000.001", "001.000")
        SB_LST_ENTRY(AUD_SB_ECI_XPROT_PARAMS            )
        SB_LST_ENTRY_VER(AUD_SB_ECI_DSDRC_PARAMS, "000.002", "")
        SB_LST_ENTRY_VER(AUD_SB_ECI_DSDRC_PROPS, "001.000", "")
      SB_LST_REF_END
    MSG_END
  
    /****************************************/
    /* AUD_ECI_PARAM_CONF_REQ & _RESP */
    /****************************************/

    COMMENT(COMMENT_PARAGRAPH,
            "This request message is used to informs audio server the needed configuration"
            "parameters, which are needed for Gain Planning algorithm. ")
    MSG_BEGIN(AUD_ECI_PARAM_CONF_REQ, MESSAGE_REQ,        "000.001", "001.000")
    AUD_MSG_HDR_TO_8_BIT_ONLY
    FILLER_EX(Reserved1, 8, 1)
    REFERENCE(8, BE, num_sb_id, "Number Of Subblock IDs To Follow", N)
      SB_LST_REF_BEGIN(LIST_OF_SUBBLOCK_IDS, sb_id_list, "Subblock IDs", N,
                       ISIHDR_DONT_GENERATE)
        SB_LST_ENTRY(AUD_SB_ECI_DAC_ADC_LEVELS          )
        SB_LST_ENTRY(AUD_SB_ECI_DL_TONE_SPEECH_EQU_IIR  )
        SB_LST_ENTRY(AUD_SB_ECI_DL_APE_PLAY_EQU_1_IIR   )
        SB_LST_ENTRY(AUD_SB_ECI_DL_APE_PLAY_EQU_2_IIR   )
        SB_LST_ENTRY(AUD_SB_ECI_UL_APE_REC_EQU_1_IIR    )
        SB_LST_ENTRY(AUD_SB_ECI_UL_APE_REC_EQU_2_IIR    )
        SB_LST_ENTRY(AUD_SB_ECI_UL_SPEECH_EQU_IIR       )
        SB_LST_ENTRY(AUD_SB_ECI_UL_SIDETONE_EQU_IIR     )
        SB_LST_ENTRY(AUD_SB_ECI_APE_PLAY_MUMDRC_PROPS   )
        SB_LST_ENTRY_VER(AUD_SB_ECI_APE_PLAY_MUMDRC_PARAMS, "000.001", "000.002")
        SB_LST_ENTRY_VER(AUD_SB_ECI_DSDRC_PROPS, "000.002", "001.000")
      SB_LST_REF_END
    MSG_END
    
        COMMENT(COMMENT_PARAGRAPH,
            "This request message is used to informs audio server the needed configuration"
            "parameters, which are needed for Gain Planning algorithm. ")
    MSG_BEGIN(AUD_ECI_PARAM_CONF_REQ, MESSAGE_REQ,        "001.000", "")
    AUD_MSG_HDR_TO_8_BIT_ONLY
    FILLER_EX(Reserved1, 8, 1)
    REFERENCE(8, BE, num_sb, "Number Of Subblocks To Follow", N)
      SB_LST_REF_BEGIN(LIST_OF_SUBBLOCKS, sb_list, "Subblocks", N,
                     ISIHDR_DONT_GENERATE)
        SB_LST_ENTRY(AUD_SB_ECI_DAC_ADC_LEVELS          )
        SB_LST_ENTRY(AUD_SB_ECI_DL_TONE_SPEECH_EQU_IIR  )
/*        SB_LST_ENTRY(AUD_SB_ECI_DL_TONE_SPEECH_EQU_FIR  ) */
        SB_LST_ENTRY(AUD_SB_ECI_DL_APE_PLAY_EQU_1_IIR   )
        SB_LST_ENTRY_VER(AUD_SB_ECI_DL_APE_PLAY_EQU_1_FIR, "001.001", "")
        SB_LST_ENTRY(AUD_SB_ECI_DL_APE_PLAY_EQU_2_IIR   ) 
        SB_LST_ENTRY_VER(AUD_SB_ECI_DL_APE_PLAY_EQU_2_FIR, "001.001", "")
        SB_LST_ENTRY(AUD_SB_ECI_UL_APE_REC_EQU_1_IIR    )
/*        SB_LST_ENTRY(AUD_SB_ECI_UL_APE_REC_EQU_1_FIR    ) */
        SB_LST_ENTRY(AUD_SB_ECI_UL_APE_REC_EQU_2_IIR    )
/*        SB_LST_ENTRY(AUD_SB_ECI_UL_APE_REC_EQU_2_FIR    )*/
        SB_LST_ENTRY(AUD_SB_ECI_UL_SPEECH_EQU_IIR       )
/*        SB_LST_ENTRY(AUD_SB_ECI_UL_SPEECH_EQU_FIR       )*/
        SB_LST_ENTRY(AUD_SB_ECI_UL_SIDETONE_EQU_IIR     )
/*        SB_LST_ENTRY(AUD_SB_ECI_UL_SIDETONE_EQU_FIR     )*/
        SB_LST_ENTRY(AUD_SB_ECI_APE_PLAY_MUMDRC_PROPS   )
        SB_LST_ENTRY(AUD_SB_ECI_DSDRC_PROPS)
      SB_LST_REF_END
    MSG_END
  
    MSG_BEGIN(AUD_ECI_PARAM_CONF_RESP, MESSAGE_RESP,     "000.001", "001.000")
    AUD_MSG_HDR_TO_8_BIT_ONLY
    FILLER_EX(Reserved1, 8, 1)
    REFERENCE(8, BE, num_sb, "Number Of Subblocks To Follow", N)
      SB_LST_REF_BEGIN(LIST_OF_SUBBLOCKS, sb_list, "Subblocks", N,
                     ISIHDR_DONT_GENERATE)
        SB_LST_ENTRY(AUD_SB_ECI_DAC_ADC_LEVELS          )
        SB_LST_ENTRY(AUD_SB_ECI_DL_TONE_SPEECH_EQU_IIR  )
        SB_LST_ENTRY(AUD_SB_ECI_DL_APE_PLAY_EQU_1_IIR   )
        SB_LST_ENTRY(AUD_SB_ECI_DL_APE_PLAY_EQU_2_IIR   )
        SB_LST_ENTRY(AUD_SB_ECI_UL_APE_REC_EQU_1_IIR    )
        SB_LST_ENTRY(AUD_SB_ECI_UL_APE_REC_EQU_2_IIR    )
        SB_LST_ENTRY(AUD_SB_ECI_UL_SPEECH_EQU_IIR       )
        SB_LST_ENTRY(AUD_SB_ECI_UL_SIDETONE_EQU_IIR     )
        SB_LST_ENTRY(AUD_SB_ECI_APE_PLAY_MUMDRC_PROPS   )
        SB_LST_ENTRY_VER(AUD_SB_ECI_APE_PLAY_MUMDRC_PARAMS, "000.001", "000.002")
        SB_LST_ENTRY_VER(AUD_SB_ECI_DSDRC_PROPS, "000.002", "001.000")
      SB_LST_REF_END
    MSG_END
    
    MSG_BEGIN(AUD_ECI_PARAM_CONF_RESP, MESSAGE_RESP,     "001.000", "")
    AUD_MSG_HDR_TO_8_BIT_ONLY
    FILLER_EX(Reserved1, 8, 1)
    REFERENCE(8, BE, num_sb_id, "Number Of Subblock IDs To Follow", N)
      SB_LST_REF_BEGIN(LIST_OF_SUBBLOCK_IDS, sb_id_list, "Subblock IDs", N,
                       ISIHDR_DONT_GENERATE)
        SB_LST_ENTRY(AUD_SB_ECI_DAC_ADC_LEVELS          )
        SB_LST_ENTRY(AUD_SB_ECI_DL_TONE_SPEECH_EQU_IIR  )
/*        SB_LST_ENTRY(AUD_SB_ECI_DL_TONE_SPEECH_EQU_FIR  ) */
        SB_LST_ENTRY(AUD_SB_ECI_DL_APE_PLAY_EQU_1_IIR   )
        SB_LST_ENTRY_VER(AUD_SB_ECI_DL_APE_PLAY_EQU_1_FIR, "001.001", "")
        SB_LST_ENTRY(AUD_SB_ECI_DL_APE_PLAY_EQU_2_IIR   )
        SB_LST_ENTRY_VER(AUD_SB_ECI_DL_APE_PLAY_EQU_2_FIR, "001.001", "")
        SB_LST_ENTRY(AUD_SB_ECI_UL_APE_REC_EQU_1_IIR    )
/*        SB_LST_ENTRY(AUD_SB_ECI_UL_APE_REC_EQU_1_FIR    ) */
        SB_LST_ENTRY(AUD_SB_ECI_UL_APE_REC_EQU_2_IIR    )
/*        SB_LST_ENTRY(AUD_SB_ECI_UL_APE_REC_EQU_2_FIR    )*/
        SB_LST_ENTRY(AUD_SB_ECI_UL_SPEECH_EQU_IIR       )
/*        SB_LST_ENTRY(AUD_SB_ECI_UL_SPEECH_EQU_FIR       )*/
        SB_LST_ENTRY(AUD_SB_ECI_UL_SIDETONE_EQU_IIR     )
/*        SB_LST_ENTRY(AUD_SB_ECI_UL_SIDETONE_EQU_FIR     )*/
        SB_LST_ENTRY(AUD_SB_ECI_APE_PLAY_MUMDRC_PROPS   )
        SB_LST_ENTRY_VER(AUD_SB_ECI_DSDRC_PROPS, "001.000", "")
      SB_LST_REF_END
    MSG_END
  
    MSG_PAIR(AUD_ECI_PARAM_CONF_REQ, AUD_ECI_PARAM_CONF_RESP)
    
    MSG_BEGIN(AUD_ECI_PARAM_CONF_FAIL_RESP, MESSAGE_RESP,     "000.001", "")
    AUD_MSG_HDR_TO_8_BIT_ONLY
    FILLER_EX(Reserved1, 8, 1)
    REFERENCE(8, BE, num_sb_id, "Number Of Failed Subblocks To Follow", N)
      SB_LST_REF_BEGIN(LIST_OF_SUBBLOCK_IDS, sb_id_list, "Subblock IDs", N,
                     ISIHDR_DONT_GENERATE)
        SB_LST_ENTRY(AUD_SB_ECI_DAC_ADC_LEVELS          )
        SB_LST_ENTRY(AUD_SB_ECI_DL_TONE_SPEECH_EQU_IIR  )
/*        SB_LST_ENTRY(AUD_SB_ECI_DL_TONE_SPEECH_EQU_FIR  ) */
        SB_LST_ENTRY(AUD_SB_ECI_DL_APE_PLAY_EQU_1_IIR   )
        SB_LST_ENTRY_VER(AUD_SB_ECI_DL_APE_PLAY_EQU_1_FIR, "001.001", "")
        SB_LST_ENTRY(AUD_SB_ECI_DL_APE_PLAY_EQU_2_IIR   )
        SB_LST_ENTRY_VER(AUD_SB_ECI_DL_APE_PLAY_EQU_2_FIR, "001.001", "")
        SB_LST_ENTRY(AUD_SB_ECI_UL_APE_REC_EQU_1_IIR    )
/*        SB_LST_ENTRY(AUD_SB_ECI_UL_APE_REC_EQU_1_FIR    ) */
        SB_LST_ENTRY(AUD_SB_ECI_UL_APE_REC_EQU_2_IIR    )
/*        SB_LST_ENTRY(AUD_SB_ECI_UL_APE_REC_EQU_2_FIR    ) */
        SB_LST_ENTRY(AUD_SB_ECI_UL_SPEECH_EQU_IIR       )
/*        SB_LST_ENTRY(AUD_SB_ECI_UL_SPEECH_EQU_FIR       )*/
        SB_LST_ENTRY(AUD_SB_ECI_UL_SIDETONE_EQU_IIR     )
/*        SB_LST_ENTRY(AUD_SB_ECI_UL_SIDETONE_EQU_FIR     )*/
        SB_LST_ENTRY(AUD_SB_ECI_APE_PLAY_MUMDRC_PROPS   )
        SB_LST_ENTRY_VER(AUD_SB_ECI_APE_PLAY_MUMDRC_PARAMS, "000.001", "000.002")
        SB_LST_ENTRY_VER(AUD_SB_ECI_DSDRC_PROPS, "000.002", "")
      SB_LST_REF_END
    MSG_END
    
    MSG_PAIR(AUD_ECI_PARAM_CONF_REQ, AUD_ECI_PARAM_CONF_FAIL_RESP)

    /* ------------------------------------------------------------------ */
    /* AUD_ECI_GAIN_COMPENSATION_REQ/RESP */
    /* ------------------------------------------------------------------ */
    COMMENT(COMMENT_PARAGRAPH,
            "  ")
    MSG_BEGIN(AUD_ECI_GAIN_COMPENSATION_REQ, MESSAGE_REQ,       "001.000", "")
    AUD_MSG_HDR_TO_8_BIT_ONLY
      PROPERTY(PROPERTY_PMD_PARAMETER)
      COMMENT(COMMENT_PARAGRAPH, "Gain")
      PROPERTY_VALUE(PROPERTY_ITEM_MINIMUM_VALUE, 1)
      VALUE_EX(16, BE, gain, "Gain", Q14, 1.0, 0.0, "dB")
      COMMENT(COMMENT_PARAGRAPH, "Reason for the gain compensation")
      VALUE_CONST(gc_reason, "Reason for compensation", AUD_ECI_GAIN_COMP_REASON)
      COMMENT(COMMENT_PARAGRAPH, "Signal Path of Audio")
      VALUE_CONST(signal_path, "Signal Path", AUD_ECI_GAIN_COMP_SIGNAL_PATH)
    MSG_END

    COMMENT(COMMENT_PARAGRAPH,
            "  ")
    MSG_BEGIN(AUD_ECI_GAIN_COMPENSATION_OK_RESP, MESSAGE_RESP,       "001.000", "")
    AUD_MSG_HDR_TO_8_BIT_ONLY
      COMMENT(COMMENT_PARAGRAPH, "Reason for the gain compensation")
      VALUE_CONST(gc_reason, "Reason for the compensation", AUD_ECI_GAIN_COMP_REASON)
      COMMENT(COMMENT_PARAGRAPH, "Signal Path of Audio")
      VALUE_CONST(signal_path, "Signal Path", AUD_ECI_GAIN_COMP_SIGNAL_PATH)
      FILLER_EX(Reserved1, 16 , 1)
    MSG_END

    COMMENT(COMMENT_PARAGRAPH,
            "  ")
    MSG_BEGIN(AUD_ECI_GAIN_COMPENSATION_FAIL_RESP, MESSAGE_RESP,       "001.000", "")
    AUD_MSG_HDR_TO_8_BIT_ONLY
      COMMENT(COMMENT_PARAGRAPH, "Reason for the gain compensation")
      VALUE_CONST(gc_reason, "Reason for the compensation", AUD_ECI_GAIN_COMP_REASON)
      COMMENT(COMMENT_PARAGRAPH, "Signal Path of Audio")
      VALUE_CONST(signal_path, "Signal Path", AUD_ECI_GAIN_COMP_SIGNAL_PATH)
      FILLER_EX(Reserved1, 16 , 1)
    MSG_END

    MSG_PAIR(AUD_ECI_GAIN_COMPENSATION_REQ, AUD_ECI_GAIN_COMPENSATION_OK_RESP)
    MSG_PAIR(AUD_ECI_GAIN_COMPENSATION_REQ, AUD_ECI_GAIN_COMPENSATION_FAIL_RESP)

RES_END


/*  5    DATA TYPES */

/*  6    CLASSES */

/*  7    OBJECTS */

/*  8    DATA STRUCTURES */

/*  9    FUNCTION PROTOTYPES */


/* End of file aud_isi_m.h */



/*
NOKIA
R&D Copenhagen
CoreSW/Corleone









                master_trace_m.h
                --------------------
                SW Include






Project:          autogen

%name:            master_trace_m.h %
%version:         15 %
%instance:        co1tss_1 %
%derived_by:      eliasen %
%date_modified:   Fri Feb 04 12:58:49 2011 %

Copyright (c) Nokia. All rights reserved
*/


/* ============================================================================================= */
/* Abstract */
/* ============================================================================================= */

/*  Header file for autogen / trace_isi_m.h

    This file contains message macro definitions for supported traces.
*/


/* Ensure correct trace macros */
#if (!defined AUTOGEN_TRACES_HAVE_FIXED_IDS)
 #define AUTOGEN_TRACES_HAVE_FIXED_IDS
 #include "isi_macros.h"
#endif


/* TRACEBOX_MESSAGE */

PROPERTY(PROPERTY_PMD_TRACE_ACTIVATION_EXCLUDE)
TRACE_BEGIN(MASTER_TRACEBOX_MESSAGE, "TRACEBOX_MESSAGE")
    SEQ_OF_REF(trc_data, "Trace data", AUTOGEN_SEQ_BYTE_HEX, REF_AS_MANY_AS_POSSIBLE, ISIHDR_DONT_GENERATE)
TRACE_END()


/* MCU_TRACE */

PROPERTY(PROPERTY_PMD_TRACE_ACTIVATION_EXCLUDE)
TRACE_BEGIN(MASTER_MCU_TRACE, "MCU_TRACE")
    AUTOGEN_MCU_TRACE_STRUCTURE(AUTOGEN_DEVICE_CURRENT)
TRACE_END()


/* INVARIANT_TRACE */

PROPERTY(PROPERTY_PMD_TRACE_ACTIVATION_EXCLUDE)
PROPERTY(PROPERTY_PMD_PUBLIC)
TRACE_BEGIN(MASTER_INVARIANT_TRACE, "INVARIANT_TRACE")
    AUTOGEN_INVARIANT_TRACE_STRUCTURE()
TRACE_END()


/* HAL_TRACE */

PROPERTY(PROPERTY_PMD_TRACE_ACTIVATION_EXCLUDE)
TRACE_BEGIN(MASTER_HAL_TRACE, "HAL_TRACE")
    AUTOGEN_HAL_TRACE_STRUCTURE(AUTOGEN_DEVICE_CURRENT)
TRACE_END()


/* NOS_TRACE */

PROPERTY(PROPERTY_PMD_TRACE_ACTIVATION_EXCLUDE)
TRACE_BEGIN(MASTER_NOS_TRACE, "NOS_TRACE")
    AUTOGEN_NOS_TRACE_STRUCTURE(AUTOGEN_DEVICE_CURRENT)
TRACE_END()

/* HSP_TRACE */
PROPERTY(PROPERTY_PMD_TRACE_ACTIVATION_EXCLUDE)
TRACE_BEGIN(MASTER_HSP_TRACE, "HSP_XTI_TRACE")
    AUTOGEN_HSP_TRACE_STRUCTURE(AUTOGEN_DEVICE_CURRENT)
TRACE_END()

/* ADSP5_TRACE */

PROPERTY(PROPERTY_PMD_TRACE_ACTIVATION_EXCLUDE)
TRACE_BEGIN(MASTER_ADSP5_TRACE, "ADSP5_TRACE")
    AUTOGEN_ADSP5_TRACE_STRUCTURE()
TRACE_END()


/* CDSP5_TRACE */

PROPERTY(PROPERTY_PMD_TRACE_ACTIVATION_EXCLUDE)
TRACE_BEGIN(MASTER_CDSP5_TRACE, "CDSP5_TRACE")
    AUTOGEN_CDSP5_TRACE_STRUCTURE()
TRACE_END()


/* SYMBIAN_TRACE */

PROPERTY(PROPERTY_PMD_TRACE_ACTIVATION_EXCLUDE)
TRACE_BEGIN(MASTER_SYMBIAN_TRACE, "SYMBIAN_TRACE")
    AUTOGEN_SYMBIAN_TRACE_STRUCTURE()
TRACE_END()


/* OST */

PROPERTY(PROPERTY_PMD_TRACE_ACTIVATION_EXCLUDE)
TRACE_BEGIN(MASTER_OST, "OST")
    AUTOGEN_OST_STRUCTURE()
TRACE_END()

/* SHA1_HASH */

PROPERTY(PROPERTY_PMD_TRACE_ACTIVATION_DEFAULT_STATE_ON)
TRACE_BEGIN(MASTER_SHA1_HASH_TRACE, "SHA1_HASH")
    SEQ_OF_REF(trc_data, "Trace data", AUTOGEN_SEQ_BYTE_HEX, REF_AS_MANY_AS_POSSIBLE, ISIHDR_DONT_GENERATE)
TRACE_END()


/* ASCII_PRINF */

PROPERTY(PROPERTY_PMD_TRACE_ACTIVATION_DEFAULT_STATE_ON)
TRACE_BEGIN(MASTER_ASCII_PRINTF, "ASCII_PRINTF")
#if (AUTOGEN_MASTER_ASCII_PRINTF_TYPE != AUTOGEN_STRING_TYPE_FORMATTED)
    PROPERTY(PROPERTY_STRING_UNFORMATTED)
#endif
#if (AUTOGEN_MASTER_ASCII_PRINTF_TYPE == AUTOGEN_STRING_TYPE_UNFORMATTED_UNICODE)
    STRING_REF(STRING_UNICODE_ZERO_TERMINATED, BE, str, "String", REF_AS_LONG_AS_POSSIBLE, ISIHDR_DONT_GENERATE)
#elif (AUTOGEN_MASTER_ASCII_PRINTF_TYPE == AUTOGEN_STRING_TYPE_UNFORMATTED_LE)
    STRING_REF(STRING_ASCII_ZERO_TERMINATED, LE, str, "String", REF_AS_LONG_AS_POSSIBLE, ISIHDR_DONT_GENERATE)
#else
    STRING_REF(STRING_ASCII_ZERO_TERMINATED, BE, str, "String", REF_AS_LONG_AS_POSSIBLE, ISIHDR_DONT_GENERATE)
#endif
TRACE_END()


/* ASSERT */

PROPERTY(PROPERTY_PMD_TRACE_ACTIVATION_DEFAULT_STATE_ON)
TRACE_BEGIN(MASTER_ASSERT, "ASSERT")
    SEQ_OF_REF(trc_data, "Trace data", AUTOGEN_SEQ_BYTE_HEX, REF_AS_MANY_AS_POSSIBLE, ISIHDR_DONT_GENERATE)
TRACE_END()


/* CORE_DUMP */

PROPERTY(PROPERTY_PMD_TRACE_ACTIVATION_DEFAULT_STATE_ON)
TRACE_BEGIN(MASTER_CORE_DUMP, "CORE_DUMP")
    SEQ_OF_REF(trc_data, "Trace data", AUTOGEN_SEQ_BYTE_HEX, REF_AS_MANY_AS_POSSIBLE, ISIHDR_DONT_GENERATE)
TRACE_END()


/* RAW_DATA */

PROPERTY(PROPERTY_PMD_TRACE_ACTIVATION_DEFAULT_STATE_ON)
TRACE_BEGIN(MASTER_RAW_DATA, "RAW_DATA")
    SEQ_OF_REF(trc_data, "Trace data", AUTOGEN_SEQ_BYTE_HEX, REF_AS_MANY_AS_POSSIBLE, ISIHDR_DONT_GENERATE)
TRACE_END()

/* HW Performance counters */

CONST_TBL_BEGIN(MIPI_IDS, 16, NATIVE, "", "")
    CONST_TBL_ENTRY(NOKIA,            0x0101, "Nokia Corporation")
    CONST_TBL_ENTRY(TI,               0x0102, "Texas Instruments Incorporated")
    CONST_TBL_ENTRY(ARM,              0x0103, "ARM Limited")
    CONST_TBL_ENTRY(STM,              0x0104, "STMicroelectronics")
    CONST_TBL_ENTRY(INTEL,            0x0105, "Intel Corporation")
    CONST_TBL_ENTRY(ERICSSON,         0x0109, "Ericsson AB")
    CONST_TBL_ENTRY(SAMSUNG,          0x010B, "Samsung Electronics")
    CONST_TBL_ENTRY(BENQ,             0x010C, "BenQ Mobile")
    CONST_TBL_ENTRY(SONY_ERICSSON,    0x010D, "Sony Ericsson Mobile Communications")
    CONST_TBL_ENTRY(AMD,              0x0112, "Advanced Micro Devices")
    CONST_TBL_ENTRY(ATSANA,           0x0113, "Atsana Semiconductor")
    CONST_TBL_ENTRY(INFINEON,         0x011A, "Infineon Technologies")
    CONST_TBL_ENTRY(NXP,              0x011B, "NXP Semiconductors")
    CONST_TBL_ENTRY(NATIONAL,         0x011E, "National Semiconductor")
    CONST_TBL_ENTRY(RENESAS_TECH,     0x0122, "Renesas Technology")
    CONST_TBL_ENTRY(TOSHIBA,          0x0126, "Toshiba Corporation")
    CONST_TBL_ENTRY(MOTOROLA,         0x0128, "Motorola")
    CONST_TBL_ENTRY(LG,               0x012A, "LG Electronics")
    CONST_TBL_ENTRY(BROADCOM,         0x012D, "Broadcom")
    CONST_TBL_ENTRY(RFMD,             0x0134, "RF Micro Devices")
    CONST_TBL_ENTRY(MEDIATEK,         0x0135, "MediaTek Inc")
    CONST_TBL_ENTRY(PANASONIC,        0x0140, "Panasonic Corporation")
    CONST_TBL_ENTRY(LAUTERBACH,       0x0155, "Lauterbach ")
    CONST_TBL_ENTRY(RIM,              0x01D4, "Research In Motion")
    CONST_TBL_ENTRY(QUALCOMM,         0x0217, "Qualcomm Incorporated")
    CONST_TBL_ENTRY(ST_ERICSSON,      0x025F, "ST-Ericsson")
    CONST_TBL_ENTRY(RENESAS_E_CORP,   0x0266, "Renesas Electronics Corporation")
    CONST_TBL_ENTRY(NEC_CASIO,        0x026A, "NEC Casio Mobile")
CONST_TBL_END

PROPERTY(PROPERTY_PMD_TRACE_ACTIVATION_DEFAULT_STATE_ON)
TRACE_BEGIN(MASTER_HWPC_DATA, "HWPC_DATA")
    VALUE_CONST(mid, "Mid", MIPI_IDS)
    VALUE(8, BE, pcid, "PCID", HEX)
    VALUE(8, BE, cid, "CID", HEX)
    VALUE(32, BE, ctrl_reg, "Control Register", HEX)
    SEQ_OF_REF(hwpc_data, "HWPC data", AUTOGEN_SEQ_DWORD_HEX_BE, REF_AS_MANY_AS_POSSIBLE, ISIHDR_DONT_GENERATE)
TRACE_END()


/* VENDOR_ASCII_PRINTF */

#ifdef AUTOGEN_INCLUDE_VENDOR_TRACES
PROPERTY(PROPERTY_PMD_TRACE_ACTIVATION_DEFAULT_STATE_ON)
PROPERTY_STRING(PROPERTY_PMD_TRACE_IDENTIFIER, AUTOGEN_VENDOR_IDENTIFIER)
TRACE_BEGIN(MASTER_VENDOR_ASCII_PRINTF, "VENDOR_ASCII_PRINTF")
#if (AUTOGEN_MASTER_ASCII_PRINTF_TYPE != AUTOGEN_STRING_TYPE_FORMATTED)
    PROPERTY(PROPERTY_STRING_UNFORMATTED)
#endif
#if (AUTOGEN_MASTER_ASCII_PRINTF_TYPE == AUTOGEN_STRING_TYPE_UNFORMATTED_UNICODE)
    STRING_REF(STRING_UNICODE_ZERO_TERMINATED, BE, str, "String", REF_AS_LONG_AS_POSSIBLE, ISIHDR_DONT_GENERATE)
#elif (AUTOGEN_MASTER_ASCII_PRINTF_TYPE == AUTOGEN_STRING_TYPE_UNFORMATTED_LE)
    STRING_REF(STRING_ASCII_ZERO_TERMINATED, LE, str, "String", REF_AS_LONG_AS_POSSIBLE, ISIHDR_DONT_GENERATE)
#else
    STRING_REF(STRING_ASCII_ZERO_TERMINATED, BE, str, "String", REF_AS_LONG_AS_POSSIBLE, ISIHDR_DONT_GENERATE)
#endif
TRACE_END()
#endif


/* VENDOR_COMPONENT_TRACE */

#ifdef AUTOGEN_INCLUDE_VENDOR_COMPONENT_TRACES
PROPERTY(PROPERTY_PMD_TRACE_ACTIVATION_EXCLUDE)
PROPERTY_STRING(PROPERTY_PMD_TRACE_IDENTIFIER, AUTOGEN_VENDOR_IDENTIFIER)
TRACE_BEGIN(MASTER_VENDOR_COMPONENT_TRACE, "VENDOR_COMPONENT_TRACE")
    AUTOGEN_VENDOR_COMPONENT_TRACE_STRUCTURE()
TRACE_END()
#endif


/* VENDOR_DLL_TRACE */

#ifdef AUTOGEN_INCLUDE_VENDOR_DLL_TRACE
PROPERTY(PROPERTY_PMD_TRACE_ACTIVATION_EXCLUDE)
PROPERTY_STRING(PROPERTY_PMD_TRACE_IDENTIFIER, AUTOGEN_VENDOR_IDENTIFIER)
TRACE_BEGIN(MASTER_VENDOR_DLL_TRACE, AUTOGEN_VENDOR_DLL_TRACE_NAME)
    PROPERTY_VALUE(PROPERTY_PMD_PHONET_DEVICE_ID, AUTOGEN_DEVICE_CURRENT)
#ifdef AUTOGEN_USE_CHIPSET_SUPPLIER_DESCRIPTION
    REFERENCE(32, BE, supplierid_trccatid, "SupplierId TraceCategoryId", N)
    CHOICE_VALUE_BEGIN(trccat_choice, "TraceCategory", N)
        /* Autogen dynamically attaches choice cases from the code when reading a Chipset Supplier Description */
        DEFAULT_BEGIN("", "")
        #ifdef AUTOGEN_VENDOR_DLL_TRACE_DLL_FILE_NAME
            BLOCK_REF(BE, trc_data, "Trace data", BLOCK_EXT_DECODER, AUTOGEN_VENDOR_DLL_TRACE_DLL_FILE_NAME,
                AUTOGEN_VENDOR_DLL_TRACE_DLL_FUNCTION_NAME, 0, REF_LENGTH_UNKNOWN)
        #else
            SEQ_OF_REF(trc_data, "Trace data", AUTOGEN_SEQ_BYTE_HEX, REF_AS_MANY_AS_POSSIBLE, ISIHDR_DONT_GENERATE)
        #endif
        DEFAULT_END
    CHOICE_END
#else
    BLOCK_REF(BE, trc_data, "Trace data", BLOCK_EXT_DECODER, AUTOGEN_VENDOR_DLL_TRACE_DLL_FILE_NAME, 
        AUTOGEN_VENDOR_DLL_TRACE_DLL_FUNCTION_NAME, 0, REF_LENGTH_UNKNOWN)
#endif
TRACE_END()
#endif


/* PN_MESSAGE */

PROPERTY(PROPERTY_PMD_TRACE_ACTIVATION_EXCLUDE)
PROPERTY(PROPERTY_PMD_MESSAGE_IS_CARRIER)
TRACE_BEGIN(MASTER_PN_MESSAGE, "PN_MESSAGE")
    BLOCK_REF(BE, trc_data, "Msg", BLOCK_PROTOCOL, "PROTOCOL_PHONET", NULL, 0, REF_LENGTH_UNKNOWN)
TRACE_END()



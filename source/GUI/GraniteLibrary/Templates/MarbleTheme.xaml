<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:visualizationToolkit="clr-namespace:System.Windows.Controls.DataVisualization;assembly=System.Windows.Controls.DataVisualization.Toolkit"
                    xmlns:chartingToolkit="clr-namespace:System.Windows.Controls.DataVisualization.Charting;assembly=System.Windows.Controls.DataVisualization.Toolkit"
                    xmlns:s="clr-namespace:System;assembly=mscorlib">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="MarbleColors.xaml" />
        <ResourceDictionary Source="Buttons.xaml" />
        <ResourceDictionary Source="CheckBox.xaml" />
        <ResourceDictionary Source="RadioButton.xaml" />
        <ResourceDictionary Source="ComboBox.xaml" />
        <ResourceDictionary Source="DataGrid.xaml" />
        <ResourceDictionary Source="AdvancedGridSplitter.xaml" />
        <ResourceDictionary Source="MarbleMainMenuItem.xaml" />
        <ResourceDictionary Source="MarbleToolTip.xaml" />
        <ResourceDictionary Source="ScrollBars.xaml" />
        <ResourceDictionary Source="ProgressBar.xaml" />
        <ResourceDictionary Source="ToggleButton.xaml" />
        <ResourceDictionary Source="Expander.xaml" />
        <!--<ResourceDictionary Source="ContextMenu.xaml" />-->
    </ResourceDictionary.MergedDictionaries>

    <s:Boolean x:Key="True">True</s:Boolean>
    <s:Boolean x:Key="False">False</s:Boolean>

    <Style TargetType="{x:Type Image}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="False" />
    </Style>
    
    <Style x:Key="MarbleGroupBox" TargetType="{x:Type GroupBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid Margin="0">
                        <Rectangle x:Name="GroupBoxBackground" RadiusX="4" RadiusY="4" StrokeThickness="2">
                            <Rectangle.Stroke>
                                <LinearGradientBrush>
                                    <GradientStop Color="Black" />
                                </LinearGradientBrush>
                            </Rectangle.Stroke>
                            <Rectangle.Fill>
                                <SolidColorBrush Color="White" />
                            </Rectangle.Fill>
                        </Rectangle>

                        <Rectangle x:Name="GroupBoxBackgroundHighLightBanner" RadiusX="3" RadiusY="3" Height="18" Margin="0" VerticalAlignment="Top" StrokeThickness="1" Stroke="Black"
                                   Fill="{StaticResource MarbleYellowHighlight}" />
                        
                        <Rectangle x:Name="GroupBoxBackgroundBanner" RadiusX="2" RadiusY="2" Height="16" Margin="2" VerticalAlignment="Top" StrokeThickness="0"
                                   Fill="{StaticResource MarbleDefaultGroupBoxHeaderBackground}" />

                        <TextBlock Text="{TemplateBinding Header}" Foreground="{StaticResource MarbleNormalTextColorOnDarkBackground}" Margin="10,2,0,0" 
                                   FontFamily="Calibri" Typography.Capitals="SmallCaps"/>

                        <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="5,22,5,5"/>
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MarbleDarkBackgroundGroupBox" TargetType="{x:Type GroupBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid Margin="0">
                        <Rectangle x:Name="GroupBoxBackground" RadiusX="4" RadiusY="4" StrokeThickness="2">
                            <Rectangle.Stroke>
                                <LinearGradientBrush>
                                    <GradientStop Color="Black" />
                                </LinearGradientBrush>
                            </Rectangle.Stroke>
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Color="#FF2F2F2F" Offset="1"/>
                                    <GradientStop Color="#FF444444"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle x:Name="GroupBoxBackgroundBanner" RadiusX="1" RadiusY="1" Height="18" Margin="1.5" VerticalAlignment="Top" StrokeThickness="0">
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Color="#FF2F2F2F" Offset="1"/>
                                    <GradientStop Color="#FF444444"/>

                                    <!--<GradientStop Color="#90FFFFFF" Offset="0"/>
		                                    <GradientStop Color="#FF012675" Offset="0.3"/>
		                                    <GradientStop Color="#90FFFFFF" Offset="1"/>-->
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>

                        <TextBlock Text="{TemplateBinding Header}" Foreground="White" Margin="10,2,0,0" 
                                   FontFamily="Calibri" Typography.Capitals="SmallCaps"/>

                        <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="5,22,5,5"/>
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MarbleGroupBoxCustomHeader" TargetType="{x:Type GroupBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid Margin="0">
                        <Rectangle x:Name="GroupBoxBackground" RadiusX="4" RadiusY="4" StrokeThickness="2">
                            <Rectangle.Stroke>
                                <LinearGradientBrush>
                                    <GradientStop Color="Black" />
                                </LinearGradientBrush>
                            </Rectangle.Stroke>
                            <Rectangle.Fill>
                                <SolidColorBrush Color="White" />
                            </Rectangle.Fill>
                        </Rectangle>
                        
                        <Rectangle x:Name="GroupBoxBackgroundHighLightBanner" RadiusX="3" RadiusY="3" Height="18" Margin="0" VerticalAlignment="Top" StrokeThickness="1" Stroke="Black"
                                   Fill="{StaticResource MarbleYellowHighlight}" />

                        <Rectangle x:Name="GroupBoxBackgroundBanner" RadiusX="2" RadiusY="2" Height="16" Margin="2" VerticalAlignment="Top" StrokeThickness="0"
                                   Fill="{StaticResource MarbleDefaultGroupBoxHeaderBackground}" />

                        <ContentPresenter Content="{TemplateBinding Header}" Margin="10,2,0,0" />   

                        <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="5,22,5,5"/>
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="MarbleTextBlockLightBackgroundStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="Calibri" />
        <Setter Property="FontSize" Value="11pt" />
        <Setter Property="Typography.Capitals" Value="SmallCaps" />
        <Setter Property="Foreground" Value="{StaticResource MarbleNormalTextColorOnLightBackground}" />
    </Style>

    <Style x:Key="MarbleTextBlockDarkBackgroundStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="Calibri" />
        <Setter Property="FontSize" Value="11pt" />
        <Setter Property="Typography.Capitals" Value="SmallCaps" />
        <Setter Property="Foreground" Value="{StaticResource MarbleNormalTextColorOnDarkBackground}" />
    </Style>

    <Style x:Key="MarbleTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="Calibri" />
        <Setter Property="FontSize" Value="11pt" />
        <Setter Property="Typography.Capitals" Value="SmallCaps" />
    </Style>

    <Style x:Key="MarbleExpanderGroupBox" TargetType="GroupBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid Margin="0">
                        <Rectangle x:Name="GroupBoxBackground" RadiusX="4" RadiusY="4" StrokeThickness="2">
                            <Rectangle.Stroke>
                                <LinearGradientBrush>
                                    <GradientStop Color="Black" />
                                </LinearGradientBrush>
                            </Rectangle.Stroke>
                            <Rectangle.Fill>
                                <SolidColorBrush Color="White" />
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle x:Name="GroupBoxBackgroundHighLightBanner" RadiusX="3" RadiusY="3" Height="18" Margin="0" VerticalAlignment="Top" StrokeThickness="1" Stroke="Black"
                                   Fill="{StaticResource MarbleYellowHighlight}" />

                        <Rectangle x:Name="GroupBoxBackgroundBanner" RadiusX="2" RadiusY="2" Height="16" Margin="2" VerticalAlignment="Top" StrokeThickness="0"
                                   Fill="{StaticResource MarbleDefaultGroupBoxHeaderBackground}" />

                        <Expander x:Name="expanderGroupBox" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                  HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                            <Expander.Style>
                                <Style TargetType="{x:Type Expander}">
                                    <Setter Property="Foreground" Value="White"/>
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                    <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                                    <Setter Property="BorderBrush" Value="Transparent"/>
                                    <Setter Property="BorderThickness" Value="1"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Expander}">
                                                <Grid>
                                                    <Border x:Name="ExpanderBackgroundBanner" CornerRadius="1" Margin="1.5" BorderThickness="0">
                                                        <DockPanel>
                                                            <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="2" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" Style="{StaticResource ExpanderDownHeaderStyle}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Collapsed"/>
                                                        </DockPanel>
                                                    </Border>
                                                </Grid>

                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsExpanded" Value="true">
                                                        <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                                                    </Trigger>
                                                    <Trigger Property="ExpandDirection" Value="Right">
                                                        <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right"/>
                                                        <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
                                                        <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderRightHeaderStyle}"/>
                                                    </Trigger>
                                                    <Trigger Property="ExpandDirection" Value="Up">
                                                        <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
                                                        <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
                                                        <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderUpHeaderStyle}"/>
                                                    </Trigger>
                                                    <Trigger Property="ExpandDirection" Value="Left">
                                                        <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left"/>
                                                        <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
                                                        <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderLeftHeaderStyle}"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="false">
                                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Tag}" Value="IsExpandedOnStart">
                                            <Setter Property="IsExpanded" Value="True" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Tag}" Value="NotExpandedOnStart">
                                            <Setter Property="IsExpanded" Value="False" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Expander.Style>

                            <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="4,2,4,4"/>
                            
                        </Expander>

                        <TextBlock Text="{TemplateBinding Header}" Foreground="{StaticResource MarbleNormalTextColorOnDarkBackground}" Margin="26,5,0,0" IsHitTestVisible="False" 
                                   FontFamily="Calibri" Typography.Capitals="SmallCaps"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MarbleDarkBackgroundExpanderGroupBox" TargetType="GroupBox">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid Margin="0">
                        <Rectangle x:Name="GroupBoxBackground" RadiusX="4" RadiusY="4" StrokeThickness="2" Fill="{StaticResource MarbleLightNaturalBackgroundGradient}">
                            <Rectangle.Stroke>
                                <LinearGradientBrush>
                                    <GradientStop Color="Black" />
                                </LinearGradientBrush>
                            </Rectangle.Stroke>
                        </Rectangle>
                        <Rectangle x:Name="GroupBoxBackgroundBanner" RadiusX="1" RadiusY="1" Height="23" Margin="1.5" VerticalAlignment="Top" StrokeThickness="0" Fill="{StaticResource MarbleLightNaturalBackgroundGradient}" />

                        <Expander x:Name="expanderGroupBox" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                  HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                            <Expander.Style>
                                <Style TargetType="{x:Type Expander}">
                                    <Setter Property="Foreground" Value="White"/>
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                    <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                                    <Setter Property="BorderBrush" Value="Transparent"/>
                                    <Setter Property="BorderThickness" Value="1"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Expander}">
                                                <Grid>
                                                    <Border x:Name="ExpanderBackgroundBanner" CornerRadius="1" Margin="1.5" BorderThickness="0">
                                                        <DockPanel>
                                                            <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="2" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" Style="{StaticResource ExpanderDownHeaderStyle}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Collapsed"/>
                                                        </DockPanel>
                                                    </Border>
                                                </Grid>

                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsExpanded" Value="true">
                                                        <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                                                    </Trigger>
                                                    <Trigger Property="ExpandDirection" Value="Right">
                                                        <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right"/>
                                                        <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
                                                        <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderRightHeaderStyle}"/>
                                                    </Trigger>
                                                    <Trigger Property="ExpandDirection" Value="Up">
                                                        <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
                                                        <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
                                                        <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderUpHeaderStyle}"/>
                                                    </Trigger>
                                                    <Trigger Property="ExpandDirection" Value="Left">
                                                        <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left"/>
                                                        <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
                                                        <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderLeftHeaderStyle}"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="false">
                                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Tag}" Value="IsExpandedOnStart">
                                            <Setter Property="IsExpanded" Value="True" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Tag}" Value="NotExpandedOnStart">
                                            <Setter Property="IsExpanded" Value="False" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Expander.Style>

                            <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="4,2,4,4"/>

                        </Expander>

                        <TextBlock Text="{TemplateBinding Header}" Foreground="{StaticResource MarbleNormalTextColorOnDarkBackground}" Margin="26,5,0,0" IsHitTestVisible="False" 
                                   FontFamily="Calibri" Typography.Capitals="SmallCaps"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MarbleExpanderGroupBoxCustomHeader" TargetType="GroupBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid Margin="0">
                        <Rectangle x:Name="GroupBoxBackground" RadiusX="4" RadiusY="4" StrokeThickness="2">
                            <Rectangle.Stroke>
                                <LinearGradientBrush>
                                    <GradientStop Color="Black" />
                                </LinearGradientBrush>
                            </Rectangle.Stroke>
                            <Rectangle.Fill>
                                <SolidColorBrush Color="White" />
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle x:Name="GroupBoxBackgroundBanner" RadiusX="1" RadiusY="1" Height="23" Margin="1.5" VerticalAlignment="Top" StrokeThickness="0" Fill="{StaticResource MarbleDefaultGroupBoxHeaderBackground}" />

                        <Expander x:Name="expanderGroupBox" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                                  HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                            <Expander.Style>
                                <Style TargetType="{x:Type Expander}">
                                    <Setter Property="Foreground" Value="White"/>
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                    <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                                    <Setter Property="BorderBrush" Value="Transparent"/>
                                    <Setter Property="BorderThickness" Value="1"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Expander}">
                                                <Grid>
                                                    <Border x:Name="ExpanderBackgroundBanner" CornerRadius="1" Margin="1.5" BorderThickness="0">
                                                        <DockPanel>
                                                            <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="2" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" Style="{StaticResource ExpanderDownHeaderStyle}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Collapsed"/>
                                                        </DockPanel>
                                                    </Border>
                                                </Grid>

                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsExpanded" Value="true">
                                                        <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                                                    </Trigger>
                                                    <Trigger Property="ExpandDirection" Value="Right">
                                                        <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right"/>
                                                        <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
                                                        <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderRightHeaderStyle}"/>
                                                    </Trigger>
                                                    <Trigger Property="ExpandDirection" Value="Up">
                                                        <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
                                                        <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
                                                        <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderUpHeaderStyle}"/>
                                                    </Trigger>
                                                    <Trigger Property="ExpandDirection" Value="Left">
                                                        <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left"/>
                                                        <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
                                                        <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderLeftHeaderStyle}"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="false">
                                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Tag}" Value="IsExpandedOnStart">
                                            <Setter Property="IsExpanded" Value="True" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Tag}" Value="NotExpandedOnStart">
                                            <Setter Property="IsExpanded" Value="False" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Expander.Style>

                            <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="4,2,4,4"/>

                        </Expander>

                        <ContentPresenter Content="{TemplateBinding Header}" Margin="26,5,0,0" IsHitTestVisible="False"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--=============== TEXTBOX TO TEXTBLOCK ================-->	
	
    <LinearGradientBrush x:Key="TextBoxBorder" EndPoint="0,20" MappingMode="Absolute" StartPoint="0,0">
        <GradientStop Color="#ABADB3" Offset="0.05"/>
        <GradientStop Color="#E2E3EA" Offset="0.07"/>
        <GradientStop Color="#E3E9EF" Offset="1"/>
    </LinearGradientBrush>
    <Style x:Key="MarbleTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <TextBlock Text="{TemplateBinding Text}" Padding="3,3,0,0" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="{x:Type ToolTip}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolTip}">
                    <Border Background="Black" Opacity="0.85" CornerRadius="4" MaxWidth="500">
                        <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="5" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TextBoxTextErrorValidationStyle" TargetType="{x:Type TextBox}">
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFFF6464" Offset="0"/>
                            <GradientStop Color="White" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <DockPanel LastChildFill="True">
                        <Border DockPanel.Dock="Right" BorderBrush="Black" BorderThickness="1.5" Margin="5,0,0,0" CornerRadius="10" Width="20" Height="20" ToolTip="{Binding ElementName=adornedElementPlaceholder, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFFF6464" Offset="0"/>
                                    <GradientStop Color="#FF620000" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <TextBlock Text="!" Foreground="White" FontWeight="Bold" FontSize="15" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                        <AdornedElementPlaceholder x:Name="adornedElementPlaceholder" VerticalAlignment="Center" />
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    

</ResourceDictionary>
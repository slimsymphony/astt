<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Ribbon="clr-namespace:Microsoft.Windows.Controls.Ribbon;assembly=RibbonControlsLibrary"
                    xmlns:primitives="clr-namespace:Microsoft.Windows.Controls.Ribbon.Primitives;assembly=RibbonControlsLibrary"
                    xmlns:shell="clr-namespace:Microsoft.Windows.Shell;assembly=Microsoft.Windows.Shell"
                    xmlns:classic="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic">

    <primitives:RibbonScrollButtonVisibilityConverter x:Key="ribbonScrollButtonVisibilityConverter"/>
    
    <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />

    <Style x:Key="{x:Type Ribbon:RibbonButton}" TargetType="{x:Type Ribbon:RibbonButton}">
        <Setter Property="Foreground" Value="White" />
    </Style>
    
    <Style x:Key="ribbonRepeatButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Width" Value="14"/>
        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Ribbon:RibbonControlService.Ribbon).Background}"/>
        <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Ribbon:RibbonControlService.Ribbon).BorderBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Name="OuterBorder" CornerRadius="3,0,0,3" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                        <Border Name="InnerBorder" CornerRadius="3,0,0,3" Background="#80FFFFFF">
                            <Path Name="GlyphPath" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="#808080" Data="M 4,0 L 0,3.5 L 4,7"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HorizontalContentAlignment" Value="Right">
                            <Setter TargetName="GlyphPath" Property="Data" Value="M 0,0 L 4,3.5 L 0,7"/>
                            <Setter TargetName="OuterBorder" Property="CornerRadius" Value="0,3,3,0"/>
                            <Setter TargetName="InnerBorder" Property="CornerRadius" Value="0,3,3,0"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=HighContrast, Source={x:Static shell:SystemParameters2.Current}}" Value="False"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="InnerBorder" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Ribbon:RibbonControlService.Ribbon).MouseOverBackground}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=HighContrast, Source={x:Static shell:SystemParameters2.Current}}" Value="False"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="InnerBorder" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Ribbon:RibbonControlService.Ribbon).PressedBackground}"/>
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding Path=HighContrast, Source={x:Static shell:SystemParameters2.Current}}" Value="True">
                            <Setter TargetName="OuterBorder" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            <Setter TargetName="OuterBorder" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter TargetName="InnerBorder" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="InnerBorder" Property="Background" Value="Transparent"/>
                            <Setter TargetName="GlyphPath" Property="Fill" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=HighContrast, Source={x:Static shell:SystemParameters2.Current}}" Value="True"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="InnerBorder" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=HighContrast, Source={x:Static shell:SystemParameters2.Current}}" Value="True"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type Ribbon:RibbonTab}" TargetType="{x:Type Ribbon:RibbonTab}">
    <!--<Style x:Key="RibbonTab" TargetType="{x:Type Ribbon:RibbonTab}">-->
        <Setter Property="KeyTipService.IsKeyTipScope" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Ribbon:RibbonTab}">
                    <Grid x:Name="MainGrid" Visibility="{TemplateBinding IsSelected, Converter={StaticResource booleanToVisibilityConverter}}" ClipToBounds="True">
                        <Line x:Name="OuterLeftLine" StrokeThickness="2" Stroke="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ContextualTabGroup.Background}"
                          X1="0" Y1="0"
                          X2="{Binding RelativeSource={RelativeSource TemplatedParent},Path=TabHeaderLeft}" Y2="0" />
                        <Line x:Name="OuterRightLine" StrokeThickness="2" Stroke="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ContextualTabGroup.Background}"
                          X1="{Binding RelativeSource={RelativeSource TemplatedParent},Path=TabHeaderRight}" Y1="0"
                          X2="{Binding RelativeSource={RelativeSource TemplatedParent},Path=ActualWidth}" Y2="0" />
                        <ScrollViewer x:Name="ScrollViewer">
                            <ScrollViewer.Style>
                                <Style TargetType="{x:Type ScrollViewer}" BasedOn="{x:Null}">
                                    <Setter Property="Focusable" Value="False"/>
                                    <Setter Property="VerticalScrollBarVisibility" Value="Disabled"/>
                                    <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
                                    <Setter Property="CanContentScroll" Value="True"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                                <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <ScrollContentPresenter  Margin="{TemplateBinding Padding}" x:Name="PART_ScrollContentPresenter" Grid.ColumnSpan="3"  Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" CanContentScroll="{TemplateBinding CanContentScroll}" />
                                                    <RepeatButton
                                                          Style="{StaticResource ribbonRepeatButton}"
                                                          HorizontalContentAlignment="Left"
                                                          Grid.Column="0"
                                                          Command="{x:Static ScrollBar.LineLeftCommand}"
                                                          CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                          Focusable="false">
                                                        <RepeatButton.Visibility>
                                                            <MultiBinding FallbackValue="Visibility.Collapsed" Converter="{StaticResource ribbonScrollButtonVisibilityConverter}" ConverterParameter="0">
                                                                <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ComputedHorizontalScrollBarVisibility"/>
                                                                <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="HorizontalOffset"/>
                                                                <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ExtentWidth"/>
                                                                <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ViewportWidth"/>
                                                            </MultiBinding>
                                                        </RepeatButton.Visibility>
                                                    </RepeatButton>
                                                    <RepeatButton Style="{StaticResource ribbonRepeatButton}" HorizontalContentAlignment="Right" Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Focusable="false">
                                                        <RepeatButton.Visibility>
                                                            <MultiBinding FallbackValue="Visibility.Collapsed" Converter="{StaticResource ribbonScrollButtonVisibilityConverter}" ConverterParameter="100">
                                                                <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ComputedHorizontalScrollBarVisibility"/>
                                                                <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="HorizontalOffset"/>
                                                                <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ExtentWidth"/>
                                                                <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ViewportWidth"/>
                                                            </MultiBinding>
                                                        </RepeatButton.Visibility>
                                                    </RepeatButton>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ScrollViewer.Style>

                            <Grid RenderOptions.ClearTypeHint="Enabled" >
                                <Canvas x:Name="BackgroundCanvas" Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,1,0,0">
                                    <Rectangle x:Name="OpaqueRect"
                                           Height="{Binding ElementName=ScrollViewer,Path=ActualHeight}"
                                           Width="{Binding ElementName=ScrollViewer,Path=ActualWidth}"
                                           Fill="{Binding RelativeSource={RelativeSource Self},Path=(Ribbon:RibbonControlService.Ribbon).Background}"/>
                                    <Rectangle x:Name="MarbleBackground"
                                           Height="{Binding ElementName=ScrollViewer,Path=ActualHeight}"
                                           Width="{Binding ElementName=ScrollViewer,Path=ActualWidth}">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#FF2F2F2F" Offset="1"/>
                                                <GradientStop Color="#FF444444"/>
                                            </LinearGradientBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <Rectangle x:Name="OverlayRect"
                                           Height="{Binding ElementName=ScrollViewer,Path=ActualHeight}"
                                           Width="{Binding ElementName=ScrollViewer,Path=ActualWidth}" Visibility="Collapsed">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush StartPoint="0.5,0.0" EndPoint="0.5,1.0" >
                                                <GradientStop Color="#EEFFFFFF" Offset="0.0"/>
                                                <GradientStop Color="#BBFFFFFF" Offset="0.1"/>
                                                <GradientStop Color="#05FFFFFF" Offset="0.5"/>
                                                <GradientStop Color="#20FFFFFF" Offset="1.0"/>
                                            </LinearGradientBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <Rectangle x:Name="InnerOverlayRect" Height="{Binding ElementName=ScrollViewer,Path=ActualHeight}" Width="{Binding ElementName=ScrollViewer,Path=ActualWidth}" Fill="#60FFFFFF" Visibility="Collapsed"/>
                                </Canvas>

                                <ItemsPresenter x:Name="ItemsPresenter" />

                            </Grid>
                        </ScrollViewer>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="ScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                            <Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding ElementName=ScrollViewer, Path=VerticalOffset}" />
                            <Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding ElementName=ScrollViewer, Path=HorizontalOffset}" />
                            <Setter TargetName="OverlayRect" Property="Canvas.Top" Value="{Binding ElementName=ScrollViewer, Path=VerticalOffset}" />
                            <Setter TargetName="OverlayRect" Property="Canvas.Left" Value="{Binding ElementName=ScrollViewer, Path=HorizontalOffset}" />
                            <Setter TargetName="InnerOverlayRect" Property="Canvas.Top" Value="{Binding ElementName=ScrollViewer, Path=VerticalOffset}" />
                            <Setter TargetName="InnerOverlayRect" Property="Canvas.Left" Value="{Binding ElementName=ScrollViewer, Path=HorizontalOffset}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=HighContrast, Source={x:Static shell:SystemParameters2.Current}}" Value="False"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ContextualTabGroup}" Value="{x:Null}"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="OuterLeftLine" Property="Stroke" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Ribbon:RibbonTab}}, Path=Ribbon.BorderBrush}" />
                            <Setter TargetName="OuterRightLine" Property="Stroke" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Ribbon:RibbonTab}}, Path=Ribbon.BorderBrush}" />
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding Path=HighContrast, Source={x:Static shell:SystemParameters2.Current}}" Value="True">
                            <Setter TargetName="BackgroundCanvas" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="OuterLeftLine" Property="Stroke" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                            <Setter TargetName="OuterRightLine" Property="Stroke" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type Ribbon:Ribbon}"  TargetType="{x:Type Ribbon:Ribbon}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="#FF2F2F2F" Offset="1"/>
                    <GradientStop Color="#FF444444"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="MouseOverBorderBrush" Value="Black" />
        <Setter Property="MouseOverBackground">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="#FF53C1ED" Offset="0"/>
                    <GradientStop Color="#FF012675" Offset="0.5"/>
                    <GradientStop Color="#FF53C1ED" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="PressedBorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="White" Offset="0"/>
                    <GradientStop Color="LightCyan" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="PressedBackground">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="#FF53C1ED" Offset="0"/>
                    <GradientStop Color="#FF012675" Offset="0.3"/>
                    <GradientStop Color="#FF012675" Offset="0.7"/>
                    <GradientStop Color="#FF53C1ED" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="CheckedBackground">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="#FF53C1ED" Offset="0"/>
                    <GradientStop Color="#FF012675" Offset="0.2"/>
                    <GradientStop Color="#FF012675" Offset="0.8"/>
                    <GradientStop Color="#FF53C1ED" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="CheckedBorderBrush" Value="Black" />
    </Style>

    <Style x:Key="{x:Type Ribbon:RibbonMenuItem}"  TargetType="{x:Type Ribbon:RibbonMenuItem}">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="MouseOverBorderBrush" Value="Black" />
        <Setter Property="MouseOverBackground">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="#FF53C1ED" Offset="0"/>
                    <GradientStop Color="#FF012675" Offset="0.5"/>
                    <GradientStop Color="#FF53C1ED" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="PressedBorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="White" Offset="0"/>
                    <GradientStop Color="LightCyan" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="PressedBackground">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="#FF53C1ED" Offset="0"/>
                    <GradientStop Color="#FF012675" Offset="0.3"/>
                    <GradientStop Color="#FF012675" Offset="0.7"/>
                    <GradientStop Color="#FF53C1ED" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type Ribbon:RibbonTabHeader}"  TargetType="{x:Type Ribbon:RibbonTabHeader}">
        <!--<Setter Property="Background" Value="{StaticResource MarbleDarkBackgroundGradient}" />-->
        <Setter Property="Width" Value="100" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="CheckedBackground">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="Gray" Offset="0"/>
                    <!--<GradientStop Color="LightSlateGray" Offset="0.1"/>-->
                    <GradientStop Color="#FF2F2F2F" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <!--<Setter Property="CheckedBackground">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="#FF53C1ED" Offset="0"/>
                    <GradientStop Color="#FF012675" Offset="0.2"/>
                    <GradientStop Color="#FF012675" Offset="0.8"/>
                    <GradientStop Color="#FF53C1ED" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>-->
        <Setter Property="CheckedBorderBrush" Value="White" />
        <!--<Setter Property="CheckedBorderBrush">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                    <GradientStop Color="#FF53C1ED" Offset="0"/>
                    <GradientStop Color="White" Offset="0.5"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>-->
        <!--<Setter Property="CheckedBackground">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                    <GradientStop Color="#FF53C1ED" Offset="0"/>
                    <GradientStop Color="White" Offset="0.2"/>
                    <GradientStop Color="Transparent" Offset="0.3"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>-->
        <!--<Setter Property="CheckedBackground" Value="Transparent" />-->
        <!--<Setter Property="CheckedBackground">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="#FF53C1ED" Offset="0"/>
                    <GradientStop Color="White" Offset="0.2"/>
                    <GradientStop Color="Transparent" Offset="0.3"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>-->
        <!--<Setter Property="MouseOverBorderBrush" >
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="#FF53C1ED" Offset="0"/>
                    <GradientStop Color="#FF012675" Offset="0.5"/>
                    <GradientStop Color="#FF53C1ED" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>-->
        <Style.Triggers>
            <Trigger Property="IsRibbonTabSelected" Value="True">
                <Setter Property="Foreground" Value="White" />
                <Setter Property="FontWeight" Value="SemiBold" />
                <Setter Property="TextBlock.Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="5" Direction="0" ShadowDepth="0" Color="#FF53C1ED" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsRibbonTabSelected" Value="False">
                <Setter Property="BorderBrush" Value="Black" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <GradientStop Color="#FF53C1ED" Offset="0"/>
                            <GradientStop Color="#FF012675" Offset="0.5"/>
                            <GradientStop Color="#FF53C1ED" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CheckedDummyRibbonTabHeader"  TargetType="{x:Type Ribbon:RibbonTabHeader}">
        <!--<Setter Property="Background" Value="{StaticResource MarbleDarkBackgroundGradient}" />-->
        <Setter Property="Width" Value="100" />
        <!--<Setter Property="Background" Value="Transparent" />-->
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="Gray" Offset="0"/>
                    <GradientStop Color="#FF2F2F2F" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="White" />
        <!--<Setter Property="CheckedBackground">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="Gray" Offset="0"/>
                    <GradientStop Color="#FF2F2F2F" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>-->
        <!--<Setter Property="CheckedBorderBrush" Value="White" />-->
        <Setter Property="BorderBrush" Value="White" />
        <Style.Triggers>
            <Trigger Property="IsRibbonTabSelected" Value="False">
                <Setter Property="Foreground" Value="White" />
                <Setter Property="FontWeight" Value="SemiBold" />
                <Setter Property="TextBlock.Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="5" Direction="0" ShadowDepth="0" Color="#FF53C1ED" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <!--<Trigger Property="IsRibbonTabSelected" Value="False">
                <Setter Property="BorderBrush" Value="Black" />
            </Trigger>-->
            <!--<Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <GradientStop Color="#FF53C1ED" Offset="0"/>
                            <GradientStop Color="#FF012675" Offset="0.5"/>
                            <GradientStop Color="#FF53C1ED" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>-->
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type Ribbon:RibbonToolTip}" TargetType="{x:Type Ribbon:RibbonToolTip}">
        <Setter Property="Background" Value="Black" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Opacity" Value="0.85" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Ribbon:RibbonToolTip}">

                    <classic:SystemDropShadowChrome x:Name="Shadow" 
                                                    Color="Transparent" 
                                                    SnapsToDevicePixels="True" 
                                                    CornerRadius="2"
                                                    RenderOptions.ClearTypeHint="Enabled"
                                                    >
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                MinHeight="50"
                                CornerRadius="2">
                            <Border x:Name="InnerBorder"
                                     Background="{TemplateBinding Background}"
                                     BorderThickness="0"
                                     BorderBrush="Transparent"
                                     HorizontalAlignment="Stretch"
                                     VerticalAlignment="Stretch"
                                     Padding="{TemplateBinding Padding}"
                                     CornerRadius="2">
                                <StackPanel>
                                    <Grid x:Name="Header">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Border Grid.ColumnSpan="2" Background="{StaticResource MarbleDarkBackgroundGradient}" CornerRadius="2">
                                            <TextBlock x:Name="Title"
                                                   Margin="4"
                                                   Text="{TemplateBinding Title}"
                                                   FontWeight="Bold"
                                                   TextWrapping="Wrap"
                                                   Grid.ColumnSpan="2"/>
                                        </Border>
                                        <Image x:Name="Image"
                                               Margin="7,9,6,4"
                                               Source="{TemplateBinding ImageSource}"
                                               Grid.Row="1"
                                               Stretch="None"
                                               HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                                        <TextBlock x:Name="Description"
                                                   Margin="8,8,0,0"
                                                   Text="{TemplateBinding Description}"
                                                   Grid.Row="1"
                                                   Grid.Column="1"
                                                   TextWrapping="Wrap"
                                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"  />
                                    </Grid>
                                    <Ribbon:RibbonSeparator x:Name="Separator"
                                                            Margin="0,6,0,0"
                                                            BorderBrush="{TemplateBinding BorderBrush}"
                                                            Visibility="Collapsed" />
                                    <Grid x:Name="Footer"
                                          Margin="0,4,0,0"
                                          Visibility="Collapsed">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <Image x:Name="FooterImage"
                                               Margin="0,0,7,0"
                                               Stretch="None"
                                               HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                               Source="{TemplateBinding FooterImageSource}" />
                                        <TextBlock x:Name="FooterTitle"
                                                   Text="{TemplateBinding FooterTitle}"
                                                   FontWeight="Bold"
                                                   TextWrapping="Wrap"
                                                   Grid.Column="1" />
                                        <TextBlock x:Name="FooterDescription"
                                                   Margin="0,0,6,0"
                                                   Text="{TemplateBinding FooterDescription}"
                                                   TextWrapping="Wrap"
                                                   Grid.Column="1"
                                                   Grid.Row="1" />
                                    </Grid>
                                </StackPanel>
                            </Border>
                        </Border>
                    </classic:SystemDropShadowChrome>

                    <ControlTemplate.Triggers>

                        <Trigger Property="HasHeader" Value="False">
                            <Setter TargetName="Header" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="ImageSource" Value="{x:Null}">
                            <Setter TargetName="Image" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="Description" Property="Grid.Column" Value="0" />
                            <Setter TargetName="Description" Property="Grid.ColumnSpan" Value="2" />
                            <Setter Property="Width" Value="210" />
                        </Trigger>
                        <Trigger Property="HasFooter" Value="True">
                            <Setter TargetName="Separator" Property="Visibility" Value="Visible" />
                            <Setter TargetName="Footer" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="FooterDescription" Value="{x:Null}">
                            <Setter TargetName="FooterDescription" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="HasDropShadow" Value="True">
                            <Setter TargetName="Shadow" Property="Margin" Value="0,0,5,5"/>
                            <Setter TargetName="Shadow" Property="Color"  Value="Black"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=HighContrast, Source={x:Static shell:SystemParameters2.Current}}" Value="True" >
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static SystemColors.InfoBrushKey}}" />
                            <Setter TargetName="Border" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.InfoTextBrushKey}}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.InfoTextBrushKey}}" />
                            <Setter TargetName="InnerBorder" Property="Background" Value="Transparent" />
                            <Setter TargetName="Shadow" Property="Color"  Value="Transparent"/>
                        </DataTrigger>
                        <Trigger Property="IsPlacementTargetInRibbonGroup" Value="True">
                            <Setter Property="Placement" Value="Custom" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ImageSource" Value="{x:Null}" />
                                <Condition Property="Description" Value="{x:Null}" />
                                <Condition Property="HasFooter" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="MinHeight" Value="0" />
                            <Setter TargetName="Title" Property="FontWeight" Value="Normal" />
                            <Setter TargetName="Description" Property="Visibility" Value="Collapsed" />
                            <Setter Property="Width" Value="Auto" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    

</ResourceDictionary>
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Marble"
                    xmlns:converters="clr-namespace:Marble.Converters"
                    xmlns:Converters="clr-namespace:MarbleLibrary.Converters;assembly=MarbleLibrary"
                    xmlns:Ribbon="clr-namespace:Microsoft.Windows.Controls.Ribbon;assembly=RibbonControlsLibrary">

    <DataTemplate x:Key="testCaseResultTemplate">
        <Grid>
            <Grid.ToolTip>
                <ToolTip>
                    <ToolTip.Style>
                        <Style TargetType="{x:Type ToolTip}" BasedOn="{StaticResource {x:Type ToolTip}}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding HasChildren, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ToolTip.Style>
                    <ToolTip.Content>
                        <StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <Image Source="/MarbleLibrary;component/Images/passed.circle.icon.16x16.png" Height="16" Width="16" VerticalAlignment="Center" Margin="0,0,5,0" />
                                <TextBlock Text="Passed: " Width="60" VerticalAlignment="Center" />
                                <TextBlock Text="{Binding PassedTestCaseCount, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" />
                                <TextBlock Text=" of " VerticalAlignment="Center" />
                                <TextBlock Text="{Binding TotalTestCaseCount, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" />
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <Image Source="/MarbleLibrary;component/Images/failed.circle.icon.16x16.png" Height="16" Width="16" VerticalAlignment="Center" Margin="0,0,5,0" />
                                <TextBlock Text="Failed: " Width="60" VerticalAlignment="Center" />
                                <TextBlock Text="{Binding FailedTestCaseCount, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" />
                                <TextBlock Text=" of " VerticalAlignment="Center" />
                                <TextBlock Text="{Binding TotalTestCaseCount, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" />
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <Image Source="/MarbleLibrary;component/Images/no.resolution.circle.icon.16x16.png" Height="16" Width="16" VerticalAlignment="Center" Margin="0,0,5,0" />
                                <TextBlock Text="No Result: " Width="60" VerticalAlignment="Center" />
                                <TextBlock Text="{Binding NoResultTestCaseCount, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" />
                                <TextBlock Text=" of " VerticalAlignment="Center" />
                                <TextBlock Text="{Binding TotalTestCaseCount, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" />
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <Image Source="/MarbleLibrary;component/Images/warning.icon.16x16.png" Height="16" Width="16" VerticalAlignment="Center" Margin="0,0,5,0" />
                                <TextBlock Text="Warnings: " Width="60" VerticalAlignment="Center" />
                                <TextBlock Text="{Binding WarningCount}" VerticalAlignment="Center" />
                            </StackPanel>
                        </StackPanel>
                    </ToolTip.Content>
                </ToolTip>
            </Grid.ToolTip>

            <!--*************************************************************************************************-->
            <!-- resultSummaryStackPanel is shown when TestCase has children, i.e. it's been run multiple times. -->
            <!--*************************************************************************************************-->
            <StackPanel x:Name="resultSummaryStackPanel" Orientation="Horizontal" VerticalAlignment="Center" Visibility="{Binding HasChildren, Converter={Converters:BoolToVisibilityCollapsedConverter}}">


                <local:Expander VerticalAlignment="Center" />
                <!--******************************************************************-->
                <!-- summaryResultStackPanel is shown when TestCase is not executing. -->
                <!--******************************************************************-->
                <StackPanel x:Name="summaryResultStackPanel" Orientation="Horizontal" ToolTip="{Binding Result.Result}">

                    <Image Source="/MarbleLibrary;component/Images\whitebox.icon.15x16.png" Height="16" Width="15" VerticalAlignment="Center" HorizontalAlignment="Left" ToolTip="Whitebox mode.">
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Result.IsBlackboxModeOn, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                    <Image Source="/MarbleLibrary;component/Images\blackbox.icon.15x16.png" Height="16" Width="15" VerticalAlignment="Center" HorizontalAlignment="Left" ToolTip="Blackbox mode.">
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Result.IsBlackboxModeOn, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                    <Image x:Name="testCaseSummaryResultImage" Source="{Binding Result.Result, Converter={converters:TestReportResultToImageConverter}}" Height="16" Width="16" Margin="5 0" />
                    <!--<TextBlock Margin="5,0,5,0" Text="#" />
                    <TextBlock x:Name="textBlockIndex" Margin="5,0,5,0" Text="{Binding Result.Index, UpdateSourceTrigger=PropertyChanged}" />-->
                    <!--<TextBlock x:Name="summaryTextBlock" Height="18" VerticalAlignment="Center"
                               Margin="5,0,0,0" 
                               Text="{Binding Result.Result}" 
                               MinWidth="80"
                               Foreground="{Binding Result.Result, Converter={converters:StatusToColorConverter}}" />-->                    
                    <StackPanel.Style>
                        <Style TargetType="{x:Type StackPanel}">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsRunning}" Value="True">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                </StackPanel>
                <!--**********************************************************************-->
                <!-- summaryResultStackPanelProgress is shown when TestCase is executing. -->
                <!--**********************************************************************-->
                <StackPanel x:Name="summaryResultStackPanelProgress" Orientation="Horizontal">
                    <ProgressBar Name="testCaseSummaryProgressBar" Height="14" Width="40" Margin="5,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" 
                                 IsIndeterminate="True">
                    </ProgressBar>
                    <TextBlock x:Name="summaryTextBlockProgress" Height="18" VerticalAlignment="Center"
                               Margin="5,0,0,0" 
                               Text="{Binding Result.Result}" 
                               MinWidth="80"
                               Foreground="{Binding Result.Result, Converter={converters:StatusToColorConverter}}" />
                    <StackPanel.Style>
                        <Style TargetType="{x:Type StackPanel}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsRunning}" Value="True">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                </StackPanel>
            </StackPanel>
            <!--***********************************************************************-->
            <!-- resultsStackPanel is shown when resultSummaryStackPanel is Collapsed. -->
            <!--***********************************************************************-->
            <StackPanel x:Name="resultsStackPanel" Orientation="Horizontal" VerticalAlignment="Center">
                <local:Expander VerticalAlignment="Center" />
                <!--***********************************************************-->
                <!-- resultStackPanel is shown when TestCase is not executing. -->
                <!--***********************************************************-->
                <StackPanel x:Name="resultStackPanel" Orientation="Horizontal">
                    <Image Source="/MarbleLibrary;component/Images\whitebox.icon.15x16.png" Height="16" Width="15" VerticalAlignment="Center"  ToolTip="Whitebox mode.">
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Result.IsBlackboxModeOn, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                    <Image Source="/MarbleLibrary;component/Images\blackbox.icon.15x16.png" Height="16" Width="15" VerticalAlignment="Center" HorizontalAlignment="Left" ToolTip="Blackbox mode.">
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Result.IsBlackboxModeOn, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>

                    <TextBlock x:Name="textBlockIndex" Margin="5,0,0,0" Text="{Binding Result.Index, UpdateSourceTrigger=PropertyChanged}">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Visibility" Value="Visible" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Result.Index, UpdateSourceTrigger=PropertyChanged}" Value="1" />
                                                <Condition Binding="{Binding Path=IsRoot, UpdateSourceTrigger=PropertyChanged}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                    </TextBlock>

                    <Image x:Name="testCaseResultImage" Source="{Binding Result.Result, Converter={converters:TestReportResultToImageConverter}}" Height="16" Width="16" Margin="5 0">
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsRoot}" Value="False">
                                        <Setter Property="ToolTip" Value="{Binding Result.ErrorReason}"/>
                                    </DataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Path=IsRoot}" Value="False"/>
                                            <Condition Binding="{Binding Result.Result}" Value="Passed"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="ToolTip" Value="Passed"></Setter>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                    <!-- StackPanel + TextBlock combo with 2x DropShadowEffects are used to give stronger glow effect. -->
                    <StackPanel Orientation="Horizontal" ToolTip="{Binding Result.Result}">
                        <StackPanel.Style>
                            <Style TargetType="{x:Type StackPanel}">
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Path=Result.IsOriginalResult, UpdateSourceTrigger=PropertyChanged}" Value="False" />
                                            <Condition Binding="{Binding Path=IsRoot, UpdateSourceTrigger=PropertyChanged}" Value="False" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="ToolTip" Value="Result has been modified by user." />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>

                        <TextBlock Text="*" Height="18" VerticalAlignment="Center" FontSize="14">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Path=Result.IsOriginalResult, UpdateSourceTrigger=PropertyChanged}" Value="False" />
                                                <Condition Binding="{Binding Path=IsRoot, UpdateSourceTrigger=PropertyChanged}" Value="False" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Visibility" Value="Visible" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <!--<TextBlock x:Name="stringTextBlock" Height="18" VerticalAlignment="Center"
                               Margin="5,0,0,0" 
                               Text="{Binding Result.Result}" 
                               Visibility="Visible"
                               Foreground="{Binding Result.Result, Converter={converters:StatusToColorConverter}}">
                            <TextBlock.Effect>
                                <DropShadowEffect BlurRadius="5" Direction="0" ShadowDepth="0" Color="White" />
                            </TextBlock.Effect>
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Path=Result.IsOriginalResult, UpdateSourceTrigger=PropertyChanged}" Value="False" />
                                                <Condition Binding="{Binding Path=IsRoot, UpdateSourceTrigger=PropertyChanged}" Value="False" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="FontStyle" Value="Italic" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>-->
                        <StackPanel.Effect>
                            <DropShadowEffect BlurRadius="5" Direction="0" ShadowDepth="0" Color="White" />
                        </StackPanel.Effect>
                    </StackPanel>
                    <Image x:Name="testCaseErrorImage" Source="/MarbleLibrary;component/Images/warning.icon.16x16.png" Height="16" Width="16" ToolTip="{Binding WarningCountInfoString}">
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding WarningCount}" Value="0">
                                        <Setter Property="Visibility" Value="Hidden" />
                                    </DataTrigger>                              
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                    <Image Source="/MarbleLibrary;component/Images/error.icon.16x16.png" Height="16" Width="16" ToolTip="Application crash or phone reset occurred" HorizontalAlignment="Right" 
                           Visibility="{Binding HasCrashOrReset, Converter={Converters:BoolToVisibilityCollapsedConverter}}" Margin="5 0 0 0" />
                    <StackPanel.Style>
                        <Style TargetType="{x:Type StackPanel}">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsRunning}" Value="True">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>                    
                    </StackPanel.Style>
                </StackPanel>
                <!--**********************************************************-->
                <!-- testCaseProgressBar is shown when TestCase is executing. -->
                <!--**********************************************************-->
                <ProgressBar Name="testCaseProgressBar" Height="14" Width="40" Margin="5,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" 
                             IsIndeterminate="True">
                    <ProgressBar.Style>
                        <Style TargetType="{x:Type ProgressBar}" BasedOn="{StaticResource {x:Type ProgressBar}}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsRunning}" Value="True">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ProgressBar.Style>
                </ProgressBar>
            </StackPanel>
        </Grid>
        <DataTemplate.Triggers>
            <Trigger SourceName="resultSummaryStackPanel" Property="Visibility" Value="Collapsed">
                <Setter TargetName="resultsStackPanel" Property="Visibility" Value="Visible" />
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>
</ResourceDictionary>
<Views:UcBase x:Class="Marble.Views.QcSettingsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
              xmlns:Model="clr-namespace:Marble.Model" xmlns:Converters="clr-namespace:Marble.Converters" xmlns:Views="clr-namespace:Marble.Views"
              xmlns:ViewModel="clr-namespace:Marble.ViewModel"
              xmlns:Utilities="clr-namespace:MarbleLibrary.Utilities;assembly=MarbleLibrary" mc:Ignorable="d"
              Width="640"
              d:DataContext="{d:DesignInstance ViewModel:QcSettingsViewModel, IsDesignTimeCreatable=False}"
              d:DesignWidth="640" d:DesignHeight="480">
    <Views:UcBase.CommandBindings>
        <CommandBinding Command="ApplicationCommands.Close"
                        Executed="CloseCommandHandler"/>
    </Views:UcBase.CommandBindings>

    <Grid x:Name="LayoutRoot" Background="#FF2F2F2F" UseLayoutRounding="True">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <GroupBox x:Name="groupBoxQcSettings" Grid.Column="0" Header="QC Import / Export" Margin="3,3,3,8" Background="White" Style="{DynamicResource MarbleGroupBox}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <StackPanel x:Name="stackPanelQcStatus" Grid.Row="0" Margin="-3,-2.5,-3,2">
                    <StackPanel.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FF2F2F2F" Offset="1"/>
                            <GradientStop Color="#FF444444"/>
                        </LinearGradientBrush>
                    </StackPanel.Background>
                    <StackPanel.Style>
                        <Style TargetType="{x:Type StackPanel}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding QcLoginStatus}" Value="Idle">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>

                    <Border Width="{Binding ElementName=stackPanelQcStatus, Path=ActualWidth}" CornerRadius="2" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="0,5,0,5" 
                            ToolTip="{Binding QcStatusMessageExtended, UpdateSourceTrigger=PropertyChanged}">
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="5" ShadowDepth="0" />
                        </Border.Effect>
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Style.Triggers>
                                    <!--
                                    Idle = 0,
                                    LoginInProgress = 1,
                                    LoginSuccessful = 2,
                                    LoginFailed = 3,
                                    LoggedOut = 4
                                    -->
                                    <DataTrigger Binding="{Binding QcLoginStatus}" Value="LoginInProgress">
                                        <Setter Property="Background" Value="{DynamicResource ResourceKey=MarbleTextBoxWarningBackground}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding QcLoginStatus}" Value="LoginSuccessful">
                                        <Setter Property="Background" Value="{DynamicResource ResourceKey=MarbleDataGridCellPassedBackground}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding QcLoginStatus}" Value="LoginFailed">
                                        <Setter Property="Background" Value="{DynamicResource ResourceKey=MarbleTextBoxErrorBackground}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding QcLoginStatus}" Value="LoggedOut">
                                        <Setter Property="Background" Value="{DynamicResource ResourceKey=MarbleDataGridCellUnresolvedBackground}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding QcLoginStatus}" Value="LoginInProgress">
                                        <Setter Property="Background" Value="{DynamicResource ResourceKey=MarbleTextBoxWarningBackground}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>

                        <TextBlock Margin="10,5,10,5" Text="{Binding QcStatusMessage, UpdateSourceTrigger=PropertyChanged}" />
                    </Border>
                </StackPanel>

                <Grid Grid.Row="1" Height="50" Margin="-3,-2.5,-3,5">
                    <Grid.Style>
                        <Style TargetType="{x:Type Grid}">
                            <Setter Property="Visibility" Value="Visible" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding QcLoginStatus}" Value="LoginSuccessful">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <Grid.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FF2F2F2F" Offset="1"/>
                            <GradientStop Color="#FF444444"/>
                        </LinearGradientBrush>
                    </Grid.Background>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <StackPanel Grid.Column="0" Orientation="Vertical" Margin="10,2,2,2">
                        <TextBlock Text="Server" Foreground="White" Margin="0,0,10,0" VerticalAlignment="Center" />
                        <ComboBox x:Name="comboBoxQcServer" Text="{Binding QcServerUrl, Mode=TwoWay}" Width="260" IsEditable="True" VerticalAlignment="Center" ItemsSource="{Binding QcServerUrls}" KeyDown="login_KeyDown" />
                    </StackPanel>

                    <StackPanel Grid.Column="1" Orientation="Vertical" Margin="10,2,2,2">
                        <TextBlock Text="Username" Foreground="White" Margin="0,0,10,0" VerticalAlignment="Center" />
                        <TextBox x:Name="textBoxQcUsername" Text="{Binding Username, Mode=TwoWay}" Width="100" VerticalAlignment="Center" KeyDown="login_KeyDown" />
                    </StackPanel>

                    <StackPanel Grid.Column="2" Orientation="Vertical" Margin="10,2,2,2">
                        <TextBlock Text="Password" Foreground="White" Margin="0,0,10,0" VerticalAlignment="Center" />
                        <PasswordBox x:Name="passwordBoxQcPassword" Width="100" VerticalAlignment="Center" Height="{Binding ElementName=textBoxQcUsername, Path=ActualHeight}"
                                     Utilities:PasswordBoxAssistant.BindPassword="True" Utilities:PasswordBoxAssistant.BoundPassword="{Binding Password, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeyDown="login_KeyDown" />
                    </StackPanel>

                    <Button Grid.Column="4" x:Name="buttonQcLogin" HorizontalAlignment="Right" Width="100" Height="30" Margin="20,0,10,0" Style="{DynamicResource MarbleButton}" Command="{Binding CmdLoginToQc}">
                        <TextBlock Text="Login" />
                    </Button>
                </Grid>

                <Grid Grid.Row="1" Height="50" Margin="-3,-2.5,-3,5">
                    <Grid.Style>
                        <Style TargetType="{x:Type Grid}">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding QcLoginStatus}" Value="LoginSuccessful">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <Grid.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FF2F2F2F" Offset="1"/>
                            <GradientStop Color="#FF444444"/>
                        </LinearGradientBrush>
                    </Grid.Background>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0" Text="{Binding QcServerUrl}" Foreground="White" Margin="10,0,10,0" VerticalAlignment="Center" />

                    <StackPanel Grid.Column="2" Orientation="Horizontal">
                        <Image Width="20" Height="20" Source="/MarbleLibrary;component/Images\user.icon.20x20.png" Margin="10,0,5,0" />
                        <TextBlock Text="{Binding Username}" Foreground="White" Margin="0,0,10,0" VerticalAlignment="Center" />
                    </StackPanel>

                    <Button x:Name="buttonQcLogout" Grid.Column="3" HorizontalAlignment="Right" Width="100" Height="30" Margin="20,0,10,0" Style="{DynamicResource MarbleButton}" Command="{Binding CmdLogoutFromQc}">
                        <TextBlock Text="Logout" />
                    </Button>
                </Grid>

                <StackPanel Grid.Row="2">
                    <StackPanel.Style>
                        <Style TargetType="{x:Type StackPanel}">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding QcLoginStatus}" Value="LoginSuccessful">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>

                    <GroupBox x:Name="groupBoxQcLogin" Grid.Row="2" Header="Server Settings" Margin="3,3,3,8" Background="White" Style="{DynamicResource MarbleGroupBox}">
                        <StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="2">
                                <TextBlock Text="Domain" Width="60" Margin="0,0,10,0" VerticalAlignment="Center" />
                                <ComboBox x:Name="comboBoxQcDomain" Width="300" ItemsSource="{Binding QcDomainStructure.Domains, UpdateSourceTrigger=PropertyChanged}" SelectedValue="{Binding QcDomainStructure.SelectedDomain}">
                                    <ComboBox.ItemContainerStyle>
                                        <Style TargetType="{x:Type ComboBoxItem}">
                                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                                            <Setter Property="FontWeight" Value="Normal" />
                                            <Style.Triggers>
                                                <Trigger Property="IsSelected" Value="True">
                                                    <Setter Property="FontWeight" Value="Bold" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ComboBox.ItemContainerStyle>

                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding Name}" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Margin="2">
                                <StackPanel.Style>
                                    <Style TargetType="{x:Type StackPanel}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding QcDomainStructure.SelectedDomain}" Value="{x:Null}">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </StackPanel.Style>

                                <TextBlock Text="Project" Width="60" Margin="0,0,10,0" VerticalAlignment="Center" />
                                <ComboBox x:Name="comboBoxQcProject" Width="300" ItemsSource="{Binding QcDomainStructure.SelectedDomain.Projects, UpdateSourceTrigger=PropertyChanged}" SelectedValue="{Binding QcDomainStructure.SelectedDomain.SelectedProject}">
                                    <!--<ComboBox.Style>
                                        <Style TargetType="{x:Type ComboBox}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding QcDomainStructure.SelectedDomain.Projects.Count}" Value="1">
                                                    <Setter Property="SelectedIndex" Value="0" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ComboBox.Style>-->
                                    <ComboBox.ItemContainerStyle>
                                        <Style TargetType="{x:Type ComboBoxItem}">
                                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                                            <Setter Property="FontWeight" Value="Normal" />
                                            <Style.Triggers>
                                                <Trigger Property="IsSelected" Value="True">
                                                    <Setter Property="FontWeight" Value="Bold" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ComboBox.ItemContainerStyle>

                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding Name}" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                            </StackPanel>
                        </StackPanel>
                    </GroupBox>

                </StackPanel>

                <StackPanel Grid.Row="3">
                    <StackPanel.Style>
                        <Style TargetType="{x:Type StackPanel}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding QcLoginStatus}" Value="LoginInProgress">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding QcLoginStatus}" Value="LoginFailed">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding QcLoginStatus}" Value="LoggedOut">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding QcLoginStatus}" Value="LoginInProgress">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding QcDomainStructure.SelectedDomain.SelectedProject}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    
                    <GroupBox x:Name="groupBoxQcTestSets" Grid.Row="2" Header="Available Test Sets" Margin="3,3,3,8" Background="White" Style="{DynamicResource MarbleGroupBox}">
                        <StackPanel>
                            <TreeView x:Name="treeViewQcTestSets" ItemsSource="{Binding QcDomainStructure.SelectedDomain.SelectedProject.ProjectTestSetStructure.Children, UpdateSourceTrigger=PropertyChanged}"
                                      MaxHeight="400">

                                <TreeView.ItemContainerStyle>
                                    <Style TargetType="{x:Type TreeViewItem}">
                                        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                                        <Setter Property="FontWeight" Value="Normal" />
                                        <Style.Triggers>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="FontWeight" Value="SemiBold" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </TreeView.ItemContainerStyle>

                                <TreeView.Resources>
                                    <HierarchicalDataTemplate DataType="{x:Type Model:QcTestSetFolderEntity}" ItemsSource="{Binding Children}">
                                        <StackPanel Orientation="Horizontal">
                                            <Image Width="16" Height="16" Margin="2,0,5,0">
                                                <Image.Style>
                                                    <Style TargetType="{x:Type Image}">
                                                        <Setter Property="Source" Value="/MarbleLibrary;component/Images\folder.closed.icon.16x16.png" />
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding IsExpanded}" Value="True">
                                                                <Setter Property="Source" Value="/MarbleLibrary;component/Images\folder.open.icon.16x16.png" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Image.Style>
                                            </Image>
                                            <TextBlock Text="{Binding Name}" Margin="2,1,2,1" />
                                        </StackPanel>
                                    </HierarchicalDataTemplate>

                                    <DataTemplate DataType="{x:Type Model:QcTestSetEntity}">
                                        <StackPanel Orientation="Horizontal">
                                            <Image Source="/MarbleLibrary;component/Images\test.set.icon.16x16.png" Width="16" Height="16" Margin="0,0,5,0" />
                                            <TextBlock Text="{Binding Name}" Margin="2,1,2,1" />
                                        </StackPanel>
                                    </DataTemplate>
                                </TreeView.Resources>

                            </TreeView>

                            <Button x:Name="buttonRetrieveTestSet" Grid.Column="0" Margin="0,10,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Height="30" Style="{DynamicResource MarbleButton}" Command="{Binding CmdRetrieveTestSet}">
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="/MarbleLibrary;component/Images\test.set.importing.icon.24x24.png" Width="24" Height="24" Margin="0,0,10,0" />
                                    <TextBlock Text="Import Test Set" VerticalAlignment="Center" />
                                </StackPanel>
                            </Button>

                        </StackPanel>
                    </GroupBox>
                </StackPanel>
            </Grid>
        </GroupBox>

        

        <Grid Grid.Row="3" Grid.ColumnSpan="3">
            <Grid.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FF2F2F2F" Offset="1"/>
                    <GradientStop Color="#FF444444"/>
                </LinearGradientBrush>
            </Grid.Background>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <Button x:Name="buttonExportTestSet" HorizontalAlignment="Right" Width="200" Height="30" Margin="5" Style="{DynamicResource MarbleButton}" Command="{Binding CmdExportTestSet}">
                <StackPanel Orientation="Horizontal">
                    <Image Source="/MarbleLibrary;component/Images\test.set.exporting.icon.24x24.png" Width="24" Height="24" Margin="0,0,10,0" />
                    <TextBlock Text="Export Test Set..." VerticalAlignment="Center" />
                </StackPanel>
            </Button>

            <Button x:Name="buttonCancel" Grid.Column="2" HorizontalAlignment="Right" Width="100" Height="30" Margin="5" Style="{DynamicResource MarbleButton}" Command="Close">
                <TextBlock Text="Close" />
            </Button>
        </Grid>

    </Grid>
</Views:UcBase>

<Views:UcBase x:Class="Marble.Views.TestReportTestCaseSummaryView" x:Name="UcTestReportTestCaseSummaryView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:sb="clr-namespace:Wpf.Controls;assembly=Wpf.SplitButton"
             xmlns:acb="clr-namespace:AttachedCommandBehavior;assembly=AttachedCommandBehavior"
              xmlns:Model="clr-namespace:Marble.Model" xmlns:Converters="clr-namespace:Marble.Converters" xmlns:Views="clr-namespace:Marble.Views"
             xmlns:ViewModel="clr-namespace:Marble.ViewModel"
              xmlns:CustomControls="clr-namespace:MarbleLibrary.CustomControls;assembly=MarbleLibrary"
              xmlns:Converters1="clr-namespace:MarbleLibrary.Converters;assembly=MarbleLibrary"
              xmlns:local="clr-namespace:Marble.Templates"
              xmlns:dataVis="clr-namespace:System.Windows.Controls.DataVisualization;assembly=System.Windows.Controls.DataVisualization.Toolkit"
              xmlns:chartingToolkit="clr-namespace:System.Windows.Controls.DataVisualization.Charting;assembly=System.Windows.Controls.DataVisualization.Toolkit"
              xmlns:chartingprimitives="clr-namespace:System.Windows.Controls.DataVisualization.Charting.Primitives;assembly=System.Windows.Controls.DataVisualization.Toolkit"
              mc:Ignorable="d"
              d:DataContext="{d:DesignInstance Model:TestCaseSummaryModel, IsDesignTimeCreatable=False}"
             d:DesignWidth="640" d:DesignHeight="480" ClipToBounds="True" Width="Auto" Height="Auto"
              >
    <Views:UcBase.CommandBindings>
        <CommandBinding Command="ApplicationCommands.Close"
                        Executed="CloseCommandHandler"/>
    </Views:UcBase.CommandBindings>
    <Views:UcBase.Resources>
        <ContextMenu x:Key="contextMenuTestResult">
            <MenuItem x:Name="menuItemOpenReport" Header="Open Report in New Window..." FontWeight="Bold" Click="MenuItemOpenReportInNewWindow_OnClick" />
            <Separator/>
            <MenuItem Header="Change Test Result to" IsHitTestVisible="False" Background="{StaticResource MarbleDarkBackgroundGradient}" Foreground="White" />
            <MenuItem x:Name="menuItemChangeResultToPassed" Header="Passed" Click="MenuItem_Click">
                <MenuItem.Icon>
                    <Image Width="16" Height="16" Source="/MarbleLibrary;component/Images/passed.circle.icon.16x16.png" />
                </MenuItem.Icon>
                <MenuItem.Style>
                    <Style TargetType="{x:Type MenuItem}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=Result.Result}" Value="Passed">
                                <Setter Property="IsEnabled" Value="False" />
                                <Setter Property="IsChecked" Value="True" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </MenuItem.Style>
            </MenuItem>
            <MenuItem x:Name="menuItemChangeResultToFailed" Header="Failed" Click="MenuItem_Click">
                <MenuItem.Icon>
                    <Image Width="16" Height="16" Source="/MarbleLibrary;component/Images/failed.circle.icon.16x16.png" />
                </MenuItem.Icon>
                <MenuItem.Style>
                    <Style TargetType="{x:Type MenuItem}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=Result.Result}" Value="Failed">
                                <Setter Property="IsEnabled" Value="False" />
                                <Setter Property="IsChecked" Value="True" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </MenuItem.Style>
            </MenuItem>
            <!--<MenuItem x:Name="menuItemChangeResultToError" Header="Error" Click="MenuItem_Click">
                <MenuItem.Icon>
                    <Image Width="16" Height="16" Source="/MarbleLibrary;component/Images/error.icon.16x16.png" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem x:Name="menuItemChangeResultToNoResult" Header="No Result" Click="MenuItem_Click">
                <MenuItem.Icon>
                    <Image Width="16" Height="16" Source="/MarbleLibrary;component/Images/no.resolution.circle.icon.16x16.png" />
                </MenuItem.Icon>
            </MenuItem>-->
            <MenuItem x:Name="menuItemChangeResultToNotAvailable" Header="N/A" Click="MenuItem_Click">
                <MenuItem.Style>
                    <Style TargetType="{x:Type MenuItem}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=Result.Result}" Value="N/A">
                                <Setter Property="IsEnabled" Value="False" />
                                <Setter Property="IsChecked" Value="True" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </MenuItem.Style>
            </MenuItem>
            <MenuItem x:Name="menuItemChangeResultToOriginal" Click="MenuItem_Click" >
                <MenuItem.Icon>
                    <Image Width="16" Height="16" Source="{Binding Path=Result.OriginalResult, Converter={Converters:TestReportResultToImageConverter}}" />
                </MenuItem.Icon>
                <MenuItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Original Result - " />
                        <TextBlock Text="{Binding Path=Result.OriginalResult}" />
                    </StackPanel>
                </MenuItem.Header>
                <MenuItem.Style>
                    <Style TargetType="{x:Type MenuItem}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=Result.IsOriginalResult}" Value="True">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </MenuItem.Style>
            </MenuItem>
        </ContextMenu>
    </Views:UcBase.Resources>

    <Grid x:Name="LayoutRoot" Background="{StaticResource MarbleDarkPurpleButtonBackground}"  MaxWidth="{Binding ElementName=UcTestReportTestCaseSummaryView, Path=ActualWidth}">
        <Grid.Style>
            <Style TargetType="{x:Type Grid}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding}" Value="{x:Null}">
                        <Setter Property="Visibility" Value="Collapsed" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Grid.Style>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Popup x:Name="popupResultsInfo" IsOpen="{Binding IsChecked, ElementName=toggleButtonResultsInfo}"  StaysOpen="False" AllowsTransparency="True" 
               Placement="Mouse">
            <Grid Grid.Row="1" x:Name="gridTestReport" Margin="5" Background="{StaticResource MarbleDarkPurleBackgroundGradient}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="150" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Row="0" Grid.ColumnSpan="2">

                    <StackPanel Orientation="Horizontal">
                        <StackPanel.Style>
                            <Style TargetType="{x:Type StackPanel}">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=UcTestReportTestCaseSummaryView, Path=ViewModel.ViewMode, UpdateSourceTrigger=PropertyChanged}" Value="Rsa">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                        <Grid>
                            <Image Height="16" Width="16" Source="/MarbleLibrary;component/Images/passed.circle.icon.16x16.png" HorizontalAlignment="Left" />
                            <TextBlock Text="%"  FontSize="16" Foreground="White" Margin="12,-4,10,0" VerticalAlignment="Center">
                                <TextBlock.Effect>
                                    <DropShadowEffect BlurRadius="5" Direction="0" ShadowDepth="0" Color="Black" />
                                </TextBlock.Effect>
                            </TextBlock>
                        </Grid>

                        <TextBlock x:Name="textBlockPassrate" Text="{Binding ElementName=UcTestReportTestCaseSummaryView, Path=Passrate, UpdateSourceTrigger=PropertyChanged, StringFormat=Pass Rate {0:0.00} %}" FontSize="16" Foreground="White" Margin="0,0,0,5">
                            <TextBlock.Effect>
                                <DropShadowEffect BlurRadius="5" Direction="0" ShadowDepth="0" Color="LightGreen" />
                            </TextBlock.Effect>
                        </TextBlock>
                    </StackPanel>

                    <TextBlock Grid.Row="0" Grid.ColumnSpan="2" x:Name="textBlockSummaryTitle" FontSize="13" Foreground="White" Margin="0,0,0,5" Visibility="Collapsed">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Text" Value="{Binding Path=SummaryTitle, UpdateSourceTrigger=PropertyChanged}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=UcTestReportTestCaseSummaryView, Path=ViewModel.ViewMode, UpdateSourceTrigger=PropertyChanged}" Value="Rsa">
                                        <Setter Property="Text" Value="Test Run Iteration Results" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </StackPanel>

                <CheckBox Grid.Row="1" Grid.Column="0" x:Name="checkBoxShowPassedTestRuns" Margin="5 0" Checked="checkCheckBoxShowAllTestRunsIsCheckedStatus"
                          Unchecked="checkCheckBoxShowAllTestRunsIsCheckedStatus" VerticalAlignment="Center">
                    <CheckBox.Style>
                        <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource {x:Type CheckBox}}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=PassedResultCount}" Value="0">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=SummaryMode, UpdateSourceTrigger=PropertyChanged}" Value="MultipleTestCases">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=SummaryMode, UpdateSourceTrigger=PropertyChanged}" Value="AllTestCasesInTestSet">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </CheckBox.Style>
                </CheckBox>
                <Image Grid.Row="1" Grid.Column="1" Height="16" Width="16" Source="/MarbleLibrary;component/Images/passed.circle.icon.16x16.png" HorizontalAlignment="Left" />
                <TextBlock Grid.Row="1" Grid.Column="1" Text="Passed" Foreground="{StaticResource MarbleNormalTextColorOnDarkBackground}" Margin="20, 0, 0, 0" VerticalAlignment="Center"/>
                <TextBlock Grid.Row="1" Grid.Column="2" x:Name="textBlockPassedCount" Foreground="{StaticResource MarbleNormalTextColorOnDarkBackground}" VerticalAlignment="Center">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Text" Value="{Binding Path=PassedResultCount, UpdateSourceTrigger=PropertyChanged}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=UcTestReportTestCaseSummaryView, Path=ViewModel.ViewMode}" Value="Rsa">
                                    <Setter Property="Text" Value="{Binding ElementName=UcTestReportTestCaseSummaryView, Path=PassedIterationCount}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>

                <CheckBox Grid.Row="2" Grid.Column="0" x:Name="checkBoxShowFailedTestRuns" Margin="5 0" Checked="checkCheckBoxShowAllTestRunsIsCheckedStatus"
                          Unchecked="checkCheckBoxShowAllTestRunsIsCheckedStatus" VerticalAlignment="Center">
                    <CheckBox.Style>
                        <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource {x:Type CheckBox}}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=FailedResultCount}" Value="0">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=SummaryMode, UpdateSourceTrigger=PropertyChanged}" Value="MultipleTestCases">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=SummaryMode, UpdateSourceTrigger=PropertyChanged}" Value="AllTestCasesInTestSet">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </CheckBox.Style>
                </CheckBox>
                <Image Grid.Row="2" Grid.Column="1" Height="16" Width="16" Source="/MarbleLibrary;component/Images/failed.circle.icon.16x16.png" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                <TextBlock Grid.Row="2" Grid.Column="1" Text="Failed" Foreground="{StaticResource MarbleNormalTextColorOnDarkBackground}" Margin="20, 0, 0, 0" VerticalAlignment="Center"/>
                <TextBlock Grid.Row="2" Grid.Column="2" x:Name="textBlockFailedCount" Foreground="{StaticResource MarbleNormalTextColorOnDarkBackground}" VerticalAlignment="Center">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Text" Value="{Binding Path=FailedResultCount, UpdateSourceTrigger=PropertyChanged}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=UcTestReportTestCaseSummaryView, Path=ViewModel.ViewMode}" Value="Rsa">
                                    <Setter Property="Text" Value="{Binding ElementName=UcTestReportTestCaseSummaryView, Path=FailedIterationCount}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>

                <!--<CheckBox Grid.Row="3" Grid.Column="0" x:Name="checkBoxShowErrorTestRuns" Margin="5,0,5,0" Checked="checkCheckBoxShowAllTestRunsIsCheckedStatus" Unchecked="checkCheckBoxShowAllTestRunsIsCheckedStatus">
                <CheckBox.Style>
                    <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource {x:Type CheckBox}}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=ErrorResultCount}" Value="0">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=SummaryMode, UpdateSourceTrigger=PropertyChanged}" Value="MultipleTestCases">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=SummaryMode, UpdateSourceTrigger=PropertyChanged}" Value="AllTestCasesInTestSet">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </CheckBox.Style>
            </CheckBox>
            <Image Grid.Row="3" Grid.Column="1" Height="16" Width="16" Source="/MarbleLibrary;component/Images/error.icon.16x16.png" HorizontalAlignment="Left"/>
            <TextBlock Grid.Row="3" Grid.Column="1" Text="Error" Foreground="{StaticResource MarbleNormalTextColorOnLightBackground}" Margin="20, 0, 0, 0"/>
            <TextBlock Grid.Row="3" Grid.Column="2" x:Name="textBlockErrorCount" Foreground="{StaticResource MarbleNormalTextColorOnLightBackground}" >
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="Text" Value="{Binding Path=ErrorResultCount, UpdateSourceTrigger=PropertyChanged}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=UcTestReportTestCaseSummaryView, Path=ViewModel.ViewMode}" Value="Rsa">
                                <Setter Property="Text" Value="{Binding ElementName=UcTestReportTestCaseSummaryView, Path=ErrorIterationCount}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>-->

                <CheckBox Grid.Row="3" Grid.Column="0" x:Name="checkBoxShowNoResultTestRuns" Margin="5 0" Checked="checkCheckBoxShowAllTestRunsIsCheckedStatus"
                          Unchecked="checkCheckBoxShowAllTestRunsIsCheckedStatus" VerticalAlignment="Center">
                    <CheckBox.Style>
                        <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource {x:Type CheckBox}}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=NoResultResultCount}" Value="0">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=SummaryMode, UpdateSourceTrigger=PropertyChanged}" Value="MultipleTestCases">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=SummaryMode, UpdateSourceTrigger=PropertyChanged}" Value="AllTestCasesInTestSet">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </CheckBox.Style>
                </CheckBox>
                <Image Grid.Row="3" Grid.Column="1" Height="16" Width="16" Source="/MarbleLibrary;component/Images/no.resolution.circle.icon.16x16.png" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                <TextBlock Grid.Row="3" Grid.Column="1" Text="No Result" Foreground="{StaticResource MarbleNormalTextColorOnDarkBackground}" Margin="20, 0, 0, 0" VerticalAlignment="Center" />
                <TextBlock Grid.Row="3" Grid.Column="2" x:Name="textBlockNoResultCount" Foreground="{StaticResource MarbleNormalTextColorOnDarkBackground}" VerticalAlignment="Center">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Text" Value="{Binding Path=NoResultResultCount, UpdateSourceTrigger=PropertyChanged}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=UcTestReportTestCaseSummaryView, Path=ViewModel.ViewMode}" Value="Rsa">
                                    <Setter Property="Text" Value="{Binding ElementName=UcTestReportTestCaseSummaryView, Path=NoResultIterationCount}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>

                <CheckBox Grid.Row="4" Grid.Column="0" x:Name="checkBoxShowCrashTestRuns" Margin="5 0" Checked="checkCheckBoxShowAllTestRunsIsCheckedStatus"
                          Unchecked="checkCheckBoxShowAllTestRunsIsCheckedStatus" VerticalAlignment="Center">
                    <CheckBox.Style>
                        <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource {x:Type CheckBox}}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=CrashResultCount}" Value="0">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=SummaryMode, UpdateSourceTrigger=PropertyChanged}" Value="MultipleTestCases">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=SummaryMode, UpdateSourceTrigger=PropertyChanged}" Value="AllTestCasesInTestSet">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </CheckBox.Style>
                </CheckBox>
                <Image Grid.Row="4" Grid.Column="1" Height="16" Width="16" Source="/MarbleLibrary;component/Images/error.icon.16x16.png" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                <TextBlock Grid.Row="4" Grid.Column="1" Text="Crash or Reset" Foreground="{StaticResource MarbleNormalTextColorOnDarkBackground}" Margin="20, 0, 0, 0" VerticalAlignment="Center" />
                <TextBlock Grid.Row="4" Grid.Column="2" Foreground="{StaticResource MarbleNormalTextColorOnDarkBackground}" VerticalAlignment="Center"
                           Text="{Binding Path=CrashResultCount}" />
                <!--
                <CheckBox Grid.Row="4" Grid.Column="0" x:Name="checkBoxShowNotAvailableTestRuns" Margin="5,0,5,0" Checked="checkCheckBoxShowAllTestRunsIsCheckedStatus" Unchecked="checkCheckBoxShowAllTestRunsIsCheckedStatus">
                    <CheckBox.Style>
                        <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource {x:Type CheckBox}}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=NotAvailableResultCount}" Value="0">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=SummaryMode, UpdateSourceTrigger=PropertyChanged}" Value="MultipleTestCases">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=SummaryMode, UpdateSourceTrigger=PropertyChanged}" Value="AllTestCasesInTestSet">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </CheckBox.Style>
                </CheckBox>
                <TextBlock Grid.Row="4" Grid.Column="1" Text="N/A" Foreground="{StaticResource MarbleNormalTextColorOnDarkBackground}" Margin="20, 0, 0, 0"/>
                <TextBlock Grid.Row="4" Grid.Column="2" x:Name="textBlockNotAvailableCount" Foreground="{StaticResource MarbleNormalTextColorOnDarkBackground}" >
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Text" Value="{Binding Path=NotAvailableResultCount, UpdateSourceTrigger=PropertyChanged}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=UcTestReportTestCaseSummaryView, Path=ViewModel.ViewMode}" Value="Rsa">
                                    <Setter Property="Text" Value="{Binding ElementName=UcTestReportTestCaseSummaryView, Path=NotAvailableIterationCount}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                -->

                <CheckBox Grid.Row="6" Grid.Column="0" x:Name="checkBoxShowAllTestRuns" Margin="5 0" IsChecked="True" Checked="checkBoxShowAllTestRuns_Checked"
                          Unchecked="checkBoxShowAllTestRuns_Checked" VerticalAlignment="Center">
                    <CheckBox.Style>
                        <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource {x:Type CheckBox}}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=SummaryMode, UpdateSourceTrigger=PropertyChanged}" Value="MultipleTestCases">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=SummaryMode, UpdateSourceTrigger=PropertyChanged}" Value="AllTestCasesInTestSet">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </CheckBox.Style>
                </CheckBox>
                <TextBlock Grid.Row="6" Grid.Column="1" Height="16" Width="16" Text="∑" HorizontalAlignment="Left" FontWeight="ExtraBold"
                           Foreground="{StaticResource MarbleTextBoxWarningBackground}" Margin="5,-3,0,0" VerticalAlignment="Center">
                    <TextBlock.Effect>
                        <DropShadowEffect BlurRadius="5" Direction="0" ShadowDepth="0" Color="Black" />
                    </TextBlock.Effect>
                </TextBlock>
                <TextBlock Grid.Row="6" Grid.Column="1" Text="Total" Foreground="{StaticResource MarbleNormalTextColorOnDarkBackground}" Margin="20, 0, 0, 0" VerticalAlignment="Center" />
                <TextBlock Grid.Row="6" Grid.Column="2" Foreground="{StaticResource MarbleNormalTextColorOnDarkBackground}" VerticalAlignment="Center">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Text" Value="{Binding Path=TotalResultCount, UpdateSourceTrigger=PropertyChanged}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=UcTestReportTestCaseSummaryView, Path=ViewModel.ViewMode}" Value="Rsa">
                                    <Setter Property="Text" Value="{Binding ElementName=UcTestReportTestCaseSummaryView, Path=TotalIterationCount}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>

                <chartingToolkit:Chart Grid.RowSpan="10" Grid.Column="3" x:Name="chartTestCaseSummary">
                    <chartingToolkit:Chart.Style>
                        <Style TargetType="{x:Type chartingToolkit:Chart}">
                            <Setter Property="Background" Value="{x:Null}" />
                            <Setter Property="BorderThickness" Value="0" />
                        </Style>
                    </chartingToolkit:Chart.Style>
                    <chartingToolkit:Chart.Template>
                        <ControlTemplate TargetType="chartingToolkit:Chart">
                            <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <chartingprimitives:EdgePanel x:Name="ChartArea" Style="{TemplateBinding ChartAreaStyle}">
                                        <Grid Canvas.ZIndex="-1"/>
                                    </chartingprimitives:EdgePanel>

                                    <dataVis:Legend x:Name="Legend" Title="{TemplateBinding LegendTitle}" Grid.Column="1">
                                        <dataVis:Legend.Style>
                                            <Style TargetType="{x:Type dataVis:Legend}">
                                                <Setter Property="Foreground" Value="White" />
                                                <Setter Property="VerticalAlignment" Value="Center" />
                                                <Setter Property="BorderThickness" Value="0" />
                                            </Style>
                                        </dataVis:Legend.Style>
                                    </dataVis:Legend>

                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </chartingToolkit:Chart.Template>

                    <chartingToolkit:Chart.Series>
                        <chartingToolkit:PieSeries x:Name="pieSeriesSummary" Background="{StaticResource MarbleDarkBackgroundGradient}" ItemsSource="{Binding Path=ResultCountCollection, UpdateSourceTrigger=PropertyChanged}" IndependentValueBinding="{Binding Path=Name}" DependentValueBinding="{Binding Path=StatusCount}">
                            <chartingToolkit:PieSeries.Palette>
                                <dataVis:ResourceDictionaryCollection>
                                    <ResourceDictionary>
                                        <Style x:Key="DataPointStyle" TargetType="{x:Type chartingToolkit:PieDataPoint}">
                                            <Setter Property="Background" Value="{Binding Path=Name, Converter={Converters:TestCaseResultToPieChartColorConverter}, ConverterParameter={StaticResource PieSeriesTestCaseResultColors}}"/>
                                            <Setter Property="BorderBrush" Value="Black" />
                                            <Setter Property="DependentValueStringFormat" Value="{Binding Path=ToolTipText}" />
                                        </Style>
                                    </ResourceDictionary>
                                </dataVis:ResourceDictionaryCollection>
                            </chartingToolkit:PieSeries.Palette>
                        </chartingToolkit:PieSeries>
                    </chartingToolkit:Chart.Series>

                </chartingToolkit:Chart>
            </Grid>
        </Popup>

        <!--[ TEST REPORT RESULT]-->
        <StackPanel Grid.Row="0" x:Name="stackPanelTestReportResult" Orientation="Horizontal" HorizontalAlignment="Stretch"
                    MaxWidth="{Binding ElementName=UcTestReportTestCaseSummaryView, Path=ActualWidth, Converter={Converters1:DoubleValueAndParameterValueAdded}, ConverterParameter=-10}" 
                    Width="{Binding ElementName=UcTestReportTestCaseSummaryView, Path=ActualWidth, Converter={Converters1:DoubleValueAndParameterValueAdded}, ConverterParameter=-10}">
            <StackPanel.Style>
                <Style TargetType="{x:Type StackPanel}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=SummaryMode, UpdateSourceTrigger=PropertyChanged}" Value="MultipleTestCases">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=SummaryMode, UpdateSourceTrigger=PropertyChanged}" Value="AllTestCasesInTestSet">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=SummaryMode, UpdateSourceTrigger=PropertyChanged}" Value="AllTestRuns">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Style>
            <Border CornerRadius="5"
                        MaxWidth="{Binding ElementName=stackPanelTestReportResult, Path=ActualWidth}" 
                        Width="{Binding ElementName=stackPanelTestReportResult, Path=ActualWidth}">
                <Border.Style>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="Background" Value="{StaticResource MarbleDataGridCellFailedBackground}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=Result, Mode=OneTime}" Value="Passed">
                                <Setter Property="Background" Value="{StaticResource MarbleDataGridCellPassedBackground}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=Result, Mode=OneTime}" Value="Error">
                                <Setter Property="Background" Value="{StaticResource MarbleDataGridCellErrorBackground}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=Result, Mode=OneTime}" Value="No Result">
                                <Setter Property="Background" Value="{StaticResource MarbleDataGridCellUnresolvedBackground}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <StackPanel Orientation="Horizontal">
                    <Image Height="32" Width="32" Margin="5">
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Setter Property="Source" Value="/MarbleLibrary;component/Images/failed.circle.icon.32x32.png" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Result}" Value="Passed">
                                        <Setter Property="Source" Value="/MarbleLibrary;component/Images/passed.circle.icon.32x32.png" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=Result}" Value="Error">
                                        <Setter Property="Source" Value="/MarbleLibrary;component/Images/error.icon.32x32.png" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=Result}" Value="No Result">
                                        <Setter Property="Source" Value="/MarbleLibrary;component/Images/no.resolution.circle.icon.32x32.png" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                    <TextBlock Text="{Binding Path=Result}" Margin="5" FontSize="25" Foreground="White" HorizontalAlignment="Stretch">
                        <TextBlock.Effect>
                            <DropShadowEffect BlurRadius="5" Direction="0" ShadowDepth="0" Color="Black" />
                        </TextBlock.Effect>
                    </TextBlock>
                </StackPanel>
            </Border>
        </StackPanel>

        

        <StackPanel Grid.Row="2" x:Name="stackPanelReportControls" Orientation="Horizontal" Background="{StaticResource MarbleDarkPurpleButtonBackground}">
            <StackPanel.Style>
                <Style TargetType="{x:Type StackPanel}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=SummaryMode, UpdateSourceTrigger=PropertyChanged}" Value="MultipleTestCases">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=SummaryMode, UpdateSourceTrigger=PropertyChanged}" Value="AllTestCasesInTestSet">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Style>

            <Button x:Name="buttonPreviousFailedTestRun" Width="50" Height="22" Margin="10,2,2,2" ToolTip="Previous Failed" Style="{StaticResource MarbleButton}" Click="buttonPreviousFailedTestRun_Click">
                <Button.Content>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="" FontFamily="Webdings" FontSize="18" />
                        <Image Height="16" Width="16" Source="/MarbleLibrary;component/Images/failed.circle.icon.16x16.png" HorizontalAlignment="Left"/>
                    </StackPanel>
                </Button.Content>
            </Button>
            <Button x:Name="buttonNextFailedTestRun" Width="50" Height="22" Margin="2" ToolTip="Next Failed" Style="{StaticResource MarbleButton}" Click="buttonNextFailedTestRun_Click">
                <Button.Content>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="" FontFamily="Webdings" FontSize="18" />
                        <Image Height="16" Width="16" Source="/MarbleLibrary;component/Images/failed.circle.icon.16x16.png" HorizontalAlignment="Left"/>
                    </StackPanel>
                </Button.Content>
            </Button>
            <Button x:Name="buttonPreviousPassedTestRun" Width="50" Height="22" Margin="2" ToolTip="Previous Passed" Style="{StaticResource MarbleButton}" Click="buttonPreviousPassedTestRun_Click" >
                <Button.Content>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="" FontFamily="Webdings" FontSize="18" />
                        <Image Height="16" Width="16" Source="/MarbleLibrary;component/Images/passed.circle.icon.16x16.png" HorizontalAlignment="Left"/>
                    </StackPanel>
                </Button.Content>
            </Button>
            <Button x:Name="buttonNextPassedTestRun" Width="50" Height="22" Margin="2" ToolTip="Next Passed" Style="{StaticResource MarbleButton}" Click="buttonNextPassedTestRun_Click" >
                <Button.Content>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="" FontFamily="Webdings" FontSize="18" />
                        <Image Height="16" Width="16" Source="/MarbleLibrary;component/Images/passed.circle.icon.16x16.png" HorizontalAlignment="Left" />
                    </StackPanel>
                </Button.Content>
            </Button>
            <Button x:Name="buttonPreviousFailedByTime" Width="50" Height="22" Margin="2" ToolTip="Previous Failed by Time" Style="{StaticResource MarbleButton}" Click="buttonPreviousFailedByTime_Click" >
                <Button.Content>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="" FontFamily="Webdings" FontSize="18" />
                        <Image Height="16" Width="16" Source="/MarbleLibrary;component/Images/failed.time.icon.16x16.png" HorizontalAlignment="Left"/>
                    </StackPanel>
                </Button.Content>
            </Button>
            <Button x:Name="buttonNextFailedByTime" Width="50" Height="22" Margin="2" ToolTip="Next Failed by Time" Style="{StaticResource MarbleButton}" Click="buttonNextFailedByTime_Click" >
                <Button.Content>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="" FontFamily="Webdings" FontSize="18" />
                        <Image Height="16" Width="16" Source="/MarbleLibrary;component/Images/failed.time.icon.16x16.png" HorizontalAlignment="Left" SnapsToDevicePixels="True"/>
                    </StackPanel>
                </Button.Content>
            </Button>

            <ToggleButton x:Name="toggleButtonResultsInfo" Width="50" Height="22" Margin="20,2,2,2" ToolTip="Show test results filtering and summary." IsHitTestVisible="{Binding ElementName=popupResultsInfo, Path=IsOpen, Mode=OneWay, Converter={Converters1:InvertBoolValueConverter}}">
                <ToggleButton.Content>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Grid.Row="6" Grid.Column="1" Height="16" Width="16" Text="∑" HorizontalAlignment="Left" FontWeight="ExtraBold" Foreground="{StaticResource MarbleTextBoxWarningBackground}" Margin="5,-3,0,0">
                            <TextBlock.Effect>
                                <DropShadowEffect BlurRadius="5" Direction="0" ShadowDepth="0" Color="Black" />
                            </TextBlock.Effect>
                        </TextBlock>
                        <Image Height="16" Width="16" Source="/MarbleLibrary;component/Images/settings.icon.32x32.png" HorizontalAlignment="Left" SnapsToDevicePixels="True"/>
                    </StackPanel>
                </ToggleButton.Content>
            </ToggleButton>
        </StackPanel>

        <!--<GroupBox Grid.Row="3" x:Name="groupBoxTestRuns" VerticalAlignment="Top" Tag="IsExpandedOnStart" Margin="0,0,0,5" ClipToBounds="True" 
                          ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Auto">-->
        <GroupBox Grid.Row="3" x:Name="groupBoxTestRuns" VerticalAlignment="Top" Tag="IsExpandedOnStart" Margin="0,0,0,5" ClipToBounds="True"
                  MaxWidth="{Binding ElementName=UcTestReportTestCaseSummaryView, Path=ActualWidth, Converter={Converters1:DoubleValueAndParameterValueAdded}, ConverterParameter=-2}" 
                  Width="{Binding ElementName=UcTestReportTestCaseSummaryView, Path=ActualWidth, Converter={Converters1:DoubleValueAndParameterValueAdded}, ConverterParameter=-2}" >
            <GroupBox.Header>
                <StackPanel Orientation="Horizontal">
                    <TextBlock x:Name="textBlockListViewGroupBoxHeader" Text="{Binding Path=ListTitle, UpdateSourceTrigger=PropertyChanged}" Foreground="{StaticResource MarbleDefaultGroupBoxHeaderForeground}" />
                    <TextBlock Text=" (" Foreground="{StaticResource MarbleDefaultGroupBoxHeaderForeground}" />
                    <TextBlock Text="{Binding Path=TotalResultCount}" Foreground="{StaticResource MarbleDefaultGroupBoxHeaderForeground}" />
                    <TextBlock Text=")" Foreground="{StaticResource MarbleDefaultGroupBoxHeaderForeground}" />
                </StackPanel>
            </GroupBox.Header>
            <GroupBox.Style>
                <Style TargetType="{x:Type GroupBox}" BasedOn="{StaticResource MarbleExpanderGroupBoxCustomHeader}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=SummaryMode, UpdateSourceTrigger=PropertyChanged}" Value="MultipleTestCases">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=SummaryMode, UpdateSourceTrigger=PropertyChanged}" Value="AllTestCasesInTestSet">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </GroupBox.Style>

            <StackPanel Background="{StaticResource MarbleLightNaturalBackgroundGradient}">

                <StackPanel Orientation="Horizontal">
                    <Button x:Name="buttonGroupByResult" Width="50" Height="24" Margin="2" ToolTip="Group by Result" Style="{StaticResource MarbleLightButton}" Click="buttonApplyGrouping_Click">
                        <StackPanel Orientation="Horizontal">
                            <Grid>
                                <Ellipse HorizontalAlignment="Center" Height="16" Stroke="{StaticResource MarbleNormalTextColorOnLightBackground}" VerticalAlignment="Center" Width="16"/>
                                <Path Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource MarbleNormalTextColorOnLightBackground}" StrokeThickness="2" VerticalAlignment="Center"/>
                            </Grid>
                            <Image Height="16" Width="16" Source="/MarbleLibrary;component/Images/passed.failed.circle.icon.16x16.png" HorizontalAlignment="Left"/>
                        </StackPanel>
                    </Button>
                    <Button x:Name="buttonGroupByTestCaseName" Width="50" Height="24" Margin="2" ToolTip="Group by Test Case Name" Style="{StaticResource MarbleLightButton}" Click="buttonApplyGrouping_Click" >
                        <StackPanel Orientation="Horizontal">
                            <Grid>
                                <Ellipse HorizontalAlignment="Center" Height="16" Stroke="{StaticResource MarbleNormalTextColorOnLightBackground}" VerticalAlignment="Center" Width="16"/>
                                <Path Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource MarbleNormalTextColorOnLightBackground}" StrokeThickness="2" VerticalAlignment="Center"/>
                            </Grid>
                            <Image Height="16" Width="16" Source="/MarbleLibrary;component/Images/test.set.icon.16x16.png" HorizontalAlignment="Left"/>
                        </StackPanel>
                    </Button>
                    <Button x:Name="buttonGroupByRunIndex" Width="50" Height="24" Margin="2" ToolTip="Group by Test Run Index/Iteration" Style="{StaticResource MarbleLightButton}" Click="buttonApplyGrouping_Click" >
                        <StackPanel Orientation="Horizontal">
                            <Grid>
                                <Ellipse HorizontalAlignment="Center" Height="16" Stroke="{StaticResource MarbleNormalTextColorOnLightBackground}" VerticalAlignment="Center" Width="16"/>
                                <Path Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource MarbleNormalTextColorOnLightBackground}" StrokeThickness="2" VerticalAlignment="Center"/>
                            </Grid>
                            <Image Height="16" Width="16" Source="/MarbleLibrary;component/Images/index.icon.16x16.png" HorizontalAlignment="Left"/>
                        </StackPanel>
                    </Button>
                    <Button x:Name="buttonNoGrouping" Width="50" Height="24" Margin="2" ToolTip="No Grouping" Style="{StaticResource MarbleLightButton}" Click="buttonApplyGrouping_Click" >
                        <StackPanel Orientation="Horizontal">
                            <Grid>
                                <Ellipse HorizontalAlignment="Center" Height="16" Stroke="{StaticResource MarbleNormalTextColorOnLightBackground}" VerticalAlignment="Center" Width="16"/>
                                <Path Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource MarbleNormalTextColorOnLightBackground}" StrokeThickness="2" VerticalAlignment="Center"/>
                            </Grid>
                            <Image Height="16" Width="16" Source="/MarbleLibrary;component/Images/none.icon.16x16.png" HorizontalAlignment="Left"/>
                        </StackPanel>
                    </Button>
                    <Button x:Name="buttonCopyToClipboard" Width="50" Height="24" Margin="2" ToolTip="Copy Information of Test Runs to Clipboard" Style="{StaticResource MarbleLightButton}" Click="buttonCopyToClipboard_Click">
                        <StackPanel Orientation="Horizontal">
                            <Image Height="16" Width="16" Source="/MarbleLibrary;component/Images/copy.icon.16x16.png" HorizontalAlignment="Left"/>
                        </StackPanel>
                    </Button>
                    <Button x:Name="buttonOpenSelectedTestReportInNewWindow" Width="50" Height="24" Margin="2" ToolTip="Open Selected Test Report in New Window" Style="{StaticResource MarbleLightButton}" Click="MenuItemOpenReportInNewWindow_OnClick">
                        <StackPanel Orientation="Horizontal">
                            <Image Height="16" Width="16" Source="/MarbleLibrary;component/Images/new.window.icon.16x16.png" HorizontalAlignment="Left" />
                            <Image Height="16" Width="16" Source="/MarbleLibrary;component/Images/report.icon.16x16.png" HorizontalAlignment="Left" />
                        </StackPanel>
                    </Button>
                </StackPanel>

                <!--<ScrollViewer VerticalScrollBarVisibility="Auto" VerticalContentAlignment="Stretch">-->

                <DataGrid x:Name="dataGridTestCases" ItemsSource="{Binding Path=ChildTestCases, UpdateSourceTrigger=PropertyChanged}" VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" ScrollViewer.VerticalScrollBarVisibility="Auto" SelectionChanged="ListView_SelectionChanged" 
                          SelectionMode="Single" ClipToBounds="True" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ScrollViewer.CanContentScroll="True" AutoGenerateColumns="False" Sorting="dataGridTestCases_Sorting" GridLinesVisibility="None"
                          EnableRowVirtualization="True" CanUserReorderColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" Height="600" VirtualizingPanel.IsVirtualizingWhenGrouping="True" VirtualizingPanel.ScrollUnit="Item"
                          MaxWidth="{Binding ElementName=UcTestReportTestCaseSummaryView, Path=ActualWidth}" Background="Transparent" AlternatingRowBackground="{StaticResource MarbleDataGridAlternatingRowBackground}"
                          Foreground="{StaticResource MarbleNormalTextColorOnLightBackground}">
                    <!--<DataGrid x:Name="dataGridTestCases" ItemsSource="{Binding Path=ChildTestCases}" ScrollViewer.VerticalScrollBarVisibility="Auto" SelectionChanged="ListView_SelectionChanged" 
                          SelectionMode="Single" ClipToBounds="True" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ScrollViewer.CanContentScroll="True" AutoGenerateColumns="False" Sorting="dataGridTestCases_Sorting" GridLinesVisibility="None"
                          CanUserReorderColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" Height="600">-->
                    <DataGrid.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}">
                            <Setter Property="BorderThickness" Value="0" />
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Trigger.Setters>
                                        <Setter Property="Background" Value="{StaticResource MarblePurpleHighlightBackground}" />
                                        <Setter Property="BorderBrush" Value="{StaticResource MarblePurpleHighlightBackground}" />
                                        <Setter Property="Foreground" Value="{StaticResource MarbleNormalTextColorOnDarkBackground}" />
                                    </Trigger.Setters>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.CellStyle>
                    <DataGrid.RowStyle>
                        <Style TargetType="DataGridRow">
                            <EventSetter Event="MouseDoubleClick" Handler="DataGridTestCases_OnMouseDoubleClick" />
                            <Setter Property="ContextMenu" Value="{StaticResource ResourceKey=contextMenuTestResult}" />
                            <Setter Property="ContextMenu.DataContext" Value="{Binding ElementName=dataGridTestCases, Path=SelectedItem}" />
                            <!--<Setter Property="Visibility" Value="{Binding IsVisible, Converter={Converters1:BoolToVisibilityCollapsedConverter}}" />-->
                        </Style>
                    </DataGrid.RowStyle>
                    <DataGrid.GroupStyle>
                        <GroupStyle>
                            <GroupStyle.ContainerStyle>
                                <Style TargetType="{x:Type GroupItem}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type GroupItem}">
                                                <Expander Style="{StaticResource MarbleExpander}" TextBlock.Foreground="{StaticResource MarbleNormalTextColorOnDarkBackground}">
                                                    <Expander.Header>
                                                        <StackPanel Orientation="Horizontal" >
                                                            <TextBlock x:Name="textBlockGroupResult" Text="{Binding Path=Items, UpdateSourceTrigger=PropertyChanged, Converter={Converters:TestCaseSummaryItemsToStatusConverter}}" Visibility="Collapsed" Foreground="{StaticResource MarbleDarkBackgroundGradient}"/>
                                                            <StackPanel Orientation="Horizontal">
                                                                <StackPanel.Style>
                                                                    <Style TargetType="{x:Type StackPanel}">
                                                                        <Setter Property="Opacity" Value="0.9" />
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding Path=Items, UpdateSourceTrigger=PropertyChanged, Converter={Converters:TestCaseSummaryItemsToPassedCountConverter}}" Value="0">
                                                                                <Setter Property="Opacity" Value="0.2" />
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </StackPanel.Style>
                                                                <Image x:Name="testCasePassedImage" Source="/MarbleLibrary;component/Images/passed.circle.icon.16x16.png" Height="16" Width="16" VerticalAlignment="Center" />
                                                                <TextBlock Text="{Binding Path=Items, UpdateSourceTrigger=PropertyChanged, Converter={Converters:TestCaseSummaryItemsToPassedCountConverter}}" Width="25" VerticalAlignment="Center" />
                                                            </StackPanel>
                                                            <StackPanel Orientation="Horizontal">
                                                                <StackPanel.Style>
                                                                    <Style TargetType="{x:Type StackPanel}">
                                                                        <Setter Property="Opacity" Value="0.9" />
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding Path=Items, UpdateSourceTrigger=PropertyChanged, Converter={Converters:TestCaseSummaryItemsToFailedCountConverter}}" Value="0">
                                                                                <Setter Property="Opacity" Value="0.2" />
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </StackPanel.Style>
                                                                <Image x:Name="testCaseFailedImage" Source="/MarbleLibrary;component/Images/failed.circle.icon.16x16.png" Height="16" Width="16" VerticalAlignment="Center" />
                                                                <TextBlock Text="{Binding Path=Items, UpdateSourceTrigger=PropertyChanged, Converter={Converters:TestCaseSummaryItemsToFailedCountConverter}}" Width="25" VerticalAlignment="Center" />
                                                            </StackPanel>
                                                            <StackPanel Orientation="Horizontal">
                                                                <StackPanel.Style>
                                                                    <Style TargetType="{x:Type StackPanel}">
                                                                        <Setter Property="Opacity" Value="0.9" />
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding Path=Items, UpdateSourceTrigger=PropertyChanged, Converter={Converters:TestCaseSummaryItemsToNoResultCountConverter}}" Value="0">
                                                                                <Setter Property="Opacity" Value="0.2" />
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </StackPanel.Style>
                                                                <Image x:Name="testCaseErrorImage" Source="/MarbleLibrary;component/Images/no.resolution.circle.icon.16x16.png" Height="16" Width="16" VerticalAlignment="Center" />
                                                                <TextBlock Text="{Binding Path=Items, UpdateSourceTrigger=PropertyChanged, Converter={Converters:TestCaseSummaryItemsToNoResultCountConverter}}" Width="25" VerticalAlignment="Center" />
                                                            </StackPanel>
                                                            <TextBlock Text="{Binding Path=Name}" />
                                                            <TextBlock Text=" (" />
                                                            <TextBlock Text="{Binding Path=ItemCount}" />
                                                            <TextBlock Text=")" />
                                                        </StackPanel>
                                                    </Expander.Header>
                                                    <ItemsPresenter TextBlock.Foreground="{StaticResource MarbleNormalTextColorOnLightBackground}" TextBlock.FontFamily="Segoe UI"/>
                                                </Expander>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </GroupStyle.ContainerStyle>
                            <!--<GroupStyle.Panel>
                                <ItemsPanelTemplate>
                                    <DataGridRowsPresenter/>
                                </ItemsPanelTemplate>
                            </GroupStyle.Panel>-->
                        </GroupStyle>
                    </DataGrid.GroupStyle>
                    <DataGrid.Columns>
                        <DataGridTemplateColumn x:Name="dataGridTemplateColumnWhitebox" SortMemberPath="Result.RunTime" CanUserSort="True">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel x:Name="stackPanelRoot" Orientation="Horizontal">

                                        <Image x:Name="imageTestingMode" Height="16" Width="15" VerticalAlignment="Center" HorizontalAlignment="Left">
                                            <Image.Style>
                                                <Style TargetType="{x:Type Image}">
                                                    <Setter Property="Source" Value="/MarbleLibrary;component/Images\whitebox.icon.15x16.png" />
                                                    <Setter Property="ToolTip" Value="Whitebox mode." />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Path=Result.IsBlackboxModeOn, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                                            <Setter Property="Source" Value="/MarbleLibrary;component/Images\blackbox.icon.15x16.png" />
                                                            <Setter Property="ToolTip" Value="Blackbox mode." />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Image.Style>
                                        </Image>
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <!--<DataGridTemplateColumn x:Name="dataGridTemplateColumnIndex" Header="#" SortMemberPath="Result.Index" CanUserSort="True">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Path=Result.Index}" Margin="5,0,0,0" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>-->
                        <DataGridTextColumn x:Name="dataGridTemplateColumnIndex" Header="#" SortMemberPath="Result.Index" Binding="{Binding Path=Result.Index, Mode=OneTime}" CanUserSort="True" IsReadOnly="True"/>
                        <DataGridTemplateColumn x:Name="dataGridTemplateColumnResult" Header="Result" SortMemberPath="Result.Result" CanUserSort="True">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <StackPanel.Style>
                                            <Style TargetType="{x:Type StackPanel}">
                                                <Setter Property="ToolTip" Value="{Binding Result.Result, UpdateSourceTrigger=PropertyChanged}" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Path=Result.IsOriginalResult, UpdateSourceTrigger=PropertyChanged}" Value="False" >
                                                        <Setter Property="ToolTip">
                                                            <Setter.Value>
                                                                <ToolTip>
                                                                    <StackPanel>
                                                                        <TextBlock Text="{Binding Result.Result, UpdateSourceTrigger=PropertyChanged}" />
                                                                        <TextBlock Text="(Result has been modified by user.)" />
                                                                    </StackPanel>
                                                                </ToolTip>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </StackPanel.Style>
                                        <Image x:Name="testCaseSummaryResultImage" Source="{Binding Path=Result.Result, Converter={Converters:TestReportResultToImageConverter}}" Height="16" Width="16" Margin="5,0,0,0" />
                                        <TextBlock Text="*" Height="18" VerticalAlignment="Center" FontSize="14">
                                            <TextBlock.Style>
                                                <Style TargetType="{x:Type TextBlock}">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                    <Style.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding Path=Result.IsOriginalResult, UpdateSourceTrigger=PropertyChanged}" Value="False" />
                                                                <Condition Binding="{Binding Path=IsRoot, UpdateSourceTrigger=PropertyChanged}" Value="False" />
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                        
                                        <Image Source="/MarbleLibrary;component/Images/warning.icon.16x16.png" Height="16" Width="16" ToolTip="{Binding WarningCountInfoString}" HorizontalAlignment="Right" Margin="5,0,0,0">
                                            <Image.Style>
                                                <Style TargetType="{x:Type Image}">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding WarningCount}" Value="0">
                                                            <Setter Property="Visibility" Value="Collapsed" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Image.Style>
                                        </Image>
                                        <Image Source="/MarbleLibrary;component/Images/error.icon.16x16.png" Height="16" Width="16" ToolTip="Application crash or phone reset occurred" HorizontalAlignment="Right" 
                                            Visibility="{Binding HasCrashOrReset, Converter={Converters1:BoolToVisibilityCollapsedConverter}}" Margin="5 0 0 0" />
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <!--<DataGridTemplateColumn x:Name="dataGridTemplateColumnRuntime" Header="Run Time" SortMemberPath="Result.RunTime" CanUserSort="True">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Path=Result.RunTime, StringFormat={}{0:yyyy'.'MM'.'dd HH':'mm':'ss}, Mode=OneWay}" Margin="5,0,0,0" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>-->
                        <DataGridTextColumn x:Name="dataGridTemplateColumnRuntime" Header="Run Time" SortMemberPath="Result.RunTime" Binding="{Binding Path=Result.RunTime, StringFormat={}{0:yyyy.MM.dd' 'HH':'mm':'ss}, Mode=OneTime}" CanUserSort="True" IsReadOnly="True"/>
                        <!--<DataGridTemplateColumn x:Name="dataGridTemplateColumnTestCaseName" Header="Test Case" SortMemberPath="Name" CanUserSort="True">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Path=Name}" Margin="5,0,0,0" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>-->
                        <DataGridTextColumn x:Name="dataGridTemplateColumnTestCaseName" Header="Test Case" SortMemberPath="Name" Binding="{Binding Path=Name, Mode=OneTime}" CanUserSort="True" IsReadOnly="True"/>
                        <!--<DataGridTemplateColumn x:Name="dataGridTemplateColumnErrorReason" Header="Error Reason" SortMemberPath="Result.ErrorReason" CanUserSort="True">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Path=Result.ErrorReason}" Margin="5,0,0,0" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>-->
                        <DataGridTextColumn x:Name="dataGridTemplateColumnErrorReason" Header="Error Reason" SortMemberPath="Result.ErrorReason" Binding="{Binding Path=Result.ErrorReason, Mode=OneTime}" CanUserSort="True" IsReadOnly="True"/>

                        <!--<DataGridTextColumn x:Name="dataGridTemplateColumnRunTime" Header="Run Time" MinWidth="50" SortMemberPath="Result.RunTime" Binding="{Binding Result.RunTime, Converter={converters:DateTimeToStringConverter}}" IsReadOnly="True">
                            <DataGridTextColumn.CellStyle>
                                <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource CellStyleTestCaseDataGrid}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Result.Result}" Value="{x:Null}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Result.Result}" Value="{x:Static System:String.Empty}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>-->

                    </DataGrid.Columns>
                </DataGrid>

                <!--<TextBlock Text="{Binding Path=Result.Index}" Margin="5,0,0,0" />

                <Image x:Name="testCaseSummaryResultImage" Source="{Binding Path=Result.Result, Converter={Converters:TestReportResultToImageConverter}}" Height="16" Width="16" Margin="5,0,0,0" />
                <TextBlock x:Name="summaryTextBlock" Height="18" VerticalAlignment="Center"
                                        Margin="5,0,0,0" 
                                        Text="{Binding Result.Result}" 
                                        MinWidth="80"
                                        Foreground="{Binding Path=Result.Result, Converter={Converters:StatusToColorConverter}}" />-->

            </StackPanel>

        </GroupBox>

    </Grid>
</Views:UcBase>

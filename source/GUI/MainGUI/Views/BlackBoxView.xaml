<Views:UcBase x:Class="Marble.Views.BlackBoxView"
              xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
              xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
              xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
              xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
              xmlns:Views="clr-namespace:Marble.Views" mc:Ignorable="d"
              xmlns:Converters="clr-namespace:MarbleLibrary.Converters;assembly=MarbleLibrary"
              d:DesignWidth="700" d:DesignHeight="700" GotFocus="UcBase_GotFocus" xmlns:my="clr-namespace:MarbleLibrary.CustomControls;assembly=MarbleLibrary" Unloaded="UcBase_Unloaded" Loaded="UcBase_Loaded">
    <Views:UcBase.CommandBindings>
        <CommandBinding Command="ApplicationCommands.Close"
                        Executed="CloseCommandHandler"/>
    </Views:UcBase.CommandBindings>
    <Grid x:Name="LayoutRoot" Background="#FF2F2F2F">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="700" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <GroupBox Header="BlackBox" IsEnabled="{Binding Path=BlackBoxGuiEnabled, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Background="White" Style="{DynamicResource MarbleGroupBox}">
            <Grid Height="Auto" Margin="2,0,2,0">
                <Grid.RowDefinitions>
                    <!--Phone model Phone Model Information text blocks row-->
                    <RowDefinition Height="17" />
                    <!--Compobox, buttons, phoneinformation rectangle row-->
                    <RowDefinition Height="115" />
                    <!--Advanced settings row-->
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <!--Phone model Phone Model Information text blocks columns-->
                <Grid HorizontalAlignment="Stretch" Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="250" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="Phone model" HorizontalAlignment="Left" VerticalAlignment="Top" />
                    <TextBlock Text="BlackBox status" HorizontalAlignment="Left" Margin="8,-1,0,0" VerticalAlignment="Top" Grid.Column="1" />
                </Grid>

                <!--Compobox, buttons, phoneinformation rectangle grid-->
                <Grid HorizontalAlignment="Stretch" Grid.Row="1">
                    <ComboBox Height="25" ItemsSource="{Binding PhoneModelsAvailable, Mode=OneWay}" SelectedItem="{Binding PhoneModelSelected}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,0,428,0" Width="246" />
                    <Button Content="Init BlackBox" Style="{DynamicResource MarbleButton}" HorizontalAlignment="Left" Width="120" Click="InitBlackBox_Click" Margin="0,30,0,60" />
                    <Button Content="Power on phone" HorizontalAlignment="Left" Width="120" Click="PowerOnPhone_Click" Margin="126,30,0,60">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MarbleButton}">
                                <Setter Property="IsEnabled" Value="True"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsIoWReady}" Value="False">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <TextBlock Text="Default USB accessory connector" HorizontalAlignment="Left" Margin="2,68,0,30" Width="244" />
                    <ComboBox Height="25" ItemsSource="{Binding UsbAccessoryPortsAvailable, Mode=OneWay}" SelectedItem="{Binding UsbAccessoryPortSelected}" HorizontalAlignment="Left" Margin="2,84,0,6" ToolTipService.ShowDuration="15000" Width="244">
                        <ComboBox.ToolTip>
                            <ToolTip>
                                <StackPanel>
                                    <TextBlock>Select the default USB Accessory connector for phone main connection.</TextBlock>
                                </StackPanel>
                            </ToolTip>
                        </ComboBox.ToolTip>
                    </ComboBox>
                    <Grid Margin="258,0,0,4" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="22" />
                            <!--<RowDefinition Height="22" />
                            <RowDefinition Height="22" />
                            <RowDefinition Height="22" />-->
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="120" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <!--Phone Model Information rectangle-->
                        <Rectangle VerticalAlignment="Stretch" HorizontalAlignment="Stretch" RadiusX="4" RadiusY="4" StrokeThickness="2" Grid.RowSpan="5" Grid.ColumnSpan="2">
                        <Rectangle.Stroke>
                            <LinearGradientBrush>
                                <GradientStop Color="Black" />
                            </LinearGradientBrush>
                        </Rectangle.Stroke>
                    </Rectangle>
                        <!--<TextBlock Grid.Row="0" Grid.Column="0" Text="Product code(s):" Margin="6,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="Product codes associated to selected phone model" />
                        <TextBlock Grid.Row="0" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Center" Text="{Binding ProductCodesSelectedProduct, Mode=OneWay}"/>
                        <TextBlock Grid.Row="1" Grid.Column="0" Text="Graybox enabled" Margin="6,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        <TextBlock Text="{Binding Path=GrayboxEnabled, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Center">
                        </TextBlock>-->
                        <TextBlock Grid.Row="0" Grid.Column="0" Text="Iow cards status:" Margin="6,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" />
                        <TextBlock Grid.Row="0" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Center">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Foreground" Value="Red"/>
                                <Setter Property="TextBlock.Text" Value="Not Ready"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsIoWReady}" Value="True">
                                        <Setter Property="Foreground" Value="Green"/>
                                        <Setter Property="TextBlock.Text" Value="Ready" />
                                    </DataTrigger>                                                               
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                        </TextBlock>
                        <!--<TextBlock Grid.Row="3" Grid.Column="0" Text="Emulation status:" Margin="6,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" />
                        <TextBlock Grid.Row="3" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Center" Text="{Binding Path=EmulationStatus}" Foreground="{Binding Path=EmulationForeGround}" />-->
                        <!--<TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Foreground" Value="Red"/>
                                <Setter Property="TextBlock.Text" Value="{Binding Path=EmulationStatus}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsEmulationReady}" Value="True">
                                        <Setter Property="Foreground" Value="Green"/>
                                        <Setter Property="TextBlock.Text" Value="Ready" />
                                    </DataTrigger>                                                               
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                        </TextBlock>-->
                        <!--<TextBlock Grid.Row="4" Grid.Column="0" Text="Video recording:" Margin="6,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="Video Recorder Service Status" />
                        <TextBlock Grid.Row="5" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Center">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Foreground" Value="Red"/>
                                <Setter Property="TextBlock.Text" Value="Not Ready"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=VideoRecordingReady}" Value="True">
                                        <Setter Property="Foreground" Value="Green"/>
                                        <Setter Property="TextBlock.Text" Value="{Binding Path=VideoRecordingStatus}" />
                                    </DataTrigger>                                                               
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                        </TextBlock>-->
                    </Grid>
                </Grid>
                <Expander Header="Advanced settings" Grid.Row="3" IsExpanded="{Binding Path=ExpanderExpanded}" ToolTip="Opens or closes the advanced settings" ToolTipOpening="Expander_ToolTipOpening">
                    <Grid>
                        <Grid.RowDefinitions>
                            <!--Emulation card settings-->
                            <!--<RowDefinition Height="120"/>-->
                            <!--IoWarrior cards required, IoWarrior cards found row-->
                            <RowDefinition Height="140"/>
                            <!--IoWarrior card mappings row-->
                            <RowDefinition Height="200"/>
                        </Grid.RowDefinitions>
                        <!--<GroupBox Margin="0,4,0,6" Grid.Row="0" Header="Emulation cards" Background="White" Style="{DynamicResource MarbleGroupBox}">
                            <Grid>
                                <Grid.RowDefinitions>-->
                                    <!--Grid row-->
                                    <!--<RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <DataGrid Name="emulationCards" ItemsSource="{Binding Path=EmulationCardSetup, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,4" Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                    AutoGenerateColumns="False" CanUserReorderColumns="True" CanUserAddRows="False" CanUserResizeRows="False" CanUserResizeColumns="False"
                                    CanUserDeleteRows="False" SelectionUnit="Cell" SelectionMode="Single" GridLinesVisibility="None" AlternatingRowBackground="AliceBlue" HorizontalScrollBarVisibility="Hidden" BorderBrush="#FF707070">
                                    <DataGrid.CellStyle>
                                        <Style TargetType="{x:Type DataGridCell}">
                                            <Setter Property="Foreground" Value="Black" />
                                            <Style.Triggers>
                                                <Trigger Property="IsSelected" Value="True">
                                                    <Setter Property="Background" Value="{x:Null}" />
                                                    <Setter Property="BorderBrush" Value="{x:Null}" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGrid.CellStyle>
                                    <DataGrid.Columns>
                                        <DataGridTemplateColumn Width="240">
                                            <DataGridTemplateColumn.Header>
                                                <TextBlock Text="Emulation card" />
                                            </DataGridTemplateColumn.Header>
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="230" />
                                                        </Grid.ColumnDefinitions>
                                                        <TextBlock Grid.Column="1" Text="{Binding EmulationCard, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Margin="3" />
                                                    </Grid>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTemplateColumn Width="100">
                                            <DataGridTemplateColumn.Header>
                                                <TextBlock Text="COM port" ToolTipService.ToolTip="Serial port used to communicate with the emulation card" />
                                            </DataGridTemplateColumn.Header>
                                            <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto" />
                                                        <ColumnDefinition Width="*" />
                                                    </Grid.ColumnDefinitions>
                                                        <ComboBox Grid.Column="1" ItemsSource="{Binding ComPortsAvailable, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding ComPort, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                                </Grid>
                                            </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTemplateColumn Width="110">
                                            <DataGridTemplateColumn.Header>
                                                <TextBlock Text="Emulation Enabled" ToolTipService.ToolTip="If emulation is disabled, test cases are executed in GrayBox mode, WhiteBox simulated" />
                                            </DataGridTemplateColumn.Header>
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <CheckBox HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="{Binding Path=EmulationEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTemplateColumn Width="*">
                                            <DataGridTemplateColumn.Header>
                                                <TextBlock Text="FW Version" />
                                            </DataGridTemplateColumn.Header>
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*" />
                                                        </Grid.ColumnDefinitions>
                                                        <TextBlock Grid.Column="4" Text="{Binding FwVersion, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Margin="3" />
                                                    </Grid>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                    </DataGrid.Columns>-->
                                    <!--<DataGridTemplateColumn Width="100">
                                        <DataGridTemplateColumn.Header>
                                            <TextBlock Text="FW Version" ToolTipService.ToolTip="The FW version reported by the card" />
                                        </DataGridTemplateColumn.Header>
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="100" />
                                                    </Grid.ColumnDefinitions>
                                                    <TextBlock Grid.Column="1" Text="{Binding EmulationCard, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Margin="3" />
                                                </Grid>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>-->
                                <!--</DataGrid>
                            </Grid>
                        </GroupBox>-->                       
                        <GroupBox Margin="0,4,0,6" Grid.Row="0" Header="IoWarrior cards setup" Background="White" Style="{DynamicResource MarbleGroupBox}">
                            <Grid>
                                <!--<Grid.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FF2F2F2F" Offset="1"/>
                                        <GradientStop Color="#FF444444"/>
                                    </LinearGradientBrush>
                                </Grid.Background>-->
                                <Grid.RowDefinitions>
                                    <!--IoWarrior cards required, IoWarrior cards found row-->
                                    <RowDefinition Height="*" />
                                    <!--Button row-->
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <DataGrid Margin="0,0,0,4" ItemsSource="{Binding Path=IoWCardSetup}" Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                    AutoGenerateColumns="False" CanUserReorderColumns="True" CanUserAddRows="False" CanUserResizeRows="False" CanUserResizeColumns="False"
                                    CanUserDeleteRows="False" SelectionUnit="Cell" SelectionMode="Single" GridLinesVisibility="None" AlternatingRowBackground="AliceBlue" HorizontalScrollBarVisibility="Hidden" BorderBrush="#FF707070">
                                    <DataGrid.CellStyle>
                                        <Style TargetType="{x:Type DataGridCell}">
                                            <Setter Property="Foreground" Value="Black" />
                                            <Style.Triggers>
                                                <Trigger Property="IsSelected" Value="True">
                                                    <Setter Property="Background" Value="{x:Null}" />
                                                    <Setter Property="BorderBrush" Value="{x:Null}" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGrid.CellStyle>
                                    <DataGrid.Columns>
                                        <DataGridTemplateColumn Header="IoWarrior cards required for testing" Width="300">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock Padding="3" Text="{Binding CardRequired, Mode=OneWay}" Foreground="{Binding ForegroundColor}" FontWeight="{Binding FontWeight}" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTemplateColumn Header="IoWarrior cards found" Width="*">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock Padding="3" Text="{Binding CardFound, Mode=OneWay}" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                    </DataGrid.Columns>
                                </DataGrid>
                                <Button Content="Clear requirements" ToolTip="Clear the cards required for testing" Width="120"  HorizontalAlignment="Right" VerticalAlignment="Center"  Grid.Row="1" Height="25" Click="ClearRequirements_Click">
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MarbleButton}">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsIoWReady}" Value="False">
                                                <Setter Property="Visibility" Value="Visible"/>
                                                <Setter Property="Margin" Value="0,2,0,2"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </Grid>
                        </GroupBox>
                        <GroupBox Grid.Row="1" Header="Card mappings" Background="White" Style="{DynamicResource MarbleGroupBox}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <!--IoWarrior card mapping row-->
                                    <RowDefinition Height="*" />
                                    <!--Button row-->
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <DataGrid x:Name="cardMapping" ItemsSource="{Binding Path=CommandMapping}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                    AutoGenerateColumns="False" CanUserReorderColumns="False" CanUserAddRows="False" CanUserResizeRows="False" CanUserResizeColumns="False"
                                    CanUserDeleteRows="False" SelectionUnit="FullRow" SelectionMode="Single" GridLinesVisibility="None" AlternatingRowBackground="AliceBlue" HorizontalScrollBarVisibility="Hidden" GotFocus="DataGrid_GotFocus" LostFocus="DataGrid_LostFocus" CanUserSortColumns="False" IsReadOnly="True">
                                    <DataGrid.CellStyle>
                                        <Style TargetType="{x:Type DataGridCell}">
                                            <Setter Property="Foreground" Value="Black" />
                                            <Style.Triggers>
                                                <Trigger Property="IsSelected" Value="True">
                                                    <Setter Property="BorderThickness" Value="0"/>
                                                    <Setter Property="Background" Value="LightBlue"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGrid.CellStyle>
                                    <DataGrid.Columns>
                                        <DataGridTemplateColumn Width="180">
                                            <DataGridTemplateColumn.Header>
                                                <TextBlock Text="Marble command" ToolTipService.ToolTip="Command sent by Marble" />
                                            </DataGridTemplateColumn.Header>
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock Padding="3" Text="{Binding MarbleCommand, Mode=OneWay}"/>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTemplateColumn Width="200">
                                            <DataGridTemplateColumn.Header>
                                                <TextBlock Text="Executing card" ToolTipService.ToolTip="IoWarrior card that executes the command" />
                                            </DataGridTemplateColumn.Header>
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock Padding="3" Text="{Binding CardType, Mode=OneWay}"/>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTemplateColumn Width="*">
                                            <DataGridTemplateColumn.Header>
                                                <TextBlock Text="Card command" ToolTipService.ToolTip="IoWarrior command to be executed" />
                                            </DataGridTemplateColumn.Header>
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock Padding="3" Text="{Binding CardCommand, Mode=OneWay}"/>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                    </DataGrid.Columns>
                                </DataGrid>
                                <Button Content="Execute command" ToolTip="Executes the selected command" Width="120"  HorizontalAlignment="Right" VerticalAlignment="Center" Grid.Row="1" Height="25" Click="ExecuteCommand_Click" GotFocus="ExecuteCommand_GotFocus">
                                  <Button.Style>
                                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MarbleButton}">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Setter Property="IsEnabled" Value="True"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=CardSelected}" Value="True">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                    <Setter Property="Margin" Value="0,4,0,4"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Path=IsIoWReady}" Value="False">
                                                    <Setter Property="IsEnabled" Value="False"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </Grid>
                        </GroupBox>
                    </Grid>
                </Expander>
            </Grid>
        </GroupBox>

        <!--Stack Panel for Touch screen-->
        <!--<StackPanel x:Name="stackPanelTouch" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Top" IsVisibleChanged="stackPanelTouch_IsVisibleChanged">
            <StackPanel.Style>
                <Style TargetType="{x:Type StackPanel}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=TouchScreenVisible}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Style>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="354" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="334"/>
                </Grid.ColumnDefinitions>
                <Grid Grid.Row="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="324" />
                        <RowDefinition Height="30" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="254"/>
                        <ColumnDefinition Width="80"/>
                    </Grid.ColumnDefinitions>
                    <Border Grid.Row="0" Grid.Column="0" BorderThickness="2" BorderBrush="White" Margin="10,0,0,0" Width="244" Height="324" HorizontalAlignment="Left" VerticalAlignment="Top" >
                        <Image x:Name="imageVideoFrame" Source="{Binding Path=VideoFrame, Converter={Converters:ImageToSourceConverter}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" MouseLeave="Image_MouseLeave" Stretch="Fill" MouseMove="Image_MouseMove" MouseLeftButtonDown="Image_MouseLeftButtonDown" MouseLeftButtonUp="Image_MouseLeftButtonUp" MouseRightButtonDown="mouseRightButtonDown" />
                    </Border>
                    <Button x:Name="buttonVolUp" Content="Vol Up" Margin="0,2,0,0" Grid.Row="0" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Top" Width="75" Height="25" Click="buttonVolUp_Click" MouseRightButtonDown="mouseRightButtonDown">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MarbleButton}">
                                <Setter Property="IsEnabled" Value="True"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsIoWReady}" Value="False">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button x:Name="buttonVolDown" Content="Vol Down" Margin="0,35,0,0" Grid.Row="0" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Top" Width="75" Height="25" Click="buttonVolDown_Click" MouseRightButtonDown="mouseRightButtonDown">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MarbleButton}">
                                <Setter Property="IsEnabled" Value="True"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsIoWReady}" Value="False">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button x:Name="buttonKeyLockToggle" Content="Key Lock" Margin="0,150,0,0" Grid.Row="0" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Top" Width="75" Height="25" PreviewMouseLeftButtonDown="buttonKeyLockToggle_PreviewMouseLeftButtonDown" PreviewMouseLeftButtonUp="buttonKeyLockToggle_PreviewMouseLeftButtonUp" MouseRightButtonDown="mouseRightButtonDown">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MarbleButton}">
                                <Setter Property="IsEnabled" Value="True"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsIoWReady}" Value="False">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button x:Name="buttonBack" Content="Back" Margin="60,0,0,0" Grid.Row="1" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="74" Height="25" PreviewMouseLeftButtonDown="buttonBack_PreviewMouseLeftButtonDown" PreviewMouseLeftButtonUp="buttonBack_PreviewMouseLeftButtonUp" MouseRightButtonDown="mouseRightButtonDown">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MarbleButton}">
                                <Setter Property="IsEnabled" Value="True"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsTouchEmulationReady}" Value="False">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button x:Name="buttonHome" Content="Home" Margin="145,0,0,0" Grid.Row="1" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="75" Height="25" PreviewMouseLeftButtonDown="buttonHome_PreviewMouseLeftButtonDown" PreviewMouseLeftButtonUp="buttonHome_PreviewMouseLeftButtonUp" MouseRightButtonDown="mouseRightButtonDown">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MarbleButton}">
                                <Setter Property="IsEnabled" Value="True"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsTouchEmulationReady}" Value="False">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </Grid>
                <TextBox x:Name="textBoxScriptBox" Margin="10,2,10,0" Grid.Row="1" HorizontalAlignment="Stretch" TextWrapping="Wrap" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Auto" />
            </Grid>
        </StackPanel>-->
        <!--EOF Stack Panel for Touch screen-->

        <Grid Grid.Row="1" Grid.ColumnSpan="1">
            <Grid.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FF2F2F2F" Offset="1"/>
                    <GradientStop Color="#FF444444"/>
                </LinearGradientBrush>
            </Grid.Background>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <!--<Button x:Name="buttonShowHideTouchScreen" HorizontalAlignment="Left" Width="114" Height="30" Margin="5,5,0,5" Click="buttonShowHideTouchScreen_Click">
            <Button.Style>
                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MarbleButton}">
                    <Setter Property="Content" Value="Show touch screen"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=TouchScreenVisible}" Value="True">
                            <Setter Property="Content" Value="Hide touch screen"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
            </Button>-->
            <Button x:Name="buttonCancel" Grid.Column="1" HorizontalAlignment="Right" Width="100" Height="30" Margin="5" Style="{DynamicResource MarbleButton}" Command="Close">
                <TextBlock Text="Close" />
            </Button>
        </Grid>
    </Grid>
</Views:UcBase>

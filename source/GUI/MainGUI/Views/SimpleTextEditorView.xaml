<Window x:Class="Marble.Views.SimpleTextEditorView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:Converters="clr-namespace:Marble.Converters"
        xmlns:Converters1="clr-namespace:MarbleLibrary.Converters;assembly=MarbleLibrary"
        xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit" xmlns:Model="clr-namespace:Marble.Model"
        xmlns:CustomControls="clr-namespace:MarbleLibrary.CustomControls;assembly=MarbleLibrary" mc:Ignorable="d"
        d:DesignHeight="300" d:DesignWidth="640" Background="{StaticResource MarbleDarkPurpleButtonBackground}" Icon="/MarbleLibrary;component/Images/Marble.M.Icon.ico"
        Closing="Window_Closing" Initialized="Window_Initialized">
    <Window.Resources>
        <ResourceDictionary>
            <Converters1:BoolToTextWrappingConverter x:Key="BoolToTextWrapping" />
            <Converters1:NumericValueIsBiggerThanParameterValue x:Key="ValueBiggerThanParameter" />
        </ResourceDictionary>
    </Window.Resources>
    <Window.CommandBindings>
        <CommandBinding Command="ApplicationCommands.Close"
                        Executed="CloseCommandHandler"/>
        <CommandBinding Command="ApplicationCommands.Find"
                        Executed="FindCommandHandler"/>
        <CommandBinding Command="GoToPage"
                        Executed="GoToLineCommandHandler"/>
        <CommandBinding Command="Replace"
                        Executed="FindAndReplaceCommandHandler" />
    </Window.CommandBindings>
    <Window.InputBindings>
        <KeyBinding Key="S" Modifiers="Control" Command="{Binding CmdSave}"/>
        <KeyBinding Key="F12" Command="{Binding CmdSaveAs}"/>
        <KeyBinding Key="G" Modifiers="Control" Command="GoToPage"/>
    </Window.InputBindings>


    <DockPanel x:Name="LayoutRoot">
        <Menu DockPanel.Dock="Top" TextBlock.FontFamily="Calibri" Typography.Capitals="SmallCaps" TextBlock.FontSize="11pt">
            <MenuItem Header="File">
                <MenuItem Command="{Binding CmdSave}" Header="_Save" InputGestureText="Ctrl+S">
                    <MenuItem.Icon>
                        <Image Source="/MarbleLibrary;component/Images\save.icon.16x16.png" Height="16" Width="16" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Command="{Binding CmdSaveAs}" Header="Save _As..." InputGestureText="F12" >
                    <MenuItem.Icon>
                        <Image Source="/MarbleLibrary;component/Images\save.as.icon2.16x16.png" Height="16" Width="16" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem Command="Close" Header="E_xit" InputGestureText="Alt+F4" />
            </MenuItem>
            <MenuItem Header="Edit">
                <MenuItem Command="Undo" Header="_Undo" >
                    <MenuItem.Icon>
                        <Image Source="/MarbleLibrary;component/Images\undo.icon.16x16.png" Height="16" Width="16" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Command="Redo" Header="_Redo" >
                    <MenuItem.Icon>
                        <Image Source="/MarbleLibrary;component/Images\redo.icon.16x16.png" Height="16" Width="16" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem Command="Cut" Header="_Cut">
                    <MenuItem.Icon>
                        <Image Source="/MarbleLibrary;component/Images\cut.icon.16x16.png" Height="16" Width="16" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Command="Copy" Header="C_opy" >
                    <MenuItem.Icon>
                        <Image Source="/MarbleLibrary;component/Images\copy.icon.16x16.png" Height="16" Width="16" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Command="Paste" Header="_Paste" >
                    <MenuItem.Icon>
                        <Image Source="/MarbleLibrary;component/Images\paste.icon2.16x16.png" Height="16" Width="16" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem Command="Find" Header="_Find" >
                    <MenuItem.Icon>
                        <Image Source="/MarbleLibrary;component/Images\search.icon.16x16.png" Height="16" Width="16" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Command="Replace" Header="_Replace" >
                    <MenuItem.Icon>
                        <Image Source="/MarbleLibrary;component/Images\replace.icon.16x16.png" Height="16" Width="16" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Command="GoToPage" Header="_Go To Line..." InputGestureText="Ctrl+G">
                    <MenuItem.Icon>
                        <Image Source="/MarbleLibrary;component/Images\go.to.line.icon.16x16.png" Height="16" Width="16" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
        </Menu>
        <ToolBarTray DockPanel.Dock="Top" Background="{StaticResource MarbleLightNaturalBackgroundGradient}">
            <ToolBar ToolBarTray.IsLocked="True">
                <Button Command="{Binding CmdSave}" ToolTip="Save (Ctrl+S)">
                    <Image Source="/MarbleLibrary;component/Images/save.icon.16x16.png" Height="16" Width="16" />
                </Button>
                <Separator />
                <Button Command="Cut" ToolTip="Cut (Ctrl+X)">
                    <Image Source="/MarbleLibrary;component/Images/cut.icon.16x16.png" Height="16" Width="16" />    
                </Button>
                <Button Command="Copy" ToolTip="Copy (Ctrl+C)">
                    <Image Source="/MarbleLibrary;component/Images/copy.icon.16x16.png" Height="16" Width="16" />
                </Button>
                <Button Command="Paste" ToolTip="Paste (Ctrl+V)">
                    <Image Source="/MarbleLibrary;component/Images/paste.icon2.16x16.png" Height="16" Width="16" />
                </Button>
                <CheckBox x:Name="checkBoxWordWrap" Content="Word Wrap" ToolTip="Toggle Word Wrap" Checked="checkBoxWordWrap_IsCheckedChanged" Unchecked="checkBoxWordWrap_IsCheckedChanged"
                          TextBlock.FontFamily="Calibri" Typography.Capitals="SmallCaps" TextBlock.FontSize="11pt"/>
            </ToolBar>
            <ToolBar ToolBarTray.IsLocked="True">
                <TextBox x:Name="textBoxSearch" Text="" Width="200" TextChanged="textBoxSearch_TextChanged" ToolTip="Find (Ctrl+F)" PreviewKeyDown="textBoxSearch_PreviewKeyDown">
                    <TextBox.Style>
                        <Style TargetType="{x:Type TextBox}" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                            <Style.Resources>
                                <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                                    <VisualBrush.Visual>
                                        <StackPanel Orientation="Horizontal">
                                            <Image Height="16" Width="16" Source="/MarbleLibrary;component/Images\search.icon.16x16.png" />
                                            <Label Content="Find..." Foreground="Gray" FontStyle="Italic" />
                                        </StackPanel>
                                    </VisualBrush.Visual>
                                </VisualBrush>
                                <LinearGradientBrush x:Key="TextNotFoundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFFF6464" Offset="0"/>
                                    <GradientStop Color="White" Offset="1"/>
                                </LinearGradientBrush>
                            </Style.Resources>
                            <Style.Triggers>
                                <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                                    <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                </Trigger>
                                <Trigger Property="Text" Value="{x:Null}">
                                    <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter Property="Background" Value="White" />
                                </Trigger>
                                <!--<DataTrigger Binding="{Binding IsSearchedTextFound, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                    <Setter Property="Background" Value="{StaticResource TextNotFoundBrush}" />
                                </DataTrigger>-->
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text.Length, Converter={StaticResource ValueBiggerThanParameter}, ConverterParameter=0}" Value="True" />
                                        <!--<Condition Property="Text.Length" Value="True" />-->
                                        <Condition Binding="{Binding Path=IsSearchedTextFound, UpdateSourceTrigger=PropertyChanged}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" Value="{StaticResource TextNotFoundBrush}" />
                                </MultiDataTrigger>
                                
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>
                <Button x:Name="buttonFindNext" Content="" FontFamily="Webdings" Click="buttonFindNext_Click" ToolTip="Find Next" />
                <Button x:Name="buttonFindPrevious" Content="" FontFamily="Webdings" Click="buttonFindPrevious_Click" ToolTip="Find Previous" />
                <CheckBox x:Name="checkBoxMatchCase" Content="Match Case" IsChecked="{Binding IsSearchCaseSensitive, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="Is text search case sensitive." 
                          Checked="checkBoxMatchCase_IsCheckedChanged" Unchecked="checkBoxMatchCase_IsCheckedChanged" 
                          TextBlock.FontFamily="Calibri" Typography.Capitals="SmallCaps" TextBlock.FontSize="11pt"/>
            </ToolBar>
        </ToolBarTray>

        <Grid DockPanel.Dock="Bottom" TextBlock.FontFamily="Calibri" Typography.Capitals="SmallCaps" TextBlock.FontSize="11pt">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" MinWidth="70" />
                <ColumnDefinition Width="Auto" MinWidth="70"/>
            </Grid.ColumnDefinitions>
            
            <TextBlock Text="{Binding InfoText, UpdateSourceTrigger=PropertyChanged}" Foreground="{StaticResource MarbleNormalTextColorOnDarkBackground}" Margin="5,0,0,0" />

            <StackPanel Grid.Column="1" Orientation="Horizontal" Margin="0,0,0,0">
                <TextBlock Text="Line: " Foreground="{StaticResource MarbleNormalTextColorOnDarkBackground}" />
                <TextBlock Text="{Binding CurrentLineIndex, UpdateSourceTrigger=PropertyChanged}" Foreground="{StaticResource MarbleNormalTextColorOnDarkBackground}" />
            </StackPanel>
            
            <StackPanel Grid.Column="2" Orientation="Horizontal" Margin="0,0,5,0">
                <TextBlock Text="Column: " Foreground="{StaticResource MarbleNormalTextColorOnDarkBackground}" />
                <TextBlock Text="{Binding CurrentColumnIndex, UpdateSourceTrigger=PropertyChanged}" Foreground="{StaticResource MarbleNormalTextColorOnDarkBackground}" />
            </StackPanel>
            
        </Grid>
        
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
        
            <GroupBox Grid.Column="2" Header="{Binding HeaderText, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource MarbleGroupBox}">
                <avalonEdit:TextEditor x:Name="MainEditor" FontFamily="Consolas" FontSize="14" VerticalScrollBarVisibility="Auto" SyntaxHighlighting="Default" ShowLineNumbers="True" ClipToBounds="True" Cursor="IBeam"
                                       Document="{Binding Document, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                    <avalonEdit:TextEditor.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Find" Click="FindContexMenuItemClick" />
                            <MenuItem Header="Cut" Command="Cut" />
                            <MenuItem Header="Copy" Command="Copy" />
                            <MenuItem Header="Paste" Command="Paste" />
                            <MenuItem Header="Comment" Click="CommentContexMenuItemClick" />
                        </ContextMenu>
                    </avalonEdit:TextEditor.ContextMenu>
                </avalonEdit:TextEditor>
            </GroupBox>

            <CustomControls:AdvancedGridSplitter Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Stretch" ResizeDirection="Columns" CollapseMode="Previous" Width="8" Panel.ZIndex="10" />
            
            <GroupBox Grid.Column="0" Header="Structure" Style="{DynamicResource MarbleGroupBox}">
                <TreeView x:Name="treeViewCodeStructure"
                          DataContext="{Binding PythonClasses}"
                          ItemsSource="{Binding}">
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="{x:Type TreeViewItem}">
                            <Setter Property="IsExpanded" Value="True" />
                        </Style>
                    </TreeView.ItemContainerStyle>
                    
                    <TreeView.Resources>
                        <HierarchicalDataTemplate
                            ItemsSource="{Binding Methods}"
                            DataType="{x:Type Model:PythonClassModel}">

                            <StackPanel Orientation="Horizontal" MouseDown="pythonCodeStackPanel_MouseDown" Tag="{Binding}" ToolTip="{Binding FullName}">
                                <TextBlock Text="{Binding DisplayName}" Margin="0,0,5,0" />
                                <!--<TextBlock Text="{Binding MethodCount}" Foreground="Gray" />-->
                            </StackPanel>
                            
                        </HierarchicalDataTemplate>

                        <HierarchicalDataTemplate
                            DataType="{x:Type Model:PythonMethodModel}">

                            <StackPanel Orientation="Horizontal" Margin="0,0,0,0" MouseDown="pythonCodeStackPanel_MouseDown" Tag="{Binding}" ToolTip="{Binding FullName}">
                                <TextBlock Text="def" Foreground="blue" FontSize="10" FontWeight="DemiBold" VerticalAlignment="Center" Margin="0,0,5,0" />
                                <TextBlock Text="{Binding DisplayName}" />
                            </StackPanel>
                            
                        </HierarchicalDataTemplate>
                    </TreeView.Resources>
                </TreeView>
            </GroupBox>

        </Grid>

    </DockPanel>
</Window>

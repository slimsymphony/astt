/*
NOKIA                                                             CONFIDENTIAL
R&D Copenhagen
ISACORE SW CL - CPH
Jens Kristoffersen



                  Name ISI Message Definitions
                  --------------------------------
                  SW Include Document - ANSI C/C++



Continuus Ref:
--------------
database:        -

project path:    global_interface/ISI/Core

name:            pn_name_msg.h

version:         001.002

type:            incl

instance:        co_core#7


ISI header file for Name Service

Current   ISI Version : 001.002
Supported ISI Versions: 001.000, 001.001, 001.002

Generated with autogen version 11w35 on 06-Dec-2011 11:14:10
DO NOT EDIT - changes will be lost at next autogeneration

Copyright (c) Nokia Corporation. All rights reserved.


ISI version change history

Version     : 001.002    APPROVED    20-Sep-2006    Jens Kristoffersen
Reason      : CR
Reference   : CR: JK06092047383
Description : pn_name_msg_16.h is now also autogenerated

Version     : 001.001    APPROVED    01-Sep-2006    Jens Kristoffersen
Reason      : SCO: Restructuring of the Phonet header-file structure.
Reference   : WP RM-RIM SCO: 006-5259: SWAM CR: JK06032331288, SWAM
              inspection: JK06062143049
Description : Inclusion of pn_conf.h removed. Some constants are now
              hardcoded in macro file

Version     : 001.000    APPROVED    01-Jun-2006    Jens Kristoffersen
Reason      : SCO: Restructuring of the Phonet header-file structure.
Reference   : WP RM-RIM SCO: 006-5259: SWAM CR: JK06032331288, SWAM
              inspection: JK06062143049
Description : Constants moved from pn_const.h. h-file is now also
              autogenerated

------------------------------------------------------------------------------

Description

This interface provides name service interface.

*/

#ifndef _PN_NAME_MSG_H
#define _PN_NAME_MSG_H

#include "pn.h"
/* === Name Service Messages === */ 
#include "isi_conf.h"

#ifndef PN_NAME_ISI_VERSION
#define PN_NAME_ISI_VERSION
#define PN_NAME_ISI_VERSION_Z   1
#define PN_NAME_ISI_VERSION_Y   2
#endif

#define PN_NAME_ISI_MIN_VERSION(z,y) \
 ((PN_NAME_ISI_VERSION_Z == (z) && PN_NAME_ISI_VERSION_Y >= (y)) || \
  (PN_NAME_ISI_VERSION_Z > (z)))

#if !PN_NAME_ISI_MIN_VERSION(1,0)
#error The specified interface version is not supported by this header file
#elif PN_NAME_ISI_MIN_VERSION(1,3)
#error The specified interface version is not supported by this header file
#endif


/* ----------------------------------------------------------------------- */
/* Constants                                                               */
/* ----------------------------------------------------------------------- */

#define PN_NAME_MAX_MSG_ENTRIES                  0x0A

/* ----------------------------------------------------------------------- */
/* Bitmask Table: PN_NAME_RECORD_ATTR                                      */
/* ----------------------------------------------------------------------- */
/* Each name record in the PhoNet name table has an attribute byte */
/* This record "removes" an entry in a ROM table associated with the name
   service. This entry is in RAM, and only the name is valid, i.e. there is
   no associated address
*/
#define PN_NAME_UNDEF                            0x01  /* -------1 */
/* This entry cannot be changed (probably for security reasons) */
#define PN_NAME_NOCHG                            0x02  /* ------1- */
/* This name will not be published outside the physical device */
#define PN_NAME_PRIVATE                          0x04  /* -----1-- */
#define PN_NAME_CLEARED                          0x80  /* 1------- */

/* ----------------------------------------------------------------------- */
/* Constant Table: NAME_SERVICE_CC                                         */
/* ----------------------------------------------------------------------- */
/* This indicated the operation was successful */
#define PN_NAME_OK                               0x00
/* This operation failed (probably for security reasons) */
#define PN_NAME_NOT_ALLOWED                      0x01
/* This operation failed due to lack of RAM memory */
#define PN_NAME_NO_ROOM                          0x02
/* Name was not found */
#define PN_NAME_UNKNOWN                          0x03

/* ----------------------------------------------------------------------- */
/* Message ID's                                                            */
/* ----------------------------------------------------------------------- */

#define PNS_NAME_QUERY_REQ                       0x01
#define PNS_NAME_QUERY_RESP                      0x02
#define PNS_NAME_ADD_IND                         0x03
#define PNS_NAME_REMOVE_IND                      0x04
#define PNS_NAME_ADD_REQ                         0x05
#define PNS_NAME_ADD_RESP                        0x06
#define PNS_NAME_REMOVE_REQ                      0x07
#define PNS_NAME_REMOVE_RESP                     0x08

/* ----------------------------------------------------------------------- */
/* Sequence: PN_NAME_SRV_ITEM_STR                                          */
/* ----------------------------------------------------------------------- */
/* Specification of a name */
typedef PN_MSG_HDR_STR NAME_SRV_HDR_STR;
#define NAME_SRV_HDR_STR_LEN  PN_MSG_HDR_STR_LEN

typedef struct
    {
    uint32  name;
    uint8   dev;
    uint8   obj;
    uint8   flags;    /* Values from the bitmask table PN_NAME_RECORD_ATTR */
    FILLER_BYTE reserved;
    } PN_NAME_SRV_ITEM_STR;

#define PN_NAME_SRV_ITEM_STR_LEN   (8)


/* ----------------------------------------------------------------------- */
/* Message: PNS_NAME_QUERY_REQ                                             */
/* ----------------------------------------------------------------------- */
/* Makes a query into the nameservice table */

typedef struct
    {
    NAME_SRV_HDR_STR header;
    uint8   UTID;
    PN_NAME_MESSAGE sub_function;
    FILLER_BYTE reserved_1;
    FILLER_BYTE reserved_2;
    uint32  name;
    /* 32-bit mask. Only check matching name bits where mask has 1-bit */
    uint32  bit_mask;
    } PNS_NAME_QUERY_REQ_STR;

#define PNS_NAME_QUERY_REQ_STR_LEN   (20)


/* ----------------------------------------------------------------------- */
/* Message: PNS_NAME_QUERY_RESP                                            */
/* ----------------------------------------------------------------------- */
/* Response to name query */

typedef struct
    {
    NAME_SRV_HDR_STR header;
    uint8   UTID;
    PN_NAME_MESSAGE sub_function;
    uint16  total_matches;
    uint16  matches_in_msg;
    FILLER_BYTE reserved_1;
    FILLER_BYTE reserved_2;
    PN_NAME_SRV_ITEM_STR name_entry_tbl[PN_NAME_MAX_MSG_ENTRIES];
    } PNS_NAME_QUERY_RESP_STR;

#define PNS_NAME_QUERY_RESP_STR_LEN   (24)


/* ----------------------------------------------------------------------- */
/* Message: PNS_NAME_ADD_IND                                               */
/* ----------------------------------------------------------------------- */
/* Indicates that a name was added */

typedef struct
    {
    NAME_SRV_HDR_STR header;
    uint8   UTID;
    PN_NAME_MESSAGE sub_function;
    uint16  total_matches;
    uint16  matches_in_msg;
    FILLER_BYTE reserved_1;
    FILLER_BYTE reserved_2;
    PN_NAME_SRV_ITEM_STR name_entry_tbl[PN_NAME_MAX_MSG_ENTRIES];
    } PNS_NAME_ADD_IND_STR;

#define PNS_NAME_ADD_IND_STR_LEN   (24)


/* ----------------------------------------------------------------------- */
/* Message: PNS_NAME_REMOVE_IND                                            */
/* ----------------------------------------------------------------------- */
/* Indicates that a name was removed */

typedef struct
    {
    NAME_SRV_HDR_STR header;
    uint8   UTID;
    PN_NAME_MESSAGE sub_function;
    uint16  total_matches;
    uint16  matches_in_msg;
    FILLER_BYTE reserved_1;
    FILLER_BYTE reserved_2;
    PN_NAME_SRV_ITEM_STR name_entry_tbl[PN_NAME_MAX_MSG_ENTRIES];
    } PNS_NAME_REMOVE_IND_STR;

#define PNS_NAME_REMOVE_IND_STR_LEN   (24)


/* ----------------------------------------------------------------------- */
/* Message: PNS_NAME_ADD_REQ                                               */
/* ----------------------------------------------------------------------- */
/* Adds a name in the nameservice table */

typedef struct
    {
    NAME_SRV_HDR_STR header;
    uint8   UTID;
    PN_NAME_MESSAGE sub_function;
    FILLER_BYTE reserved_1;
    FILLER_BYTE reserved_2;
    PN_NAME_SRV_ITEM_STR name_entry;
    } PNS_NAME_ADD_REQ_STR;

#define PNS_NAME_ADD_REQ_STR_LEN   (20)


/* ----------------------------------------------------------------------- */
/* Message: PNS_NAME_ADD_RESP                                              */
/* ----------------------------------------------------------------------- */
/* Response to adding a name */

typedef struct
    {
    NAME_SRV_HDR_STR header;
    uint8   UTID;
    PN_NAME_MESSAGE sub_function;
    PN_NAME_ERR_REASON reason;
    } PNS_NAME_ADD_RESP_STR;

#define PNS_NAME_ADD_RESP_STR_LEN   (11)


/* ----------------------------------------------------------------------- */
/* Message: PNS_NAME_REMOVE_REQ                                            */
/* ----------------------------------------------------------------------- */
/* Removing a name from the nameservice table */

typedef struct
    {
    NAME_SRV_HDR_STR header;
    uint8   UTID;
    PN_NAME_MESSAGE sub_function;
    FILLER_BYTE reserved_1;
    FILLER_BYTE reserved_2;
    uint32  name;
    } PNS_NAME_REMOVE_REQ_STR;

#define PNS_NAME_REMOVE_REQ_STR_LEN   (16)


/* ----------------------------------------------------------------------- */
/* Message: PNS_NAME_REMOVE_RESP                                           */
/* ----------------------------------------------------------------------- */
/* Response to removing a name */

typedef struct
    {
    NAME_SRV_HDR_STR header;
    uint8   UTID;
    PN_NAME_MESSAGE sub_function;
    PN_NAME_ERR_REASON reason;
    } PNS_NAME_REMOVE_RESP_STR;

#define PNS_NAME_REMOVE_RESP_STR_LEN   (11)




#endif /* _PN_NAME_MSG_H */
